//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class DESRecordStoreManager, MLRPluginFactory, MLRTrialManager, NSHashTable, NSMutableArray, NSString, NSURL;
@protocol DESBundleRegistryManaging, OS_dispatch_queue;

@interface MLRTaskScheduler : NSObject
{
    NSURL *_baseURL;	// 8 = 0x8
    id <DESBundleRegistryManaging> _bundleRegistry;	// 16 = 0x10
    MLRPluginFactory *factory;	// 24 = 0x18
    DESRecordStoreManager *_recordStoreManager;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_taskWorkerQueue;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_taskStopQueue;	// 48 = 0x30
    _Bool _alwaysRun;	// 56 = 0x38
    NSString *_localeIdentifier;	// 64 = 0x40
    NSHashTable *_workers;	// 72 = 0x48
    NSMutableArray *_tasks;	// 80 = 0x50
    CDUnknownBlockType _completionAfterTaskRun;	// 88 = 0x58
    _Bool _busy;	// 96 = 0x60
    unsigned long long _numOfCompletedTasks;	// 104 = 0x68
    unsigned long long _numOfExpectedTasks;	// 112 = 0x70
    _Bool _requestedToStop;	// 120 = 0x78
    MLRTrialManager *_trialManager;	// 128 = 0x80
    MLRPluginFactory *_pluginFactory;	// 136 = 0x88
}

- (void).cxx_destruct;	// IMP=0x0020000000019131
- (_Bool)taskIsDeferred;	// IMP=0x0010000000019128
- (void)stop;	// IMP=0x0010000000018ee6
- (void)startAllBMLTTasksWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000018bf2
- (void)startAllClassBTasksWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000018b7d
- (id)allClassBBundleIDs;	// IMP=0x0010000000018b13
- (void)startAllClassAPluggedInTasksWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000018a9e
- (id)allClassAPluggedInBundleIDs;	// IMP=0x0010000000018a34
- (void)startAllClassAOnBatteryTasksWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000000189bf
- (id)allClassAOnBatteryBundleIDs;	// IMP=0x0010000000018955
- (void)startTasksWithAllowedBundles:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000186c8
- (void)startAllUnrestrictedTasksWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000001862e
- (void)startTasksForBundles:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000184f3
- (void)startTasks:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000183f1
- (void)_startTasks:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000018178
- (id)tasksForBundles:(id)arg1;	// IMP=0x0010000000017cd8
- (void)addPFLSchedulingTaskToTasks:(id)arg1 withBundleID:(id)arg2;	// IMP=0x0010000000017ae8
- (_Bool)allowBypassDiagnosticsUsage:(id)arg1;	// IMP=0x0010000000017a81
- (_Bool)diagnosticsUsageAllowed;	// IMP=0x0010000000017a77
- (double)_maxTimeLimitForBundle:(id)arg1;	// IMP=0x0010000000017a46
- (void)updateInterval;	// IMP=0x0010000000017a12
- (void)_completeTaskRunWithResult:(id)arg1 error:(id)arg2;	// IMP=0x0010000000017973
- (void)createTaskWorkerForTask:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000178e1
- (void)createTaskWorkerBMLTTask:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000176e1
- (void)createTaskWorkerForLocalDebugTask:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000175c6
- (void)createTaskWorkerForShadowEvaluationTask:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000001732e
- (void)createTaskWorkerForTrialPFLTask:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000016f66
- (void)createTaskWorkerForDodMLTask:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000016c52
- (void)_scheduleNextTask;	// IMP=0x0010000000016156
- (id)_requestedToStopError;	// IMP=0x001000000001608b
- (id)initWithBaseURL:(id)arg1 localeIdentifier:(id)arg2 fromDesTool:(_Bool)arg3 bundleRegistry:(id)arg4 recordStoreManager:(id)arg5;	// IMP=0x0010000000015e37
- (id)initWithBaseURL:(id)arg1 localeIdentifier:(id)arg2 fromDesTool:(_Bool)arg3;	// IMP=0x0010000000015e11

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

