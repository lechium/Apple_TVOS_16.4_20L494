//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CSDAudioArbitrationController, CSDAudioController, CSDCallController, CSDCallFilterController, CSDCallHistoryManager, CSDCallHistoryManagerXPCServer, CSDCallProviderManager, CSDCallProviderManagerXPCServer, CSDClientManager, CSDProviderCallDataSource, CSDRecentsController, CSDRelayCallDataSource, CSDRelayCallDelegate, CSDRelayMessagingController, CSDRouteController, CSDVoIPApplicationController, MISSING_TYPE, NSNumber, NSString, TUCallCenter, TUHardwareControlsBroadcaster;
@protocol CSDCallContainer, CSDProcessObserverProtocol, OS_dispatch_queue, TUFeatureFlags;

@interface CSDCallStateController : NSObject
{
    CSDCallHistoryManager *_callHistoryManager;	// 8 = 0x8
    CSDCallProviderManager *_callProviderManager;	// 16 = 0x10
    CSDCallController *_callController;	// 24 = 0x18
    CSDVoIPApplicationController *_voipApplicationController;	// 32 = 0x20
    CSDRelayMessagingController *_relayMessagingController;	// 40 = 0x28
    CSDRecentsController *_recentsController;	// 48 = 0x30
    CSDAudioController *_audioController;	// 56 = 0x38
    CSDAudioArbitrationController *_audioArbitrationController;	// 64 = 0x40
    MISSING_TYPE *_localRouteController;	// 72 = 0x48
    CSDRouteController *_pairedHostDeviceRouteController;	// 80 = 0x50
    NSObject<OS_dispatch_queue> *_queue;	// 88 = 0x58
    NSString *_currentlyTrackedA2DPRouteIdentifier;	// 96 = 0x60
    CSDCallHistoryManagerXPCServer *_callHistoryManagerXPCServer;	// 104 = 0x68
    CSDCallProviderManagerXPCServer *_callProviderManagerXPCServer;	// 112 = 0x70
    id <TUFeatureFlags> _featureFlags;	// 120 = 0x78
    CSDRelayCallDataSource *_relayCallDataSource;	// 128 = 0x80
    CSDRelayCallDelegate *_relayCallDelegate;	// 136 = 0x88
    CSDClientManager *_clientManager;	// 144 = 0x90
    TUHardwareControlsBroadcaster *_hardwareControlsBroadcaster;	// 152 = 0x98
    id <CSDProcessObserverProtocol> _processObserver;	// 160 = 0xa0
    CDUnknownBlockType _clientInvalidationHandler;	// 168 = 0xa8
    CSDProviderCallDataSource *_providerCallDataSource;	// 176 = 0xb0
    NSNumber *_shouldHandleSecureMicrophoneEvents;	// 184 = 0xb8
}

+ (void)sanitizeJoinConversationRequest:(id)arg1;	// IMP=0x00200000001396a5
- (void).cxx_destruct;	// IMP=0x00200000001469bf
@property(retain, nonatomic) NSNumber *shouldHandleSecureMicrophoneEvents; // @synthesize shouldHandleSecureMicrophoneEvents=_shouldHandleSecureMicrophoneEvents;
@property(readonly, nonatomic) CSDProviderCallDataSource *providerCallDataSource; // @synthesize providerCallDataSource=_providerCallDataSource;
@property(copy, nonatomic) CDUnknownBlockType clientInvalidationHandler; // @synthesize clientInvalidationHandler=_clientInvalidationHandler;
@property(readonly, nonatomic) id <CSDProcessObserverProtocol> processObserver; // @synthesize processObserver=_processObserver;
@property(readonly, nonatomic) TUHardwareControlsBroadcaster *hardwareControlsBroadcaster; // @synthesize hardwareControlsBroadcaster=_hardwareControlsBroadcaster;
@property(readonly, nonatomic) CSDClientManager *clientManager; // @synthesize clientManager=_clientManager;
@property(readonly, nonatomic) CSDRelayCallDelegate *relayCallDelegate; // @synthesize relayCallDelegate=_relayCallDelegate;
@property(readonly, nonatomic) CSDRelayCallDataSource *relayCallDataSource; // @synthesize relayCallDataSource=_relayCallDataSource;
@property(readonly, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(readonly, nonatomic) CSDCallProviderManagerXPCServer *callProviderManagerXPCServer; // @synthesize callProviderManagerXPCServer=_callProviderManagerXPCServer;
@property(readonly, nonatomic) CSDCallHistoryManagerXPCServer *callHistoryManagerXPCServer; // @synthesize callHistoryManagerXPCServer=_callHistoryManagerXPCServer;
@property(copy, nonatomic) NSString *currentlyTrackedA2DPRouteIdentifier; // @synthesize currentlyTrackedA2DPRouteIdentifier=_currentlyTrackedA2DPRouteIdentifier;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) CSDRouteController *pairedHostDeviceRouteController; // @synthesize pairedHostDeviceRouteController=_pairedHostDeviceRouteController;
@property(readonly, nonatomic) CSDRouteController *localRouteController; // @synthesize localRouteController=_localRouteController;
@property(retain, nonatomic) CSDAudioArbitrationController *audioArbitrationController; // @synthesize audioArbitrationController=_audioArbitrationController;
@property(retain, nonatomic) CSDAudioController *audioController; // @synthesize audioController=_audioController;
@property(readonly, nonatomic) CSDRecentsController *recentsController; // @synthesize recentsController=_recentsController;
@property(retain, nonatomic) CSDRelayMessagingController *relayMessagingController; // @synthesize relayMessagingController=_relayMessagingController;
@property(retain, nonatomic) CSDVoIPApplicationController *voipApplicationController; // @synthesize voipApplicationController=_voipApplicationController;
@property(readonly, nonatomic) CSDCallController *callController; // @synthesize callController=_callController;
@property(readonly, nonatomic) CSDCallProviderManager *callProviderManager; // @synthesize callProviderManager=_callProviderManager;
@property(readonly, nonatomic) CSDCallHistoryManager *callHistoryManager; // @synthesize callHistoryManager=_callHistoryManager;
- (_Bool)isInCallUIActive;	// IMP=0x0010000000146861
- (void)updateAudioArbitration;	// IMP=0x001000000014685b
- (void)didChangeFaceTimeCallingAvailability;	// IMP=0x0010000000146855
- (void)didChangeRelayCallingCapabilities;	// IMP=0x00100000001467df
- (void)providersChangedForProviderManager:(id)arg1;	// IMP=0x00100000001467d9
- (oneway void)reportLocalPreviewStoppedForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000014669f
- (oneway void)requestInitialState:(CDUnknownBlockType)arg1;	// IMP=0x0010000000146577
- (_Bool)isTrackingVoIPCallForBundleIdentifier:(id)arg1;	// IMP=0x0010000000146333
- (id)currentCallsForClient:(id)arg1;	// IMP=0x001000000014626f
- (id)callForClient:(id)arg1 usingCall:(id)arg2;	// IMP=0x00100000001461da
- (id)currentProxyCalls;	// IMP=0x0010000000145fc0
- (void)propertiesChangedForCall:(id)arg1;	// IMP=0x0010000000145f4e
- (void)messagingConnectionCouldNotEstablishLinkForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x0010000000145e11
- (void)messagingConnectionFailedForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x0010000000145d12
- (void)messagingConnectionEndedForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x0010000000145ba2
- (oneway void)setClientCapabilities:(id)arg1;	// IMP=0x0010000000145a9d
- (oneway void)filterStatusForAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000014588e
- (oneway void)isUnknownAddress:(id)arg1 normalizedAddress:(id)arg2 forBundleIdentifier:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000014561f
- (oneway void)shouldRestrictAddresses:(id)arg1 forBundleIdentifier:(id)arg2 performSynchronously:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000014552a
- (oneway void)willRestrictAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000014531b
- (oneway void)policyForAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000145221
- (oneway void)containsRestrictedHandle:(id)arg1 forBundleIdentifier:(id)arg2 performSynchronously:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000145037
- (oneway void)pickPairedHostDeviceRouteWithUniqueIdentifier:(id)arg1 shouldWaitUntilAvailable:(_Bool)arg2;	// IMP=0x0010000000144e66
- (oneway void)pickLocalRouteWithUniqueIdentifier:(id)arg1 shouldWaitUntilAvailable:(_Bool)arg2;	// IMP=0x0010000000144c95
- (oneway void)pairedHostDeviceRoutesByUniqueIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x0010000000144b3d
- (oneway void)localRoutesByUniqueIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x00100000001449e5
- (oneway void)setCurrentAudioOutputDeviceToDeviceWithUID:(id)arg1;	// IMP=0x0010000000144806
- (oneway void)setCurrentAudioInputDeviceToDeviceWithUID:(id)arg1;	// IMP=0x0010000000144627
- (oneway void)joinConversationWithRequest:(id)arg1;	// IMP=0x0010000000144490
- (oneway void)sendUserScoreToRTCReporting:(id)arg1 withScore:(int)arg2;	// IMP=0x0010000000144399
- (oneway void)activateInCallUIWithActivityContinuationIdentifier:(id)arg1;	// IMP=0x0010000000144393
- (oneway void)shouldAllowRingingCallStatusIndicator:(_Bool)arg1;	// IMP=0x001000000014438d
- (oneway void)shouldSuppressInCallStatusBar:(_Bool)arg1;	// IMP=0x0010000000144387
- (oneway void)setBluetoothAudioFormatForCallWithUniqueProxyIdentifier:(id)arg1 bluetoothAudioFormat:(long long)arg2;	// IMP=0x0010000000144117
- (oneway void)setSharingScreen:(_Bool)arg1 attributes:(id)arg2 forCallWithUniqueProxyIdentifier:(id)arg3;	// IMP=0x0010000000143ed1
- (oneway void)setScreenShareAttributesForCallWithUniqueProxyIdentifier:(id)arg1 attributes:(id)arg2;	// IMP=0x0010000000143ca5
- (oneway void)setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:(id)arg1 presentationState:(int)arg2;	// IMP=0x0010000000143aa4
- (oneway void)setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:(id)arg1 size:(struct CGSize)arg2;	// IMP=0x0010000000143864
- (oneway void)enteredBackgroundForAllCalls;	// IMP=0x0010000000143747
- (oneway void)willEnterBackgroundForAllCalls;	// IMP=0x001000000014361e
- (oneway void)enteredForegroundForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x00100000001433e2
- (oneway void)updateCallWithProxy:(id)arg1;	// IMP=0x0010000000143253
- (oneway void)sendHardPauseDigitsForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x0010000000143078
- (oneway void)pullHostedCallsFromPairedHostDevice;	// IMP=0x0010000000142f4f
- (oneway void)pushHostedCallsToDestination:(id)arg1;	// IMP=0x0010000000142dc0
- (oneway void)setSharingScreen:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x0010000000142af4
- (oneway void)setMixesVoiceWithMedia:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x0010000000142828
- (oneway void)setIsSendingVideo:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x0010000000142514
- (oneway void)setDownlinkMuted:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x0010000000142248
- (oneway void)setUplinkMuted:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x0010000000141f7c
- (oneway void)sendMMIOrUSSDCodeWithRequest:(id)arg1;	// IMP=0x0010000000141ded
- (oneway void)pullCallFromClientUsingHandoffActivityUserInfo:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000141ada
- (oneway void)pushRelayingCallsToHostWithSourceIdentifier:(id)arg1;	// IMP=0x001000000014194b
- (oneway void)pullRelayingCallsFromClientAndDisconnectCallsWithUPI:(id)arg1;	// IMP=0x00100000001417de
- (oneway void)setTTYType:(int)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x00100000001415d9
- (oneway void)disconnectAllCalls;	// IMP=0x00100000001414b0
- (oneway void)disconnectCurrentCallAndActivateHeld;	// IMP=0x0010000000141387
- (oneway void)playDTMFToneForCallWithUniqueProxyIdentifier:(id)arg1 key:(unsigned char)arg2;	// IMP=0x00100000001410bb
- (oneway void)swapCalls;	// IMP=0x0010000000140f92
- (oneway void)ungroupCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x0010000000140cea
- (oneway void)groupCallWithUniqueProxyIdentifier:(id)arg1 withOtherCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x00100000001408ff
- (oneway void)disconnectCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x0010000000140657
- (oneway void)requestVideoUpgradeForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x0010000000140082
- (oneway void)unholdCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000013fdda
- (oneway void)holdCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000013fb32
- (oneway void)answerCallWithRequest:(id)arg1;	// IMP=0x001000000013f7e9
- (void)_dial:(id)arg1 displayContext:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000013f700
- (oneway void)dialWithRequest:(id)arg1 displayContext:(id)arg2;	// IMP=0x001000000013f525
- (oneway void)dialWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000013f199
- (void)_handleMessagingConnectionEndForCalls:(id)arg1 withDisconnectedReason:(int)arg2 didStartConnecting:(_Bool)arg3;	// IMP=0x001000000013ee3f
- (void)performUpdateCallWithProxy:(id)arg1;	// IMP=0x001000000013ed8b
- (void)performPullHostedCallsFromPairedHostDevice;	// IMP=0x001000000013eb22
- (void)performPushHostedCallsToDestination:(id)arg1;	// IMP=0x001000000013e8cf
- (void)performPushRelayingCallsToHostWithSourceIdentifier:(id)arg1;	// IMP=0x001000000013e85d
- (void)performPullCallFromClientUsingHandoffActivityUserInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000013e759
- (void)performSetUplinkMuted:(_Bool)arg1 forCall:(id)arg2;	// IMP=0x001000000013e4e2
- (void)performSetTTYType:(int)arg1 forCall:(id)arg2;	// IMP=0x001000000013e30a
- (void)performPlayDTMFToneForCall:(id)arg1 key:(unsigned char)arg2;	// IMP=0x001000000013e282
- (void)performSendMMIOrUSSDCodeWithRequest:(id)arg1;	// IMP=0x001000000013e210
- (void)performPullRelayingCallsFromClientAndUpdateEndpoint:(_Bool)arg1 updateExpectedDestination:(_Bool)arg2 upiToDisconnect:(id)arg3;	// IMP=0x001000000013df1c
- (void)performPullRelayingCallsFromClientAndUpdateEndpoint:(_Bool)arg1 updateExpectedDestination:(_Bool)arg2;	// IMP=0x001000000013df07
- (void)performDisconnectAllCalls;	// IMP=0x001000000013dc1e
- (void)performDisconnectCurrentCallAndActivateHeld;	// IMP=0x001000000013d08a
- (void)performDisconnectCall:(id)arg1;	// IMP=0x001000000013ccd1
- (void)performAnswerCallAsAudioDowngrade:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000013cc4d
- (void)performAnswerCallAsVideoUpgrade:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000013cbc9
- (void)performHoldActiveAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000013c33d
- (void)performEndHeldAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000013bb0a
- (void)performEndActiveAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000013b42e
- (id)callWithUniqueProxyIdentifier:(id)arg1 fromCallsToAnswer:(id)arg2;	// IMP=0x001000000013b25a
- (void)performAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000013afef
- (void)performSwapCalls;	// IMP=0x001000000013a9c8
- (void)performUngroupCall:(id)arg1;	// IMP=0x001000000013a616
- (void)performGroupCall:(id)arg1 withCall:(id)arg2;	// IMP=0x001000000013a22e
- (void)performUnholdCall:(id)arg1;	// IMP=0x001000000013a040
- (void)performHoldCall:(id)arg1;	// IMP=0x0010000000139e52
- (id)performJoinConversation:(id)arg1;	// IMP=0x0010000000139d1c
- (id)performDialCall:(id)arg1 displayContext:(id)arg2;	// IMP=0x0010000000139483
- (void)setCallDelegatesIfNeeded:(id)arg1;	// IMP=0x0010000000139210
- (id)outgoingCallFromDialRequest:(id)arg1;	// IMP=0x0010000000139160
- (void)_updateBluetoothAudioFormatIfNecessaryDueToMVMChange:(_Bool)arg1;	// IMP=0x001000000013912b
- (void)_handleDisconnectedCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000138fec
- (void)_updateRoutesForDisconnectedCall;	// IMP=0x0010000000138f6b
- (void)_handleDisconnectedCallStatusChangeForVoicemailCall;	// IMP=0x0010000000138ea5
- (void)_handleHeldCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000138e31
- (void)_handleActiveCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000138d43
- (void)_handleConnectedCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000138c2c
- (void)_handleConnectingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000138a5b
- (void)_handleSendingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x00100000001389be
- (void)_handleRingingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x00100000001386e8
- (_Bool)_nonRingingCallExistsOnThisDevice;	// IMP=0x001000000013846c
- (void)_handlePreferredRouteChangedNotification:(id)arg1;	// IMP=0x0010000000137fad
- (void)_handleCSDRelayPairedDeviceConnectedNotification:(id)arg1;	// IMP=0x0010000000137fa7
- (void)_handleCSDRelayIDSActiveAccountsChanged:(id)arg1;	// IMP=0x0010000000137e53
- (void)_handleInvitationSentNotification:(id)arg1;	// IMP=0x0010000000137d11
- (void)_handleFaceTimeAvailabilityChangedNotification:(id)arg1;	// IMP=0x0010000000137bc8
- (void)_handleCallIsUsingBasebandChangedNotification:(id)arg1;	// IMP=0x0010000000137a37
- (void)_handleHardPauseStateChangedNotification:(id)arg1;	// IMP=0x00100000001378d3
- (void)_handleResetCallStateNotification:(id)arg1;	// IMP=0x00100000001377c5
- (void)_handleCallModelChangedNotification:(id)arg1;	// IMP=0x0010000000137683
- (void)_handleCallShouldSuppressRingtoneChangedNotification:(id)arg1;	// IMP=0x0010000000137519
- (void)_handleCallWantsHoldMusicChangedNotification:(id)arg1;	// IMP=0x00100000001373c3
- (void)_handleNeedsManualInCallSoundsChangedNotification:(id)arg1;	// IMP=0x0010000000137281
- (void)_handleCallConnectedNotification:(id)arg1;	// IMP=0x001000000013715d
- (void)_handleCallStartedConnectingNotification:(id)arg1;	// IMP=0x0010000000137015
- (void)_handleCallStartedOutgoingNotification:(id)arg1;	// IMP=0x0010000000136eac
- (void)_handleCallStatusChangedNotification:(id)arg1;	// IMP=0x0010000000136b20
- (void)_handleSupportsEmergencyFallbackChangedNotification:(id)arg1;	// IMP=0x00100000001369ab
- (void)_handleFailureExpectedChangedNotification:(id)arg1;	// IMP=0x0010000000136836
- (MISSING_TYPE *)_handleMixesVoiceWithMediaChangedNotification: /* Error: Ran out of types for this method. */;	// IMP=0x0010000000136716
- (void)_handleTUCallTTYTypeChangedNotification:(id)arg1;	// IMP=0x0010000000136592
- (void)_handleTUCallSupportsTTYWithVoiceChangedNotification:(id)arg1;	// IMP=0x001000000013641d
- (void)_handleUpdateRemoteUplinkMutedChangedNotification:(id)arg1;	// IMP=0x00100000001362db
- (void)_handleCallDisplayContextChangedNotification:(id)arg1;	// IMP=0x0010000000136199
- (void)sendClientsNotificationName:(id)arg1 forCall:(id)arg2 userInfo:(id)arg3;	// IMP=0x0010000000135f17
- (void)sendClientsNotificationName:(id)arg1 forCall:(id)arg2;	// IMP=0x0010000000135f02
- (void)sendClientsNotificationName:(id)arg1;	// IMP=0x0010000000135eeb
- (void)resetClientCallProvisionalStates;	// IMP=0x0010000000135dee
- (void)updateClientsWithMeterLevel:(float)arg1 inDirection:(int)arg2 forCalls:(id)arg3;	// IMP=0x0010000000135b43
- (void)updateClientsWithFrequency:(id)arg1 inDirection:(int)arg2 forCalls:(id)arg3;	// IMP=0x001000000013582c
- (_Bool)isCallEligible:(id)arg1 forClient:(id)arg2;	// IMP=0x00100000001357b2
- (id)eligibleCallsByFilteringCalls:(id)arg1 forClient:(id)arg2;	// IMP=0x00100000001355c6
- (void)updateClientsWithCall:(id)arg1;	// IMP=0x0010000000134f9f
- (void)_endProxyCallsForConnectingVideoCall;	// IMP=0x0010000000134d54
- (_Bool)_shouldLaunchInCallApplicationForProviderOfCall:(id)arg1;	// IMP=0x0010000000134d4c
- (void)_launchInCallApplicationForCall:(id)arg1 withURL:(id)arg2;	// IMP=0x0010000000134bd1
- (void)_launchInCallApplicationForAnsweringCallIfNecessary:(id)arg1;	// IMP=0x0010000000134bcb
- (void)_launchInCallApplicationForExistingCall;	// IMP=0x0010000000134bc5
- (void)_launchInCallApplicationForOutgoingCallIfNecessary:(id)arg1;	// IMP=0x0010000000134a6e
- (void)_launchInCallApplicationForOutgoingConversationIfNecessary:(id)arg1;	// IMP=0x0010000000134a68
- (void)_launchInCallApplicationForIncomingCallIfNecessary:(id)arg1;	// IMP=0x0010000000134911
- (void)_answerIncomingCallAsConversation:(id)arg1;	// IMP=0x001000000013473d
- (void)_answerIncomingCall:(id)arg1 withBehavior:(long long)arg2;	// IMP=0x00100000001345ea
- (void)_handleCarPlayControlEventNotification:(id)arg1;	// IMP=0x0010000000133d7f
- (void)_handleAudioSessionInterruptionNotification:(id)arg1;	// IMP=0x0010000000133afb
- (_Bool)shouldHandleCarPlayControlEvents;	// IMP=0x0010000000133af3
- (void)_requestCallStateFromHost;	// IMP=0x0010000000133aed
- (void)_handleRelayCallingChanged;	// IMP=0x0010000000133592
@property(readonly, nonatomic) _Bool shouldRelayToOtherDevices;
@property(readonly, nonatomic) CSDCallFilterController *callFilterController;
@property(readonly, nonatomic) id <CSDCallContainer> callContainer;
@property(readonly, nonatomic) TUCallCenter *callCenter;
- (void)registerForSecureMicEvents;	// IMP=0x00100000001331fc
- (void)_mediaServicesWereReset:(id)arg1;	// IMP=0x0010000000133140
- (void)dealloc;	// IMP=0x001000000013305d
- (void)invalidate;	// IMP=0x0010000000133020
- (id)initWithQueue:(id)arg1 featureFlags:(id)arg2;	// IMP=0x00100000001312a4
- (id)initWithQueue:(id)arg1;	// IMP=0x0010000000131240

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

