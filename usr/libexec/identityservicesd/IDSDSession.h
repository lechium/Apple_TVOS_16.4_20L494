//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSBaseSocketPairConnection, IDSClientChannel, IDSConnectionContext, IDSDGroupStatusNotificationController, IDSDSessionInvitationManager, IDSDSessionKeyValueDelivery, IDSDSessionMessenger, IDSDSessionSharedState, IDSGFTMetricsCollector, IDSGroupEncryptionKeyManager, IDSGroupSessionDataCryptor, IDSGroupStatusNotificationParameters, IDSMultiplexerGroupSessionTransport, MISSING_TYPE, NSArray, NSData, NSDate, NSMutableArray, NSMutableData, NSMutableDictionary, NSNumber, NSSet, NSString, NSUUID;
@protocol IDSDSessionAvailabilityCheck;

@interface IDSDSession : NSObject
{
    _Bool _assertedRealTimeMode;	// 8 = 0x8
    id <IDSDSessionAvailabilityCheck> _availabilityCheck;	// 16 = 0x10
    NSDate *_awdStartTimestamp;	// 24 = 0x18
    NSString *_awdUniqueId;	// 32 = 0x20
    IDSBaseSocketPairConnection *_baseSocketPairConnection;	// 40 = 0x28
    _Bool _bypassUTun;	// 48 = 0x30
    NSMutableArray *_cachedClientData;	// 56 = 0x38
    long long _cachedNumberOfActiveParticipants;	// 64 = 0x40
    IDSClientChannel *_clientChannel;	// 72 = 0x48
    NSUUID *_clientChannelUUID;	// 80 = 0x50
    unsigned long long _connectionClaimed;	// 88 = 0x58
    IDSConnectionContext *_connectionContext;	// 96 = 0x60
    unsigned int _currentGenerationCounter;	// 104 = 0x68
    _Bool _disallowCellularInterface;	// 108 = 0x6c
    _Bool _disallowWifiInterface;	// 109 = 0x6d
    NSDate *_endDate;	// 112 = 0x70
    NSMutableDictionary *_extraConnections;	// 120 = 0x78
    unsigned long long _extraConnectionCount;	// 128 = 0x80
    unsigned int _groupSessionState;	// 136 = 0x88
    IDSGroupStatusNotificationParameters *_groupStatusNotificationParams;	// 144 = 0x90
    int _idsDataChannelClientPID;	// 152 = 0x98
    unsigned long long _initialLinkType;	// 160 = 0xa0
    NSString *_instanceID;	// 168 = 0xa8
    double _inviteRecvTime;	// 176 = 0xb0
    _Bool _joinGroupSessionPending;	// 184 = 0xb8
    CDUnknownBlockType _joinNotificationDeliveryTimeoutBlock;	// 192 = 0xc0
    unsigned char _keyMaterial[60];	// 200 = 0xc8
    long long _linkProtocol;	// 264 = 0x108
    double _membershipChangeEventTime;	// 272 = 0x110
    double _newKeyEventTime;	// 280 = 0x118
    double _summaryReportBaseTime;	// 288 = 0x120
    double _joinSendStartTime;	// 296 = 0x128
    double _joinSendEndTime;	// 304 = 0x130
    double _joinRecvTime;	// 312 = 0x138
    double _joinStartTime;	// 320 = 0x140
    double _clientChannelConnectTime;	// 328 = 0x148
    double _firstMKMReceivedTime;	// 336 = 0x150
    MISSING_TYPE *_firstMKMSentTime;	// 344 = 0x158
    double _firstPacketReceivedTime;	// 352 = 0x160
    struct *_packetBufferArray[8];	// 360 = 0x168
    unsigned long long _preferredAddressFamily;	// 424 = 0x1a8
    _Bool _preferCellularForCallSetup;	// 432 = 0x1b0
    NSNumber *_qrError;	// 440 = 0x1b8
    NSMutableArray *_qrEventsForRTCReports;	// 448 = 0x1c0
    NSNumber *_qrReason;	// 456 = 0x1c8
    unsigned int _reason;	// 464 = 0x1d0
    unsigned short _relayPort;	// 468 = 0x1d4
    _Bool _sessionStartedCalled;	// 470 = 0x1d6
    NSMutableData *_sessionInfoMetaData;	// 472 = 0x1d8
    _Bool _shouldAssertRealTimeMode;	// 480 = 0x1e0
    _Bool _sharedSessionHasJoined;	// 481 = 0x1e1
    _Bool _shouldConnectToQRServer;	// 482 = 0x1e2
    NSData *_skeData;	// 488 = 0x1e8
    int _socketDescriptor;	// 496 = 0x1f0
    NSDate *_startDate;	// 504 = 0x1f8
    _Bool _supressClientNotifications;	// 512 = 0x200
    _Bool _verboseFunctionalLogging;	// 513 = 0x201
    _Bool _verbosePerformanceLogging;	// 514 = 0x202
    _Bool _multiplexerEnabled;	// 515 = 0x203
    IDSMultiplexerGroupSessionTransport *_multiplexerTransport;	// 520 = 0x208
    double _channelDataCachedTime;	// 528 = 0x210
    _Bool _startedAsUPlusOneSession;	// 536 = 0x218
    _Bool _switchedToUPlusMany;	// 537 = 0x219
    _Bool _supportUnauthenticatedUser;	// 538 = 0x21a
    _Bool _isGFTService;	// 539 = 0x21b
    unsigned int _currentSessionStateCounter;	// 540 = 0x21c
    _Bool _isLightweightParticipant;	// 544 = 0x220
    _Bool _hasReportedReceivedMKM;	// 545 = 0x221
    IDSGroupEncryptionKeyManager *_dataBlobEncryptionManager;	// 552 = 0x228
    IDSGroupSessionDataCryptor *_cryptorForBlobs;	// 560 = 0x230
    NSMutableDictionary *_typeToKeyIDToEncryptedData;	// 568 = 0x238
    NSMutableDictionary *_typeToParticipantIDToDecryptedDataBlob;	// 576 = 0x240
    NSMutableDictionary *_keyIDToParticipantID;	// 584 = 0x248
    _Bool _isServerMaterialExchangeEnabled;	// 592 = 0x250
    NSSet *_serverDesiredKeyMaterialsFromGroupEncryptionController;	// 600 = 0x258
    CDUnknownBlockType _serverDesiredKeyMaterialsSigner;	// 608 = 0x260
    NSData *_encryptedDataBlob;	// 616 = 0x268
    NSData *_encryptedMirageHandshakeBlob;	// 624 = 0x270
    _Bool _reportedMKMOverQRArrivalTime;	// 632 = 0x278
    double _MKMOverQRQUICTime;	// 640 = 0x280
    double _MKMOverPushTime;	// 648 = 0x288
    double _MKMOverQRTime;	// 656 = 0x290
    _Bool _isFastSync;	// 664 = 0x298
    double _timeBase;	// 672 = 0x2a0
    struct os_unfair_lock_s _lock;	// 680 = 0x2a8
    NSString *_clientID;	// 688 = 0x2b0
    IDSDSessionInvitationManager *_invitationManager;	// 696 = 0x2b8
    IDSDSessionMessenger *_messenger;	// 704 = 0x2c0
    IDSGFTMetricsCollector *_metricsCollector;	// 712 = 0x2c8
    IDSDSessionKeyValueDelivery *_keyValueDelivery;	// 720 = 0x2d0
    IDSDSessionSharedState *_sharedState;	// 728 = 0x2d8
    IDSDGroupStatusNotificationController *_groupStatusNotificationController;	// 736 = 0x2e0
    NSSet *_serverDesiredMaterials;	// 744 = 0x2e8
}

- (void).cxx_destruct;	// IMP=0x001000000013b980
@property(readonly) NSSet *serverDesiredMaterials; // @synthesize serverDesiredMaterials=_serverDesiredMaterials;
@property(retain, nonatomic) IDSDGroupStatusNotificationController *groupStatusNotificationController; // @synthesize groupStatusNotificationController=_groupStatusNotificationController;
@property(retain, nonatomic) IDSDSessionSharedState *sharedState; // @synthesize sharedState=_sharedState;
@property(readonly, nonatomic) IDSDSessionKeyValueDelivery *keyValueDelivery; // @synthesize keyValueDelivery=_keyValueDelivery;
@property(readonly, nonatomic) IDSGFTMetricsCollector *metricsCollector; // @synthesize metricsCollector=_metricsCollector;
@property(readonly, nonatomic) NSData *encryptedMirageHandshakeBlob; // @synthesize encryptedMirageHandshakeBlob=_encryptedMirageHandshakeBlob;
@property(readonly, nonatomic) NSData *encryptedDataBlob; // @synthesize encryptedDataBlob=_encryptedDataBlob;
@property(nonatomic) _Bool sharedSessionHasJoined; // @synthesize sharedSessionHasJoined=_sharedSessionHasJoined;
@property(nonatomic) _Bool shouldConnectToQRServer; // @synthesize shouldConnectToQRServer=_shouldConnectToQRServer;
@property(retain, nonatomic) NSNumber *qrReason; // @synthesize qrReason=_qrReason;
@property(retain, nonatomic) NSNumber *qrError; // @synthesize qrError=_qrError;
@property(retain, nonatomic) IDSDSessionMessenger *messenger; // @synthesize messenger=_messenger;
@property(retain, nonatomic) IDSDSessionInvitationManager *invitationManager; // @synthesize invitationManager=_invitationManager;
@property(readonly, nonatomic) NSString *instanceID; // @synthesize instanceID=_instanceID;
@property(readonly, nonatomic) unsigned int groupSessionState; // @synthesize groupSessionState=_groupSessionState;
@property(readonly, nonatomic) _Bool disallowWifiInterface; // @synthesize disallowWifiInterface=_disallowWifiInterface;
@property(readonly, nonatomic) _Bool disallowCellularInterface; // @synthesize disallowCellularInterface=_disallowCellularInterface;
@property(retain, nonatomic) NSString *clientID; // @synthesize clientID=_clientID;
@property(readonly, nonatomic) NSArray *requiredLackOfCapabilities;
@property(readonly, nonatomic) NSArray *requiredCapabilities;
- (unsigned long long)connectionCountHint;	// IMP=0x001000000013b460
- (_Bool)_useBTDatagramPipe;	// IMP=0x001000000013b400
- (void)_setClientType:(long long)arg1;	// IMP=0x001000000013b3a0
- (_Bool)isLightweightParticipant;	// IMP=0x001000000013b380
- (_Bool)isScreenSharingSession;	// IMP=0x001000000013b320
- (unsigned int)state;	// IMP=0x001000000013b2c0
- (id)clientChannelUUID;	// IMP=0x001000000013b2a0
- (id)fromID;	// IMP=0x001000000013b230
- (id)groupID;	// IMP=0x001000000013b1c0
- (id)accountID;	// IMP=0x001000000013b150
- (id)participantID;	// IMP=0x001000000013b0e0
- (long long)clientType;	// IMP=0x001000000013b080
- (_Bool)enableQuickRelay;	// IMP=0x001000000013b020
- (_Bool)isInitiator;	// IMP=0x001000000013afc0
- (id)uniqueID;	// IMP=0x001000000013af50
- (id)destinationsLightweightStatus;	// IMP=0x001000000013aee0
- (id)destinations;	// IMP=0x001000000013ae70
- (void)setSeqRecvStart:(unsigned int)arg1;	// IMP=0x001000000013ad70
- (void)setSSRCRecv:(unsigned int)arg1;	// IMP=0x001000000013ad10
- (void)setRemoteUsePhoneContinuityLocalMessage:(id)arg1;	// IMP=0x001000000013ac80
- (void)setRemoteUseCloudPairedControlChannel:(id)arg1;	// IMP=0x001000000013abf0
- (void)setQuickRelaySessionToken:(id)arg1;	// IMP=0x001000000013ab60
- (void)setInviteTimeout:(long long)arg1;	// IMP=0x001000000013aaf0
- (void)setRemoteBlob:(id)arg1;	// IMP=0x001000000013aa60
- (void)receivedEndMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x001000000013a9b0
- (void)receivedSessionMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x001000000013a900
- (void)receivedCancelMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x001000000013a850
- (void)receivedDeclineMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x001000000013a7a0
- (void)receivedAcceptMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x001000000013a6f0
- (void)sendSessionMessage:(id)arg1 toDestinations:(id)arg2;	// IMP=0x001000000013a640
- (void)declineInvitationWithData:(id)arg1 forceFromID:(id)arg2 additionalMessageAttributes:(id)arg3;	// IMP=0x001000000013a570
- (void)declineInvitationWithData:(id)arg1;	// IMP=0x001000000013a4f0
- (void)declineInvitation;	// IMP=0x001000000013a4a0
- (void)acceptInvitationWithData:(id)arg1;	// IMP=0x001000000013a420
- (void)acceptInvitation;	// IMP=0x001000000013a3d0
- (void)cancelInvitationWithRemoteEndedReasonOverride:(unsigned int)arg1;	// IMP=0x001000000013a370
- (void)cancelInvitationWithData:(id)arg1;	// IMP=0x001000000013a2f0
- (void)cancelInvitation;	// IMP=0x001000000013a2a0
- (void)sendInvitationWithData:(id)arg1 declineOnError:(_Bool)arg2;	// IMP=0x001000000013a210
- (void)sendInvitationWithOptions:(id)arg1 declineOnError:(_Bool)arg2;	// IMP=0x001000000013a180
- (void)sendCancelInvitationMessage;	// IMP=0x001000000013a120
- (void)invitationDeclined;	// IMP=0x001000000013a0c0
- (_Bool)isWithDefaultPairedDevice;	// IMP=0x0010000000139fb0
- (void)didSessionReinitiated;	// IMP=0x0010000000139fa0
- (void)_receivedReinitiateBringupAckMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0010000000138f60
- (void)_receivedReinitiateBringupMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x00100000001382e0
- (void)_receivedReinitiateTeardownAckMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0010000000136e80
- (void)_receivedReinitiateTeardownMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x00100000001359e0
- (void)_receivedReinitiateRequestMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0010000000135640
- (void)receivedReinitiateMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0010000000135090
- (void)reinitiate;	// IMP=0x0010000000133100
- (void)registerMultiplexerTransport;	// IMP=0x0010000000132a50
- (void)getActiveParticipants:(id)arg1 pushTokenForParticipants:(id)arg2 isLightweightParticipant:(_Bool)arg3;	// IMP=0x0010000000131ef0
- (id)_createGroupSessionActiveParticipantsFromParticipants:(id)arg1 pushTokenForParticipants:(id)arg2;	// IMP=0x0010000000131440
- (void)_updateActiveLightweightParticipants:(id)arg1;	// IMP=0x0010000000130d50
- (void)_updateActiveParticipants:(id)arg1;	// IMP=0x0010000000130160
- (void)processAllocationErrorStatus:(int)arg1 errorCode:(int)arg2;	// IMP=0x001000000012fe10
- (void)onURI2ParticipantIDMappingChange:(id)arg1 allocateResponse:(id)arg2;	// IMP=0x001000000012f7f0
- (void)onParticipantID2PushTokenMappingChange:(id)arg1;	// IMP=0x001000000012eea0
- (unsigned long long)participantIDForAlias:(unsigned long long)arg1 salt:(id)arg2;	// IMP=0x001000000012e850
- (void)getParticipantIDForAlias:(unsigned long long)arg1 salt:(id)arg2;	// IMP=0x001000000012e160
- (void)createAliasForParticipantID:(unsigned long long)arg1 salt:(id)arg2;	// IMP=0x001000000012da70
- (void)requestMaterialsForParticipantIDs:(id)arg1 materialType:(int)arg2;	// IMP=0x001000000012d330
- (void)requestEncryptionKeyForParticipantIDs:(id)arg1;	// IMP=0x001000000012cc90
- (void)hasOutdatedSKI:(id)arg1;	// IMP=0x001000000012cad0
- (void)sendAllocationRequest:(id)arg1;	// IMP=0x001000000012c110
- (void)recvMembershipChangeEventWithReason:(unsigned char)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000012bf20
- (void)InvalidateStableKeyMaterialInFrameworkCache:(id)arg1;	// IMP=0x001000000012bc90
- (void)recvStableKeyMaterialForFrameworkCache:(id)arg1;	// IMP=0x001000000012b2b0
- (void)_decryptReceivedDataBlobsUsingSKMs;	// IMP=0x0010000000129960
- (void)receiveAndDecryptEncryptedDataBlobs:(id)arg1;	// IMP=0x0010000000128f20
- (void)_sendClientDecryptedDatabBlobs:(id)arg1 type:(int)arg2 forParticipant:(id)arg3;	// IMP=0x00100000001288e0
- (void)invalidateKeyMaterialByKeyIndexes:(id)arg1;	// IMP=0x0010000000128840
- (void)didSendKeyMaterial:(id)arg1 duration:(double)arg2;	// IMP=0x00100000001287c0
- (void)recvKeyMaterial:(id)arg1;	// IMP=0x00100000001281a0
- (void)didCreateMKM:(id)arg1;	// IMP=0x0010000000128110
- (void)updateServerDesiredKeyMaterials;	// IMP=0x0010000000127cf0
- (id)serverDesiredKeyMaterials;	// IMP=0x0010000000127c50
- (id)getDataByKey:(unsigned int)arg1;	// IMP=0x0010000000127bb0
- (void)updateServerDesiredKeyValueDeliveryMaterialsNeeded;	// IMP=0x0010000000127900
- (id)getDesiredMaterialSetForEncryptedData;	// IMP=0x0010000000127850
- (void)setServerDesiredKeyMaterials:(id)arg1 signer:(CDUnknownBlockType)arg2;	// IMP=0x00100000001275a0
- (void)sendKeyMaterialMessageDataOverQR:(id)arg1 toDestination:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000126f50
- (void)sendKeyMaterialMessage:(id)arg1 toDestination:(id)arg2;	// IMP=0x0010000000125d00
- (void)leaveGroupSession:(id)arg1 options:(id)arg2;	// IMP=0x0010000000124d30
- (void)receiveJoinNotificationFromAParticipant;	// IMP=0x0010000000124bb0
- (void)joinWithOptions:(id)arg1;	// IMP=0x0010000000121c30
- (id)_checkIfPushMessageSizeGreaterThanMaxLimit:(id)arg1 maxLimit:(unsigned long long)arg2;	// IMP=0x00100000001216f0
- (void)setGroupStreamInfo:(id)arg1 sessionInfo:(id)arg2;	// IMP=0x0010000000120850
- (void)_sendConnectedLinkInfoToAVC;	// IMP=0x0010000000120710
- (void)updateParticipantType:(unsigned short)arg1 members:(id)arg2 triggeredLocally:(_Bool)arg3 withContext:(id)arg4 lightweightStatusDict:(id)arg5;	// IMP=0x001000000011ec60
- (void)updateParticipantData:(id)arg1 withContext:(id)arg2;	// IMP=0x001000000011e7f0
- (void)removeParticipantIDs:(id)arg1;	// IMP=0x001000000011dd40
- (void)manageDesignatedMembers:(id)arg1 withType:(unsigned short)arg2;	// IMP=0x001000000011d200
- (void)updateMembers:(id)arg1 withContext:(id)arg2 messagingCapabilities:(id)arg3 triggeredLocally:(_Bool)arg4 lightweightStatusDict:(id)arg5;	// IMP=0x0010000000118ee0
- (_Bool)destinationsContainFromID:(id)arg1;	// IMP=0x00100000001187c0
- (void)link:(id)arg1 didReceiveSessionStats:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4 success:(_Bool)arg5;	// IMP=0x0010000000118700
- (void)link:(id)arg1 didReceiveSessionInfo:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4 status:(unsigned int)arg5;	// IMP=0x0010000000118640
- (void)_sendSessionInfoResponseErrorToClient:(unsigned int)arg1;	// IMP=0x0010000000118500
- (void)terminateCallDueToIdleClientForLink:(id)arg1;	// IMP=0x00100000001184c0
- (void)link:(id)arg1 didReceiveDebugDataForClient:(id)arg2 dataType:(unsigned char)arg3;	// IMP=0x0010000000118440
- (void)link:(id)arg1 didReceiveMembershipChangedInformation:(unsigned char)arg2;	// IMP=0x00100000001183f0
- (void)link:(id)arg1 didReceiveEncryptionInformation:(id)arg2;	// IMP=0x0010000000118380
- (void)link:(id)arg1 didReceiveErrorIndicationWithCode:(unsigned int)arg2;	// IMP=0x0010000000117fc0
- (void)link:(id)arg1 didReceiveEncryptedDataBlobs:(id)arg2;	// IMP=0x0010000000117d70
- (void)didReceiveBlockedIndicationForLink:(id)arg1 reason:(unsigned int)arg2;	// IMP=0x0000000000117d20
- (void)link:(id)arg1 didReceiveMappedParticipantsDict:(id)arg2 forLinkID:(BOOL)arg3;	// IMP=0x00100000001176d0
- (void)_sendParticipantMappingUpdateToClient:(id)arg1 forLinkID:(BOOL)arg2 shouldReplace:(_Bool)arg3;	// IMP=0x0010000000117520
- (id)_breakDictionaryIntoMultipleChunks:(id)arg1 chunkSize:(int)arg2;	// IMP=0x0010000000116f90
- (id)_createOneWayParticipantDictionaryFromMappedParticipantsDict:(id)arg1;	// IMP=0x0010000000116db0
- (void)link:(id)arg1 didReceivePluginDisconnect:(id)arg2;	// IMP=0x0010000000116c40
- (void)link:(id)arg1 didReceiveRequestToPurgeRegistration:(id)arg2;	// IMP=0x0010000000116980
- (void)link:(id)arg1 didReceivePluginUnregistration:(unsigned long long)arg2 pluginName:(id)arg3;	// IMP=0x0010000000116900
- (void)link:(id)arg1 didReceivePluginRegistration:(unsigned long long)arg2 pluginName:(id)arg3;	// IMP=0x0010000000116880
- (void)link:(id)arg1 didReceiveSessionStateCounter:(unsigned int)arg2;	// IMP=0x0010000000116830
- (void)link:(id)arg1 didReceiveParticipantUpdate:(id)arg2 status:(unsigned short)arg3;	// IMP=0x00100000001167b0
- (void)link:(id)arg1 didAddQREvent:(id)arg2;	// IMP=0x0010000000116740
- (void)link:(id)arg1 didDefaultUnderlyingLinkChangeSucceeded:(_Bool)arg2 currentDefaultLinkID:(BOOL)arg3;	// IMP=0x00100000001166e0
- (void)link:(id)arg1 didDisconnectUnderlyingLinkID:(BOOL)arg2 linkUUID:(id)arg3 reason:(unsigned char)arg4;	// IMP=0x0010000000116660
- (void)link:(id)arg1 didGetLinkProbingStatus:(id)arg2;	// IMP=0x00100000001165f0
- (void)link:(id)arg1 didSoMaskChange:(unsigned int)arg2;	// IMP=0x00100000001165a0
- (void)link:(id)arg1 didCellularMTUChange:(unsigned short)arg2;	// IMP=0x0010000000116550
- (void)link:(id)arg1 didRATChange:(unsigned char)arg2;	// IMP=0x0010000000116500
- (void)link:(id)arg1 didCellularNWPathFlagsChanged:(unsigned short)arg2;	// IMP=0x00100000001164b0
- (void)link:(id)arg1 didWiFiNWPathFlagsChanged:(unsigned short)arg2;	// IMP=0x0010000000116460
- (void)link:(id)arg1 didReiceiveChildConnectionID:(id)arg2 forLinkID:(BOOL)arg3;	// IMP=0x0010000000115930
- (void)link:(id)arg1 didConnectUnderlyingLink:(BOOL)arg2 linkUUID:(id)arg3 localAttributes:(id)arg4 remoteAttributes:(id)arg5;	// IMP=0x00100000001139b0
- (_Bool)link:(id)arg1 didReceivePacket:(CDStruct_dc2926a3 *)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4;	// IMP=0x0010000000113910
- (void)link:(id)arg1 didReceiveReportEvent:(id)arg2;	// IMP=0x00100000001138a0
- (void)link:(id)arg1 didConnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x0010000000113470
- (void)link:(id)arg1 didReceiveMaterialInfo:(id)arg2 material:(id)arg3;	// IMP=0x001000000010d560
- (void)materialInfoError:(id)arg1;	// IMP=0x001000000010d4d0
- (_Bool)shouldVerifySignatureForMaterialType:(int)arg1;	// IMP=0x001000000010d430
- (void)link:(id)arg1 didReceiveKeyMaterialMessageData:(id)arg2 fromParticipantIDs:(id)arg3 toParticipantID:(id)arg4;	// IMP=0x001000000010d370
- (void)link:(id)arg1 didReceiveSKEData:(id)arg2;	// IMP=0x001000000010d300
- (void)link:(id)arg1 didDisconnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x001000000010d080
- (void)_sendQREventToAVC:(id)arg1;	// IMP=0x001000000010cbd0
- (void)addQREventForRTCReport:(id)arg1;	// IMP=0x001000000010c6d0
- (void)_setLinkProtocol:(id)arg1;	// IMP=0x001000000010bf00
- (void)connection:(id)arg1 didReceiveData:(id)arg2;	// IMP=0x001000000010b260
- (void)connection:(id)arg1 receivedData:(id)arg2;	// IMP=0x001000000010a210
- (void)handleAVConferenceError:(id)arg1;	// IMP=0x001000000010a1d0
- (void)connectionDidStop:(id)arg1 error:(id)arg2;	// IMP=0x0010000000109df0
- (void)connection:(id)arg1 didStart:(_Bool)arg2 error:(id)arg3;	// IMP=0x0010000000109780
- (void)setRequiredCapabilities:(id)arg1 requiredLackOfCapabilities:(id)arg2;	// IMP=0x00100000001072b0
- (void)setPreferences:(id)arg1;	// IMP=0x0010000000106d90
- (void)setMuted:(_Bool)arg1;	// IMP=0x00100000001068a0
- (void)setAudioEnabled:(_Bool)arg1;	// IMP=0x00100000001063b0
- (id)connectDuration;	// IMP=0x00100000001061f0
- (id)sessionDuration;	// IMP=0x00100000001060e0
- (void)endSessionWithReason:(unsigned int)arg1;	// IMP=0x0010000000105ff0
- (void)_notifyClientsSessionStopped;	// IMP=0x00100000001055b0
- (void)_cleanupSocketPairConnection;	// IMP=0x0010000000105570
- (void)_checkAndUnassertRealTimeMode;	// IMP=0x00100000001054f0
- (id)_acceptedDeviceToken;	// IMP=0x0010000000104f70
- (id)_acceptedDeviceUniqueID;	// IMP=0x0010000000104870
- (id)_socketOptionsForDevice:(id)arg1 uniqueID:(id)arg2 pushToken:(id)arg3 connectionSuffix:(id)arg4;	// IMP=0x0010000000103380
- (void)_closeSocketToDevice:(id)arg1;	// IMP=0x0010000000102760
- (void)_resetPreferences:(id)arg1;	// IMP=0x00100000001022e0
- (void)_endSession;	// IMP=0x00100000001001c0
- (void)endSessionWithData:(id)arg1;	// IMP=0x00100000000ffec0
- (void)_sendSessionEndWithData:(id)arg1;	// IMP=0x00100000000ff460
- (void)endSession;	// IMP=0x00100000000ff3d0
- (void)reconnectSession;	// IMP=0x00100000000ff130
- (void)_cleanupQuickRelaySession;	// IMP=0x00100000000fed60
- (void)cleanupSessionWithCleanStatus:(_Bool)arg1;	// IMP=0x00100000000fd3d0
- (void)startListeningOnClientSocket:(int)arg1 isRawSocket:(_Bool)arg2;	// IMP=0x00100000000fce80
- (void)runConnectivityCheckWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000000fccd0
- (void)networkingIsAvailable:(CDUnknownBlockType)arg1;	// IMP=0x00100000000fcc70
- (unsigned int)globalLinkErrorToSessionEndReason:(long long)arg1;	// IMP=0x00100000000fcb80
- (_Bool)shouldReportUPlusOneKey;	// IMP=0x00100000000fcb40
- (id)getAppID;	// IMP=0x00100000000fcad0
- (id)getFromService;	// IMP=0x00100000000fc9b0
- (id)getCallerCert;	// IMP=0x00100000000fc870
- (void)setHasPendingAllocation:(_Bool)arg1 forIDSSession:(id)arg2;	// IMP=0x00100000000fc5d0
- (void)setAcceptedRelaySession:(id)arg1;	// IMP=0x00100000000fbc70
- (void)_setInitialLinkType:(unsigned long long)arg1;	// IMP=0x00100000000fb5b0
- (void)checkAndCallSessionStart;	// IMP=0x00100000000fb470
- (void)_sessionStartWithSocketDescriptor:(int)arg1;	// IMP=0x00100000000fac30
- (_Bool)_shouldUseIPsecLink;	// IMP=0x00100000000fab90
- (void)_broadcastSessionStartWithSocket:(int)arg1;	// IMP=0x00100000000fa870
- (void)startQRSession;	// IMP=0x00100000000fa840
- (void)openSocketToDevice:(id)arg1;	// IMP=0x00100000000f86d0
- (double)_serverSpecifiedJoinNotificationDeliveryTimeout;	// IMP=0x00100000000f85d0
- (void)_noteJoinNotificationDidDeliverWithSuccess:(_Bool)arg1;	// IMP=0x00100000000f7db0
- (void)_noteJoinNotificationWillSend;	// IMP=0x00100000000f6c80
- (void)connectQRServer:(id)arg1 withPreferredLocalInterface:(int)arg2;	// IMP=0x00100000000ef400
- (id)formAndEncryptDataBlob:(id)arg1 type:(int)arg2;	// IMP=0x00100000000eee40
- (void)updateRelevantEncryptedDataBlob;	// IMP=0x00100000000eecd0
- (void)_sendLinkSelectionPreference:(id)arg1 linkScore:(id)arg2 ipPreference:(id)arg3;	// IMP=0x00100000000eebd0
- (void)didReceiveCurrentCellularSignalRaw:(int)arg1 signalStrength:(int)arg2 signalGrade:(int)arg3;	// IMP=0x00100000000eebb0
- (id)_getNewLinkOptionsForActiveParticipantInfoRequest;	// IMP=0x00100000000edcd0
- (void)_sendingOfflineActiveParticipantInfoRequest:(id)arg1;	// IMP=0x00100000000ece80
- (void)unregisterPluginWithOptions:(id)arg1;	// IMP=0x00100000000ec5d0
- (void)registerPluginWithOptions:(id)arg1;	// IMP=0x00100000000ebd20
- (void)requestURIsForParticipantIDs:(id)arg1 withRequestID:(id)arg2;	// IMP=0x00100000000eb530
- (void)requestSessionInfoWithOptions:(id)arg1;	// IMP=0x00100000000e81b0
- (void)_connectQRDirectlyToClientChannel:(id)arg1;	// IMP=0x00100000000e5f70
- (id)_extractFieldBytesFromMetadata:(const void *)arg1 ofSize:(unsigned int)arg2 packetBuffer:(CDStruct_dc2926a3 *)arg3;	// IMP=0x00100000000d47e0
- (void)_connectSocketDescriptor:(int)arg1 toClientChannel:(id)arg2;	// IMP=0x00100000000d10a0
- (void)_checkAndRunClientChannelTests:(id)arg1;	// IMP=0x00100000000d01d0
- (_Bool)_checkAndSendCachedDataForClient:(id)arg1;	// IMP=0x00100000000cf850
- (void)writeToClientChannel:(id)arg1 packetBuffer:(CDStruct_dc2926a3 *)arg2 metaData:(const char *)arg3 metadataSize:(unsigned int)arg4;	// IMP=0x00100000000cd640
- (void)_invalidateClientChannel:(id)arg1;	// IMP=0x00100000000cd380
- (void)unregisterClientChannel;	// IMP=0x00100000000cd2a0
- (void)registerClientChannel;	// IMP=0x00100000000cbcf0
- (void)_lightweightParticipantSync:(unsigned char)arg1;	// IMP=0x00100000000cba60
- (void)mapMKIFromMaterial:(id)arg1 token:(id)arg2;	// IMP=0x00100000000cb940
- (void)reportMKMReceivedOverQRFromToken:(id)arg1 material:(id)arg2;	// IMP=0x00100000000cb8a0
- (void)reportMKMReceivedOverPushViaCacheForParticipantID:(unsigned long long)arg1 material:(id)arg2;	// IMP=0x00100000000cb460
- (void)reportMKMReceivedOverPushFromToken:(id)arg1 material:(id)arg2;	// IMP=0x00100000000cb3c0
- (void)reportPreKeyReceivedOverPushFromToken:(id)arg1;	// IMP=0x00100000000cb330
- (void)reportJoinReceivedOverPushFromToken:(id)arg1;	// IMP=0x00100000000cb2d0
- (void)reportFirstMKMReceivedFromQR:(double)arg1;	// IMP=0x00100000000cb2a0
- (void)reportFirstMKMReceivedFromPush:(double)arg1;	// IMP=0x00100000000caa60
- (void)_cleanupSessionConnection;	// IMP=0x00100000000ca450
- (void)_reportRTC;	// IMP=0x00100000000c9250
- (id)buildRTCSummaryReport;	// IMP=0x00100000000c8e60
- (id)rtcNormalizeTime:(double)arg1;	// IMP=0x00100000000c8dc0
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) char *keyMaterial;
- (void)dealloc;	// IMP=0x00100000000c7fd0
- (id)initWithAccount:(id)arg1 destinations:(id)arg2 options:(id)arg3 availabilityCheck:(id)arg4;	// IMP=0x00100000000c30d0
- (id)initWithAccount:(id)arg1 destinations:(id)arg2 options:(id)arg3;	// IMP=0x00100000000c2fc0
- (void)_generateKeys:(id)arg1;	// IMP=0x00100000000c22e0
- (long long)_loggingFlags;	// IMP=0x00100000000c2260
- (void)_selectDefaultMic;	// IMP=0x00100000000c2250
- (void)submitAWDMetricsForIDSSessionWithEndReason:(unsigned int)arg1;	// IMP=0x0010000000470080
- (void)submitAWDMetricsForIDSSessionCompleted;	// IMP=0x001000000046f500
- (void)submitAWDMetricsForIDSSessionReinitiateConnected;	// IMP=0x001000000046f3f0
- (void)submitAWDMetricsForIDSSessionReinitiateStarted;	// IMP=0x001000000046f2e0
- (void)submitAWDMetricsForIDSSessionReinitiateRequested;	// IMP=0x001000000046f1d0
- (void)submitAWDMetricsForIDSSessionConnected;	// IMP=0x001000000046f0c0
- (void)submitAWDMetricsForIDSSessionAcceptReceived;	// IMP=0x001000000046efb0
- (void)submitAWDMetricsForIDSSessionAcceptSent;	// IMP=0x001000000046eea0
- (void)submitAWDMetricsForIDSSessionDeclineReceived;	// IMP=0x001000000046ed90
- (void)submitAWDMetricsForIDSSessionDeclineSent;	// IMP=0x001000000046ec80
- (void)submitAWDMetricsForIDSSessionCancelReceived;	// IMP=0x001000000046eb70
- (void)submitAWDMetricsForIDSSessionCancelSentWithRemoteEndReason:(unsigned int)arg1 numberOfRecipients:(id)arg2;	// IMP=0x001000000046ea10
- (void)submitAWDMetricsForIDSSessionInvitationReceived;	// IMP=0x001000000046e900
- (void)submitAWDMetricsForIDSSessionInvitationSentWithNumberOfRecipients:(id)arg1;	// IMP=0x001000000046e7b0
- (void)submitAWDMetricsForIDSSessionStarted;	// IMP=0x001000000046e470
- (_Bool)_shouldSubmitMetricsBasedOnDate:(id)arg1 isInitiator:(_Bool)arg2;	// IMP=0x001000000046e240
- (_Bool)_shouldSubmitMetricsForThisSession;	// IMP=0x001000000046e150

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

