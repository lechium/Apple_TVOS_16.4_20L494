//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDate, NSString, _bmFMDatabase;
@protocol OS_dispatch_queue;

@interface BMSyncDatabase : NSObject
{
    _bmFMDatabase *_fmdb;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_queue;	// 16 = 0x10
    unsigned long long _flags;	// 24 = 0x18
    NSString *__error_ivar;	// 32 = 0x20
    unsigned long long __internal_state_ivar;	// 40 = 0x28
    CDUnknownBlockType _corruptionHandler;	// 48 = 0x30
}

+ (id)defaultDatabaseWALPath;	// IMP=0x004000000003e261
+ (id)defaultDatabasePath;	// IMP=0x001000000003e203
- (void).cxx_destruct;	// IMP=0x001000000003fdbc
@property(copy, nonatomic) CDUnknownBlockType corruptionHandler; // @synthesize corruptionHandler=_corruptionHandler;
@property(readonly, nonatomic) unsigned long long internalState; // @synthesize internalState=__internal_state_ivar;
@property(readonly, nonatomic) NSString *error; // @synthesize error=__error_ivar;
- (_Bool)migration_Schema20ToSchema21;	// IMP=0x001000000003fc13
- (_Bool)migration_StarSkySchema11ToSydRoSchema12;	// IMP=0x001000000003f8fe
@property(readonly, nonatomic) unsigned int version;
- (void)setValue:(id)arg1 forMetadataKey:(id)arg2;	// IMP=0x001000000003f8c6
- (id)valueForMetadataKey:(id)arg1;	// IMP=0x001000000003f844
- (void)disableStatementCachingForBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000003f7b0
- (void)clearCachedStatements;	// IMP=0x001000000003f79a
- (_Bool)rollback;	// IMP=0x001000000003f784
- (_Bool)commit;	// IMP=0x001000000003f76e
- (_Bool)beginTransaction;	// IMP=0x001000000003f758
- (void)close;	// IMP=0x001000000003f6a8
@property(readonly, nonatomic) unsigned long long state;
- (_Bool)open;	// IMP=0x001000000003f5d0
- (_Bool)_tryOpen:(unsigned long long)arg1;	// IMP=0x001000000003e75c
- (void)setState:(unsigned long long)arg1 errorFormat:(id)arg2;	// IMP=0x001000000003e63c
- (void)setState:(unsigned long long)arg1 error:(id)arg2;	// IMP=0x001000000003e49c
- (id)initWithPath:(id)arg1 queue:(id)arg2;	// IMP=0x001000000003e342
- (id)initWithPath:(id)arg1;	// IMP=0x001000000003e32e
- (id)initWithQueue:(id)arg1;	// IMP=0x001000000003e2b8
- (int)CRDTLocationCount;	// IMP=0x0010000000004c98
- (id)highestDeletedLocationForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000004b29
- (id)highestDeletedLocationsForStream:(id)arg1;	// IMP=0x0010000000004965
- (id)locationsWithState:(unsigned long long)arg1;	// IMP=0x00100000000047af
- (id)previousLocationRowBeforeLocationRow:(id)arg1;	// IMP=0x0010000000004558
- (_Bool)removeAllDeletedLocationsBeforeHighestDeletedLocation:(id)arg1;	// IMP=0x0010000000004374
- (_Bool)upsertLocation:(id)arg1;	// IMP=0x0010000000003f34
- (id)insertLocationIfNotExists:(id)arg1 withState:(unsigned long long)arg2;	// IMP=0x0010000000003ccc
- (_Bool)updateAllLocationsAtOrBefore:(id)arg1 state:(unsigned long long)arg2;	// IMP=0x00100000000039e0
- (_Bool)updateLocationState:(unsigned long long)arg1 forLocation:(id)arg2;	// IMP=0x001000000000389d
- (id)locationRowWithLocationID:(id)arg1;	// IMP=0x0010000000003776
- (id)locationRowWithLocation:(id)arg1;	// IMP=0x0010000000003594
- (id)allPeers;	// IMP=0x00100000000072b0
- (_Bool)setLastSyncDate:(id)arg1 forDeviceWithIdentifier:(id)arg2;	// IMP=0x0010000000007173
- (id)lastSyncDateOfDeviceWithIdentifier:(id)arg1;	// IMP=0x0010000000007034
- (id)lastSyncDateFromAnyDevice;	// IMP=0x0010000000006f78
- (id)deviceWithIdentifier:(id)arg1;	// IMP=0x0010000000006e34
- (_Bool)upsertSyncDevicePeer:(id)arg1 isMe:(_Bool)arg2;	// IMP=0x00100000000068d8
- (id)localDevice;	// IMP=0x001000000000681a
- (void)enumerateZonesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000018669
- (_Bool)ckZoneSetAttemptedRecoveryDate:(id)arg1 state:(int)arg2 forZoneName:(id)arg3;	// IMP=0x00100000000183f3
- (_Bool)ckZoneSetZoneVersionUUID:(id)arg1 forZoneName:(id)arg2;	// IMP=0x00100000000181de
- (_Bool)ckZoneSetAttemptingRecoveryForZoneName:(id)arg1 state:(int)arg2;	// IMP=0x0010000000017f8d
- (id)ckZoneForZoneName:(id)arg1;	// IMP=0x0010000000017e59
- (_Bool)ckZoneExists:(id)arg1;	// IMP=0x0010000000017d51
- (id)SELECT_ATOMS_WHERE:(id)arg1 ORDER_BY:(id)arg2 LIMIT:(id)arg3;	// IMP=0x001000000002540b
- (id)highestLocationWithBufferedAtomsOlderThan:(double)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x0010000000025274
- (id)computeHighestLocationToDeleteUpToBookmark:(id)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x0010000000024f96
- (void)atomRowsInTimestampClockVector:(id)arg1 forLocation:(id)arg2 inStream:(id)arg3 enumerateWithBlock:(CDUnknownBlockType)arg4;	// IMP=0x001000000002471d
- (void)locationsInClockVector:(id)arg1 inStream:(id)arg2 enumerateWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000023ed5
- (_Bool)deleteAllAtomsAtOrBeforeLocation:(id)arg1;	// IMP=0x0010000000023a3f
- (void)atomsAtOrBeforeLocation:(id)arg1 ofType:(unsigned long long)arg2 enumerateWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000000236df
- (void)atomRowsNotOnDiskReferencingSiteIdentifier:(id)arg1 inStream:(id)arg2 enumerateWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x001000000002348f
- (id)CKAtomRowSiteIdentifiers;	// IMP=0x00100000000233a3
- (_Bool)containsCKAtomRowWithSegment:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000002326d
- (id)latestDistributedTimestampForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000002308f
- (id)ckAtomRowForAtomWithBookmark:(id)arg1 type:(unsigned long long)arg2 forSiteIdentifier:(id)arg3 inStream:(id)arg4;	// IMP=0x0010000000022e38
- (_Bool)updateCKAtomRow:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000002281b
- (_Bool)containsCKAtomRowWithTimestamp:(id)arg1 inStream:(id)arg2 onDisk:(_Bool)arg3;	// IMP=0x001000000002257a
- (_Bool)containsCKAtomRowWithTimestamp:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000022349
- (int)ckAtomCount;	// IMP=0x0010000000022297
- (id)latestCKAtomRowOfType:(unsigned long long)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x00100000000220a3
- (id)stateVectorForLocationRow:(id)arg1;	// IMP=0x0010000000021b5b
- (id)timestampClockVectorForStreamName:(id)arg1;	// IMP=0x00100000000218b8
- (id)latestCKAtomRowForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000021743
- (id)ckAtomRowWithTimestamp:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000021526
- (_Bool)addCKAtomRow:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000020aa4
@property(retain, nonatomic) NSString *mergeableRecordValueKey;
- (void)clearCKSyncEngineMetaData;	// IMP=0x0010000000028873
- (void)saveCKSyncEngineMetaData:(id)arg1;	// IMP=0x001000000002885a
- (id)ckSyncEngineMetaData;	// IMP=0x0010000000028841
@property(retain, nonatomic) NSDate *lastCloudKitSyncDate;
@property(retain, nonatomic) NSDate *lastCloudKitSyncAttemptDate;
@property(retain, nonatomic) NSDate *lastRapportSyncDate;
@property(retain, nonatomic) NSDate *lastRapportSyncAttemptDate;
- (void)enumerateMergeableRecordValuesForRecordName:(id)arg1 zoneName:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000028c1f
- (_Bool)clearCKMergeableRecordValueServerMergeableValuesForZoneName:(id)arg1;	// IMP=0x0010000000028b41
- (_Bool)clearCKMergeableRecordValueServerMergeableValuesForRecordName:(id)arg1 zoneName:(id)arg2;	// IMP=0x0010000000028a3a
- (_Bool)saveCKMergeableRecordValueRecordName:(id)arg1 zoneName:(id)arg2 mergeableRecordValueData:(id)arg3;	// IMP=0x00100000000288ff
- (_Bool)saveLatestTombstoneBookmark:(id)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x0010000000028f9b
- (id)latestTombstoneBookmarkForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000028dbb
- (_Bool)enableAllCKSyncRecordsPreviouslyDisabledForSite:(id)arg1 stream:(id)arg2;	// IMP=0x001000000003afda
- (_Bool)disableAllCKSyncRecordsForSite:(id)arg1 stream:(id)arg2;	// IMP=0x001000000003adba
- (_Bool)upsertCKRecordWithLocation:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000003a985
- (unsigned long long)ckRecordCountForRecordType:(unsigned long long)arg1;	// IMP=0x001000000003a847
- (void)deleteAllCKRecordsInZone:(id)arg1;	// IMP=0x001000000003a6f1
- (id)gatherAllCKSyncRecordRecordsToBeDeleted;	// IMP=0x001000000003a589
- (void)enumerateCKSyncRecordRecordsSetForDeletingUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000003a3c2
- (void)deleteCKRecordAtLocation:(id)arg1;	// IMP=0x001000000003a23a
- (void)deleteCKRecordsForStreamName:(id)arg1;	// IMP=0x001000000003a11d
- (void)deleteCKRecordsAtOrBeforeLocation:(id)arg1;	// IMP=0x0010000000039f17
- (void)enumerateRecordsWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000039dfe
- (void)markCKRecordsAtOrBeforeLocationToBeDeletedOnSync:(id)arg1;	// IMP=0x0010000000039b6e
- (void)updateAllCKRecordsAtOrBeforeLocationToBeDeletedOnSync:(id)arg1;	// IMP=0x0010000000039961
- (_Bool)ckRecordExists:(id)arg1 zoneName:(id)arg2 recordType:(unsigned long long)arg3;	// IMP=0x00100000000397f2
- (id);	// IMP=0x0010000000039655
- (_Bool)clearCKRecordLocalMergeableValueAndSetToSyncForZone:(id)arg1;	// IMP=0x0010000000039472
- (_Bool)saveCKRecordLocalMergeableValue:(id)arg1 recordName:(id)arg2 zoneName:(id)arg3 locationRow:(id)arg4;	// IMP=0x00100000000390b6
- (_Bool)saveCKRecordHighestDeletedLocationRow:(id)arg1 recordName:(id)arg2 zoneName:(id)arg3 recordExists:(_Bool)arg4;	// IMP=0x0010000000038df0
- (_Bool)saveCKRecordServerMergeableValue:(id)arg1 recordName:(id)arg2 zoneName:(id)arg3 locationRow:(id)arg4;	// IMP=0x0010000000038b4b
- (void)resetMetadataForRecord:(id)arg1 zoneName:(id)arg2;	// IMP=0x0010000000038948
- (_Bool)resetCKRecordsMetaDataAndSetToSyncForZone:(id)arg1;	// IMP=0x0010000000038761
- (id)getSystemFieldsDataForRecordName:(id)arg1 zoneName:(id)arg2 recordType:(unsigned long long)arg3;	// IMP=0x00100000000385c9
- (void)saveSystemFieldsDataForRecord:(id)arg1 syncToCloudKit:(id)arg2 recordType:(unsigned long long)arg3 crdtDeleted:(id)arg4;	// IMP=0x0010000000037eee
- (id)createCKRecordFromRecordID:(id)arg1 newRecord:(_Bool *)arg2 recordType:(unsigned long long)arg3;	// IMP=0x0010000000037d03
- (id)recordFromSystemFieldsData:(id)arg1;	// IMP=0x0010000000037c0b
- (id)ckRecordsToSyncToCloudKitForZone:(id)arg1;	// IMP=0x001000000003796a
- (void)compactAndDeleteSessionLogs;	// IMP=0x0010000000040ffe
- (id)computeAggregatedSessionLogs;	// IMP=0x0010000000040f0c
- (void)recordAtomMergeResult:(unsigned long long)arg1 inStream:(id)arg2 sessionID:(id)arg3 messageID:(unsigned long long)arg4 ownerSite:(id)arg5 originatingSite:(id)arg6 eventCreatedAt:(double)arg7;	// IMP=0x0010000000040bea
- (void)recordMessageToDeviceIdentifier:(id)arg1 sessionID:(id)arg2 messageID:(unsigned long long)arg3 reachable:(_Bool)arg4 bytes:(unsigned long long)arg5 isReciprocal:(_Bool)arg6;	// IMP=0x0010000000040906
- (void)recordSessionEnd:(id)arg1 timeSincePreviousSync:(double)arg2;	// IMP=0x001000000004071a
- (void)recordSessionStart:(id)arg1 transport:(unsigned long long)arg2 reason:(unsigned long long)arg3 isReciprocal:(_Bool)arg4;	// IMP=0x00100000000404b4
- (unsigned long long)sizeOfTableInKilobytes:(id)arg1;	// IMP=0x0010000000041fa1
- (unsigned long long)numRowsInTable:(id)arg1;	// IMP=0x0010000000041cbe
- (unsigned long long)_sizeOfFileInKilobytes:(id)arg1;	// IMP=0x0010000000041b25
- (unsigned long long)walSizeInKilobytes;	// IMP=0x0010000000041aca
- (unsigned long long)databaseSizeInKilobytes;	// IMP=0x0010000000041a6f
- (_Bool)vacuumWithShouldContinueBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000041503
- (unsigned long long)_numPagesToVacuum;	// IMP=0x0010000000041176
@property(retain, nonatomic) NSDate *dateOfLastVacuum;

@end

