//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CPLExtractedBatch, CPLPrequeliteVariable, NSMutableDictionary, NSString;

@interface CPLPrequelitePushRepository
{
    NSMutableDictionary *_injectionPerChangeType;	// 8 = 0x8
    CPLPrequeliteVariable *_extractedBatchVar;	// 16 = 0x10
    _Bool _hasCachedExtractedBatch;	// 24 = 0x18
    CPLExtractedBatch *_cachedExtractedBatch;	// 32 = 0x20
    _Bool _shouldNotifyFlagsCountChanges;	// 40 = 0x28
    NSMutableDictionary *_batchStoragesPerPriority;	// 48 = 0x30
    _Bool _createIndexWithPriority;	// 56 = 0x38
}

- (void).cxx_destruct;	// IMP=0x00200000000731e3
- (void)writeTransactionDidFail;	// IMP=0x001000000007317c
- (void)writeTransactionDidSucceed;	// IMP=0x00100000000730a8
- (_Bool)checkInBatchStorage:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000072ff0
- (id)checkOutBatchStorageWithPriority:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x0010000000072eab
- (_Bool)acknowledgeContributorsUpdates:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000072685
- (id)contributorsUpdatesForScopeWithIdentifier:(id)arg1 maxCount:(unsigned long long)arg2;	// IMP=0x001000000007247f
- (_Bool)deleteSharingFlagsWithMaxCount:(unsigned long long)arg1 deletedCount:(unsigned long long *)arg2 error:(id *)arg3;	// IMP=0x001000000007236a
- (id)scopedIdentifiersForChangesWithFlag:(long long)arg1 forScopeWithIdentifier:(id)arg2;	// IMP=0x001000000007211c
- (id)countPerFlagsForScopeWithIdentifier:(id)arg1;	// IMP=0x0010000000071ab2
- (_Bool)getRelatedScopedIdentifier:(id *)arg1 forRecordWithScopedIdentifier:(id)arg2;	// IMP=0x00100000000717bd
@property(readonly, nonatomic) _Bool isEmpty;
- (_Bool)deleteRecordsForScopeIndex:(long long)arg1 maxCount:(long long)arg2 deletedCount:(long long *)arg3 discardedUploadIdentifiers:(id *)arg4 error:(id *)arg5;	// IMP=0x00100000000713ab
- (id)statusPerScopeIndex;	// IMP=0x0010000000070805
- (id)statusDictionary;	// IMP=0x001000000007036c
- (id)status;	// IMP=0x001000000006fcf8
- (_Bool)hasAnyChangeWithRelatedScopedIdentifier:(id)arg1;	// IMP=0x001000000006fb1b
- (_Bool)hasChangesWithRelatedScopedIdentifier:(id)arg1 class:(Class)arg2;	// IMP=0x001000000006f9af
- (id)allChangesWithScopeIdentifier:(id)arg1;	// IMP=0x001000000006f932
- (id)allChangesWithScopeIdentifier:(id)arg1 table:(id)arg2;	// IMP=0x001000000006f737
- (id)allChangesWithClass:(Class)arg1 secondaryScopedIdentifier:(id)arg2 table:(id)arg3;	// IMP=0x001000000006f5af
- (id)allChangesWithClass:(Class)arg1 relatedScopedIdentifier:(id)arg2;	// IMP=0x001000000006f523
- (id)allChangesWithClass:(Class)arg1 relatedScopedIdentifier:(id)arg2 table:(id)arg3;	// IMP=0x001000000006f39b
- (id)allNonDeletedChangesWithClass:(Class)arg1 scopeIdentifier:(id)arg2 table:(id)arg3;	// IMP=0x001000000006f2b2
- (id)allChangesWithClass:(Class)arg1 scopeIdentifier:(id)arg2 changeType:(unsigned long long)arg3 table:(id)arg4;	// IMP=0x001000000006f192
- (id)_injectionForChangeType:(unsigned long long)arg1;	// IMP=0x001000000006f069
- (id)allChangesWithClass:(Class)arg1 scopeIdentifier:(id)arg2 trashed:(_Bool)arg3 table:(id)arg4;	// IMP=0x001000000006ef7e
- (id)_allChangesWithScopeIdentifier:(id)arg1 scopeIndex:(long long)arg2 ordered:(_Bool)arg3 table:(id)arg4 query:(id)arg5;	// IMP=0x001000000006ed0f
- (id)changeWithScopedIdentifier:(id)arg1;	// IMP=0x001000000006ecc2
- (id)storedExtractedBatch;	// IMP=0x001000000006eb3b
- (_Bool)storeExtractedBatch:(id)arg1 error:(id *)arg2;	// IMP=0x001000000006e9cf
- (_Bool)deleteAllChangesWithError:(id *)arg1;	// IMP=0x001000000006e8f3
- (_Bool)hasSomeChangeWithScopedIdentifier:(id)arg1;	// IMP=0x001000000006e7b0
- (_Bool)deleteChangeWithScopedIdentifier:(id)arg1 discardedUploadIdentifier:(id *)arg2 error:(id *)arg3;	// IMP=0x001000000006e5bf
- (_Bool)deleteChangeWithScopedIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000006e42e
- (_Bool)reinjectChange:(id)arg1 dequeueOrder:(long long)arg2 discardedUploadIdentifier:(id *)arg3 overwrittenRecord:(_Bool *)arg4 error:(id *)arg5;	// IMP=0x001000000006e273
- (_Bool)_overwriteChange:(id)arg1 pushContext:(id)arg2 error:(id *)arg3;	// IMP=0x001000000006e15b
- (_Bool)storeChange:(id)arg1 pushContext:(id)arg2 discardedUploadIdentifier:(id *)arg3 error:(id *)arg4;	// IMP=0x001000000006dfd4
- (_Bool)_mergeChange:(id)arg1 overChange:(id)arg2 discardedUploadIdentifier:(id *)arg3 error:(id *)arg4;	// IMP=0x001000000006dab4
- (_Bool)_storeChange:(id)arg1 update:(_Bool)arg2 error:(id *)arg3;	// IMP=0x001000000006d527
- (id)_pqlChangeWithScopedIdentifier:(id)arg1;	// IMP=0x001000000006d3c7
- (_Bool)hasChangesWithScopeFilter:(id)arg1;	// IMP=0x001000000006d1e3
- (_Bool)hasChangesWithPriorityLowerThanPriority:(unsigned long long)arg1 inScopeWithIdentifier:(id)arg2;	// IMP=0x001000000006d0fe
- (unsigned long long)minimumPriorityForChangesInScopeWithIdentifier:(id)arg1;	// IMP=0x001000000006cff9
- (_Bool)hasChangesInScopeWithIdentifier:(id)arg1;	// IMP=0x001000000006cf8a
- (_Bool)hasChangesInScopeWithIdentifier:(id)arg1 table:(id)arg2;	// IMP=0x001000000006cebb
- (unsigned long long)countOfChangesInScopeWithIdentifier:(id)arg1;	// IMP=0x001000000006cde4
- (long long)_scopeIndexForScopedIdentifier:(id)arg1;	// IMP=0x001000000006cd10
- (long long)_scopeIndexForScopeIdentifier:(id)arg1;	// IMP=0x001000000006cc3c
- (id)_scopedIdentifierForIdentifier:(id)arg1 scopeIndex:(long long)arg2;	// IMP=0x001000000006cb4e
- (_Bool)upgradeStorageToVersion:(long long)arg1;	// IMP=0x001000000006bda7
- (_Bool)fixStorageAfterAnyVersionChange;	// IMP=0x001000000006bd5e
- (_Bool)initializeStorage;	// IMP=0x001000000006bc8b
- (_Bool)_createIndexesWithPriority:(_Bool)arg1;	// IMP=0x001000000006bb19
- (_Bool)createIndexWithName:(id)arg1 withDefinition:(id)arg2 unique:(_Bool)arg3 error:(id *)arg4;	// IMP=0x001000000006b9f9
- (_Bool)_createFlagsIndexes;	// IMP=0x001000000006b986
- (_Bool)_createIndexForFlags:(long long)arg1;	// IMP=0x001000000006b7ae
- (id)initWithAbstractObject:(id)arg1;	// IMP=0x001000000006b6cc

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isAlive;
@property(readonly, nonatomic) _Bool shouldIncludeInStatus;
@property(readonly) Class superclass;

@end

