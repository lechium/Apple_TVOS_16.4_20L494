//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CKRecordID, CKRecordZone, CKRecordZoneID, CKReference, CPLCloudKitScope, CPLEngineScope, NSString;

@interface CPLCloudKitZoneIdentification : NSObject
{
    _Bool _hasCachedRootRef;	// 8 = 0x8
    CKReference *_cachedRootRef;	// 16 = 0x10
    CPLCloudKitScope *_cloudKitScope;	// 24 = 0x18
    CPLEngineScope *_engineScope;	// 32 = 0x20
}

+ (_Bool)isScopeReadonlyFromCKShare:(id)arg1;	// IMP=0x0020000000115726
+ (long long)_permissionFromCKShare:(id)arg1;	// IMP=0x0010000000115619
+ (id)prefixForNewScopes;	// IMP=0x0010000000115611
+ (id)libraryInfoRecordName;	// IMP=0x0010000000115000
+ (_Bool)isSupportedShare:(id)arg1;	// IMP=0x0010000000114e5a
+ (_Bool)isSupportedShareType:(id)arg1;	// IMP=0x0010000000114de6
+ (id)shareType;	// IMP=0x0010000000114dde
+ (id)shareRecordName;	// IMP=0x0010000000114dd6
+ (id)rootRecordName;	// IMP=0x0010000000114dce
+ (_Bool)supportsCloudKitScope:(id)arg1 engineScope:(id)arg2;	// IMP=0x00100000001143da
+ (long long)scopeTypeForCloudKitScope:(id)arg1 proposedScopeType:(long long)arg2 fetchedRecords:(id)arg3 currentUserID:(id)arg4;	// IMP=0x00100000001143d2
+ (id)recordsToFetchToIdentifyZoneID:(id)arg1 proposedScopeType:(long long)arg2 currentUserID:(id)arg3;	// IMP=0x00100000001141c0
+ (id)recordNamesForScopeInfo;	// IMP=0x00100000001140c4
+ (_Bool)shouldProtectZoneIDFromDeletion:(id)arg1;	// IMP=0x0010000000113e06
- (void).cxx_destruct;	// IMP=0x0020000000115754
@property(readonly, nonatomic) CPLEngineScope *engineScope; // @synthesize engineScope=_engineScope;
@property(readonly, nonatomic) CPLCloudKitScope *cloudKitScope; // @synthesize cloudKitScope=_cloudKitScope;
- (_Bool)_isScopeReadonlyFromCKShare:(id)arg1;	// IMP=0x0010000000115697
- (id)newScopeIdentifier;	// IMP=0x0010000000115529
- (void)validateCreateScopeTask:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000115519
- (void)validateAcceptSharedScopeTask:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000115509
@property(readonly, nonatomic) long long scopeType;
@property(readonly, nonatomic) NSString *scopeIdentifier;
@property(readonly, nonatomic) CKRecordZone *zone;
@property(readonly, nonatomic) CKRecordZoneID *zoneID;
- (id)scopedIdentifierWithIdentifier:(id)arg1;	// IMP=0x00000000001153b8
- (id)recordIDWithRecordName:(id)arg1;	// IMP=0x0010000000115335
- (_Bool)supportsDeletionOfRecordClass:(Class)arg1;	// IMP=0x0010000000115320
- (_Bool)supportsDirectDeletionOfRecordClass:(Class)arg1;	// IMP=0x001000000011530b
- (_Bool)supportsDownloadOfRecordClass:(Class)arg1;	// IMP=0x0010000000115303
- (_Bool)supportsUploadOfRecordClass:(Class)arg1;	// IMP=0x00100000001152fb
- (_Bool)supportsDeletionOfRecord:(id)arg1;	// IMP=0x00100000001152e6
- (_Bool)supportsDirectDeletionOfRecord:(id)arg1;	// IMP=0x00100000001152d1
- (_Bool)supportsDownloadOfChange:(id)arg1;	// IMP=0x001000000011529d
- (_Bool)supportsUploadOfChange:(id)arg1;	// IMP=0x0010000000115269
- (void)setupRootOnRecord:(id)arg1;	// IMP=0x00100000001151fe
@property(readonly, nonatomic) long long databaseScope;
@property(readonly, nonatomic) long long operationType;
- (id)_rootRef;	// IMP=0x00100000001150cd
@property(readonly, nonatomic) NSString *libraryInfoRecordName;
@property(readonly, nonatomic) NSString *shareType;
@property(readonly, nonatomic) NSString *shareRecordName;
@property(readonly, nonatomic) NSString *rootRecordType;
@property(readonly, nonatomic) CKRecordID *rootRecordID;
- (id)proposedStagingZoneIdentificationWithCurrentUserID:(id)arg1;	// IMP=0x0010000000115008
- (_Bool)isSupportedShare:(id)arg1;	// IMP=0x0010000000114f67
- (_Bool)isSupportedShareType:(id)arg1;	// IMP=0x0010000000114ef3
- (id)updatedFlagsFromDeletedCKRecordID:(id)arg1 recordType:(id)arg2;	// IMP=0x0010000000114dc6
- (id)updatedScopeChangeFromScopeChange:(id)arg1 currentUserID:(id)arg2 withDeletedCKRecordID:(id)arg3 recordType:(id)arg4;	// IMP=0x0010000000114dbe
- (id)updatedFlagsFromCKRecord:(id)arg1;	// IMP=0x0010000000114cd1
- (id)scopeFlagsUpdateFromCKRecords:(id)arg1;	// IMP=0x0010000000114b6b
- (id)updatedScopeChangeFromScopeChange:(id)arg1 currentUserID:(id)arg2 withCKRecord:(id)arg3;	// IMP=0x001000000011482e
- (id)scopeChangeFromCKRecords:(id)arg1 currentUserID:(id)arg2 previousScopeChange:(id)arg3;	// IMP=0x0010000000114536
- (id)_baseScopeChange;	// IMP=0x00100000001144c3
- (id)recordsToUpdateFromScopeChange:(id)arg1 currentUserID:(id)arg2;	// IMP=0x00100000001144b6
@property(readonly, nonatomic) CKRecordID *shareRecordIDToDelete;
@property(readonly, nonatomic) _Bool supportsZoneCreation;
@property(readonly, nonatomic) _Bool supportsZoneDelete;
- (id)recordsToFetchForScopeInfoWithCurrentUserID:(id)arg1;	// IMP=0x00100000001143e2
- (id)initWithCloudKitScope:(id)arg1 engineScope:(id)arg2;	// IMP=0x0010000000113e54

@end

