//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AFClientConfiguration, AFInstanceContext, AFRequestInfo, AFSpeechRequestOptions, AFWatchdogTimer, MISSING_TYPE, NSMutableOrderedSet, NSString, NSUUID, NSXPCConnection;
@protocol AFBluetoothDevice, OS_dispatch_group, OS_dispatch_queue, OS_os_transaction;

@interface ADClientConnection : NSObject
{
    NSXPCConnection *_xpcConnection;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_queue;	// 16 = 0x10
    AFRequestInfo *_requestInfo;	// 24 = 0x18
    AFSpeechRequestOptions *_requestOptions;	// 32 = 0x20
    CDUnknownBlockType _requestCompletion;	// 40 = 0x28
    NSObject<OS_dispatch_group> *_requestGroup;	// 48 = 0x30
    NSUUID *_requestUUID;	// 56 = 0x38
    AFClientConfiguration *_clientConfiguration;	// 64 = 0x40
    unsigned long long _pendingRequestId;	// 72 = 0x48
    double _pendingRequestTimestamp;	// 80 = 0x50
    CDUnknownBlockType _pendingSpeechRequestContinue;	// 88 = 0x58
    long long _numberOfPresentedUIs;	// 96 = 0x60
    CDUnknownBlockType _presentedUIReply;	// 104 = 0x68
    NSObject<OS_os_transaction> *_presentedUITransaction;	// 112 = 0x70
    int _ringerStateToken;	// 120 = 0x78
    _Bool _hasCachedADShouldSpeak;	// 124 = 0x7c
    _Bool _cachedADShouldSpeak;	// 125 = 0x7d
    _Bool _requestOptionsRequireTTS;	// 126 = 0x7e
    _Bool _serverIsForcingTTS;	// 127 = 0x7f
    _Bool _combinedShouldSpeakState;	// 128 = 0x80
    _Bool _isConnected;	// 129 = 0x81
    id <AFBluetoothDevice> _bluetoothDevice;	// 136 = 0x88
    NSMutableOrderedSet *_audioSessionAssertions;	// 144 = 0x90
    NSMutableOrderedSet *_speechCapturingContexts;	// 152 = 0x98
    AFWatchdogTimer *_longLivedConnectionABCTimer;	// 160 = 0xa0
    AFInstanceContext *_instanceContext;	// 168 = 0xa8
    _Bool adSpeechSessionEnded;	// 176 = 0xb0
}

- (void).cxx_destruct;	// IMP=0x002000000027bad3
@property(nonatomic) _Bool adSpeechSessionEnded; // @synthesize adSpeechSessionEnded;
- (void)_continuePendingSpeechRequestFromTimestamp:(double)arg1;	// IMP=0x001000000027b9ea
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x001000000027b8ed
- (oneway void)emitHomeMetricInvocationEvent;	// IMP=0x001000000027b8a9
- (oneway void)recordUIMetrics:(id)arg1;	// IMP=0x001000000027b8a3
- (oneway void)_refreshAssistantValidation;	// IMP=0x001000000027b85f
- (oneway void)_startSpeechWithURL:(id)arg1 isNarrowBand:(_Bool)arg2;	// IMP=0x001000000027b7de
- (oneway void)_requestBarrierWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000027b768
- (oneway void)_barrierWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000027b75d
- (oneway void)_clearAssistantInfoForAccountIdentifier:(id)arg1;	// IMP=0x001000000027b6ee
- (oneway void)_fetchAppContextForApplicationInfo:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000027b560
- (oneway void)_broadcastCommandDictionary:(id)arg1;	// IMP=0x001000000027b476
- (oneway void)_performTaskCommandDictionary:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000027b000
- (oneway void)_performCommandDictionary:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000027ab18
- (oneway void)_sendLargeData:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000027ab03
- (oneway void)_pingServiceForIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000027a916
- (oneway void)_listInstalledServicesWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000027a8a0
- (oneway void)adviseSessionArbiterToContinueWithPreviousWinner:(_Bool)arg1;	// IMP=0x001000000027a84d
- (oneway void)reportIssueForType:(id)arg1 subtype:(id)arg2 context:(id)arg3;	// IMP=0x001000000027a6f9
- (oneway void)reportIssueForError:(id)arg1 type:(long long)arg2 subtype:(id)arg3 context:(id)arg4;	// IMP=0x001000000027a5f6
- (oneway void)reportIssueForError:(id)arg1 type:(long long)arg2 context:(id)arg3;	// IMP=0x001000000027a518
- (oneway void)updateSpeechSynthesisRecord:(id)arg1;	// IMP=0x001000000027a4a2
- (oneway void)stopAllAudioPlaybackRequests:(_Bool)arg1;	// IMP=0x001000000027a42a
- (oneway void)stopAudioPlaybackRequest:(id)arg1 immediately:(_Bool)arg2;	// IMP=0x001000000027a390
- (oneway void)startAudioPlaybackRequest:(id)arg1 options:(unsigned long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000027a2de
- (oneway void)getRemoteClockTimerSnapshotWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000279fa5
- (oneway void)getSerializedCachedObjectsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000279b15
- (oneway void)getDeferredObjectsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000279a8b
- (oneway void)recordAWDSuccessMetrics;	// IMP=0x0010000000279a47
- (oneway void)recordCancellationMetrics;	// IMP=0x0010000000279a03
- (oneway void)recordFailureMetricsForError:(id)arg1;	// IMP=0x001000000027998d
- (oneway void)telephonyRequestCompleted;	// IMP=0x0010000000279949
- (oneway void)prepareForPhoneCall;	// IMP=0x0010000000279905
- (oneway void)setAlertContextDirty;	// IMP=0x00100000002798c1
- (oneway void)setOverriddenApplicationContext:(id)arg1 withContext:(id)arg2;	// IMP=0x0010000000279837
- (oneway void)setApplicationContextForApplicationInfos:(id)arg1 withRefId:(id)arg2;	// IMP=0x0010000000279820
- (oneway void)fetchAppicationContextForApplicationInfo:(id)arg1 supplementalContext:(id)arg2 refID:(id)arg3;	// IMP=0x0010000000279787
- (oneway void)setApplicationContext:(id)arg1;	// IMP=0x0010000000279711
- (oneway void)willSetApplicationContextWithRefId:(id)arg1;	// IMP=0x001000000027969b
- (oneway void)rollbackClearContext;	// IMP=0x00100000002795cb
- (oneway void)clearContext;	// IMP=0x00100000002794e8
- (oneway void)performGenericAceCommand:(id)arg1 interruptOutstandingRequest:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000279447
- (oneway void)requestStateUpdateWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000279341
- (oneway void)requestShouldSpeakStateWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000002792e9
- (oneway void)stopSpeechWithOptions:(id)arg1;	// IMP=0x00100000002791d7
- (oneway void)cancelSpeech;	// IMP=0x00100000002790f0
- (oneway void)rollbackRequest;	// IMP=0x0010000000279019
- (oneway void)cancelRequestForReason:(long long)arg1 withError:(id)arg2;	// IMP=0x0010000000278ea2
- (oneway void)updateSpeechOptions:(id)arg1;	// IMP=0x0010000000278d93
- (oneway void)startAcousticIDRequestWithOptions:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000278cdf
- (oneway void)startSpeechPronunciationRequestWithOptions:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000278c2b
- (oneway void)continuePendingSpeechRequestWithId:(unsigned long long)arg1 fromTimestamp:(double)arg2;	// IMP=0x0010000000278bc1
- (oneway void)startRecordingForPendingSpeechRequestWithOptions:(id)arg1 requestId:(unsigned long long)arg2 sessionUUID:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000278810
- (oneway void)startRequestWithInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000278608
- (void)_setRequestCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000278460
- (oneway void)willPresentUsefulUserResultAtDate:(id)arg1;	// IMP=0x001000000027832e
- (oneway void)endSession;	// IMP=0x001000000027817c
- (oneway void)setConfiguration:(id)arg1;	// IMP=0x0010000000278061
- (oneway void)didDismissUI;	// IMP=0x0010000000277e69
- (oneway void)willPresentUIWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000277bc4
- (oneway void)setModesConfiguration:(id)arg1;	// IMP=0x0010000000277b4e
- (oneway void)setCarDNDActive:(_Bool)arg1;	// IMP=0x0010000000277afb
- (oneway void)setLockState:(_Bool)arg1 showingLockScreen:(_Bool)arg2;	// IMP=0x0010000000277aa3
- (oneway void)resumeInterruptedAudioPlaybackIfNeeded;	// IMP=0x0010000000277a5f
- (oneway void)forceAudioSessionInactiveWithOptions:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000277994
- (oneway void)forceAudioSessionActiveWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000277793
- (oneway void)boostedPreheatWithStyle:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000277715
- (oneway void)preheatWithStyle:(long long)arg1 forOptions:(id)arg2;	// IMP=0x0010000000277696
- (void)bluetoothDeviceDidInvalidate:(id)arg1;	// IMP=0x00100000002775db
- (void)bluetoothDevice:(id)arg1 headphoneListeningModeDidChangeFrom:(long long)arg2 to:(long long)arg3;	// IMP=0x00100000002774fe
- (void)bluetoothDevice:(id)arg1 headphoneInEarDetectionStateDidChangeFrom:(id)arg2 to:(id)arg3;	// IMP=0x0010000000276bfd
- (void)bluetoothDevice:(id)arg1 deviceInfoDidChangeFrom:(id)arg2 to:(id)arg3;	// IMP=0x0010000000276af8
- (void)audioPlaybackService:(id)arg1 didStopRequest:(id)arg2 error:(id)arg3;	// IMP=0x00100000002769ec
- (void)audioPlaybackService:(id)arg1 didStartRequest:(id)arg2;	// IMP=0x0010000000276910
- (void)audioPlaybackService:(id)arg1 willStartRequest:(id)arg2;	// IMP=0x0010000000276834
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionOwnerResetNotification:(id)arg2;	// IMP=0x0010000000276697
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionOwnerLostNotification:(id)arg2;	// IMP=0x001000000027656a
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:(id)arg2;	// IMP=0x00100000002763cd
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:(id)arg2;	// IMP=0x00100000002762a0
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionRouteChangeNotificationWithUserInfo:(id)arg2;	// IMP=0x00100000002761f7
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionInterruptionNotificationWithUserInfo:(id)arg2;	// IMP=0x0010000000275fae
- (void)adShouldSpeakStateDidChange:(_Bool)arg1;	// IMP=0x0010000000275f25
- (void)_logShouldSpeakState:(_Bool)arg1;	// IMP=0x0010000000275ec8
- (_Bool)adWaitingForAudioFile;	// IMP=0x0010000000275ec0
- (void)adSpeechRecordingPerformTwoShotPromptWithType:(long long)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000275b5a
- (void)adSpeechRecordingDidDetectStartPointWithContext:(id)arg1;	// IMP=0x001000000027589c
- (void)adSpeechLocalRecognitionDidSucceedWithSessionUUID:(id)arg1;	// IMP=0x0010000000275896
- (void)adSpeechRecognitionDidFail:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x0010000000275791
- (void)adSpeechRecognitionWillBeginRecognitionUpdateForTask:(id)arg1;	// IMP=0x00100000002756b5
- (void)adSpeechRecordingDidRecognizePhrases:(id)arg1 rawPhrases:(id)arg2 utterances:(id)arg3 rawUtterances:(id)arg4 nluResult:(id)arg5 sessionUUID:(id)arg6 refId:(id)arg7;	// IMP=0x00100000002756af
- (void)adSpeechRecordingDidRecognizeTokens:(id)arg1 nluResult:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x00100000002756a9
- (void)adSpeechRecognizedPartialResult:(id)arg1;	// IMP=0x0010000000275536
- (void)adSpeechRecognized:(id)arg1 usingSpeechModel:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x00100000002753c3
- (void)adSpeechRecordingWillStopWithSignpostID:(unsigned long long)arg1;	// IMP=0x001000000027516d
- (void)adSpeechRecordingDidFail:(id)arg1 context:(id)arg2;	// IMP=0x0010000000274da3
- (void)adSpeechRecordingDidCancelWithContext:(id)arg1;	// IMP=0x0010000000274a33
- (void)adSpeechRecordingDidEndWithContext:(id)arg1;	// IMP=0x00100000002746c3
- (void)adSpeechRecordingDidChangeAVRecordRoute:(id)arg1 bluetoothDevice:(id)arg2 isDucking:(_Bool)arg3 isTwoShot:(_Bool)arg4 speechEndHostTime:(unsigned long long)arg5 context:(id)arg6;	// IMP=0x00100000002742fe
- (void)adSpeechRecordingDidBeginOnAVRecordRoute:(id)arg1 audioSessionID:(unsigned int)arg2 bluetoothDevice:(id)arg3 sessionRequestUUID:(id)arg4 dictationOptions:(id)arg5 context:(id)arg6;	// IMP=0x0010000000273ea8
- (void)adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:(id)arg1 context:(id)arg2;	// IMP=0x0010000000273b64
- (void)_updateShouldSpeak;	// IMP=0x0010000000273a48
- (_Bool)_shouldSpeak;	// IMP=0x0010000000273a25
- (void)_computeShouldSpeak;	// IMP=0x0010000000273859
- (void)_unregisterForRingerStateNotification;	// IMP=0x0010000000273835
- (void)_registerForRingerStateNotification;	// IMP=0x001000000027377c
- (void)_setServerForcedTTS:(_Bool)arg1;	// IMP=0x0010000000273739
- (void)_setRequestOptionsRequireTTS:(_Bool)arg1;	// IMP=0x0010000000273724
- (void)_setADShouldSpeak:(_Bool)arg1;	// IMP=0x001000000027370b
- (void)adFailedToLaunchAppWithBundleIdentifier:(id)arg1;	// IMP=0x001000000027362f
- (void)adWillProcessAppLaunchWithBundleIdentifier:(id)arg1;	// IMP=0x0010000000273553
- (void)adAudioSessionDidBecomeActive:(_Bool)arg1;	// IMP=0x00100000002734b3
- (void)adAudioSessionWillBecomeActive:(_Bool)arg1;	// IMP=0x0010000000273413
- (void)adRequestWillProcessStartPlayback:(long long)arg1 intent:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000027320f
- (void)adRequestDidHandleFailedStartPlayback:(long long)arg1;	// IMP=0x001000000027316f
- (void)adServerRequestsTTSStateUnmuted:(_Bool)arg1;	// IMP=0x0010000000273104
- (void)adAceConnectionWillRetryOnError:(id)arg1;	// IMP=0x0010000000273028
- (void)adInvalidateCurrentUserActivity;	// IMP=0x0010000000272f9c
- (void)adSetUserActivityInfo:(id)arg1 webpageURL:(id)arg2;	// IMP=0x0010000000272e90
- (MISSING_TYPE *)adAcousticIDRequestDidFinishSuccessfully: /* Error: Ran out of types for this method. */;	// IMP=0x0010000000272df0
- (void)adMusicWasDetected;	// IMP=0x0010000000272d64
- (void)adAcousticIDRequestWillStart;	// IMP=0x0010000000272cd8
- (void)adQuickStopWasHandledWithActions:(unsigned long long)arg1;	// IMP=0x0010000000272c38
- (void)adRequestRequestedDismissAssistantWithReason:(long long)arg1;	// IMP=0x0010000000272b98
- (void)adRequestRequestedDismissAssistant;	// IMP=0x0010000000272b0c
- (void)adExtensionRequestFinishedForApplication:(id)arg1 error:(id)arg2;	// IMP=0x0010000000272a00
- (void)adExtensionRequestWillStartForApplication:(id)arg1;	// IMP=0x0010000000272924
- (void)adWantsToCacheImage:(id)arg1;	// IMP=0x00100000002727f8
- (_Bool)adTextToSpeechIsMuted;	// IMP=0x00100000002726f9
- (void)adGetBulletinContext:(CDUnknownBlockType)arg1;	// IMP=0x0010000000272561
- (void)adRequestRequestedOpenURL:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000272384
- (void)adRequestRequestedOpenApplicationWithBundleID:(id)arg1 URL:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000027218e
- (void)adStartUIRequestWithText:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000271f61
- (void)adRequestEncounteredIntermediateError:(id)arg1;	// IMP=0x0010000000271e5b
- (void)adRequestDidCompleteWithSuccess:(_Bool)arg1 error:(id)arg2;	// IMP=0x0010000000271aa8
- (void)_handleRequestCompletedWithUUID:(id)arg1 error:(id)arg2;	// IMP=0x0010000000271885
- (void)adRequestDidReceiveCommand:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000271412
- (void)adRequestWillReceiveCommand:(id)arg1;	// IMP=0x001000000027133b
- (void)_removeAllAudioSessionAssertionsForReason:(id)arg1;	// IMP=0x0010000000270e22
- (void)_addAudioSessionAssertion:(id)arg1;	// IMP=0x0010000000270d1f
- (void)_removeAllSpeechCapturingContextsForReason:(id)arg1;	// IMP=0x0010000000270972
- (void)_addSpeechCapturingContext:(id)arg1;	// IMP=0x001000000027086f
- (void)_setBluetoothDevice:(id)arg1;	// IMP=0x0010000000270763
- (void)_speechRecordingDidFinish;	// IMP=0x00100000002706d1
- (void)_updateSpeechRequestOptions:(id)arg1;	// IMP=0x0010000000270479
- (id)_serviceDelegateWithErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000002703e2
- (id)_serviceDelegate;	// IMP=0x00100000002703cc
- (void)connectionDisconnected;	// IMP=0x001000000027009c
- (void)dealloc;	// IMP=0x001000000026ff5e
- (id)initWithXPCConnection:(id)arg1;	// IMP=0x001000000026fb29

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

