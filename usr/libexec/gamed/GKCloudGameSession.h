//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CKRecord, GKCloudPlayer, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSString, NSURL;

@interface GKCloudGameSession : NSObject
{
    CKRecord *_record;	// 8 = 0x8
    NSDictionary *_playersByIdentifier;	// 16 = 0x10
    GKCloudPlayer *_owner;	// 24 = 0x18
    NSURL *_url;	// 32 = 0x20
}

+ (void)badgeCountForContainerName:(id)arg1 useCacheDirectly:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00200000000e6711
+ (void)updateBadgeCountsForContainerName:(id)arg1 useCacheDirectly:(_Bool)arg2;	// IMP=0x00100000000e6312
+ (void)updateBadgeCountsForContainerName:(id)arg1;	// IMP=0x00100000000e62fe
+ (void)deleteInviteRecordWithRecordID:(id)arg1 fromDatabase:(id)arg2;	// IMP=0x00100000000e5f5f
+ (void)searchAndSaveIdentityForRecord:(id)arg1 database:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000e5f59
+ (_Bool)shouldRetryForError:(id)arg1 andRetryCount:(int)arg2;	// IMP=0x00100000000e5aaf
+ (void)saveInviteRecord:(id)arg1 database:(id)arg2 retryCount:(int)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000e4da1
+ (void)getAssociatedAccountsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000e4d9b
+ (id)msgServiceQueue;	// IMP=0x00100000000e4d44
+ (void)generateAndStoreInviteBulletinForRecord:(id)arg1 database:(id)arg2;	// IMP=0x00100000000e4040
+ (id)packFakeTurnBasedBulletinWithZoneData:(id)arg1;	// IMP=0x00100000000e3ab9
+ (id)packFakeRealTimeBulletinWithZoneData:(id)arg1;	// IMP=0x00100000000e2e5b
+ (void)reportPlayerStateChangesToClients:(id)arg1 forUpdatedSession:(id)arg2 oldSession:(id)arg3;	// IMP=0x00100000000e1a2e
+ (void)openStoreForBundleID:(id)arg1;	// IMP=0x00100000000e0317
+ (void)launchOrOpenAppStoreForBundleID:(id)arg1;	// IMP=0x00100000000e02c9
+ (void)acceptShareMetadata:(id)arg1 retryCount:(int)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000dfad4
+ (void)showAcceptAlertWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000df94f
+ (void)handleLegacyShareMetadata:(id)arg1 needsAccept:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000dee63
+ (void)handleSessionShareMetadata:(id)arg1 needsAccept:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000de5b7
+ (void)handleCloudKitShareMetadata:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dddcb
+ (void)acceptShareURL:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dda51
+ (void)saveInformationForPrimaryUserForSessionWithShareMetadata:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dd13e
+ (void)fetchShareMetadataForURL:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dccdb
+ (void)fetchShareRecordsWithRecordIDs:(id)arg1 inDatabase:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000dcbb2
+ (id)cloudKitOperationConfigurationForSocialGamingSessionsContainer;	// IMP=0x00100000000dba03
+ (id)cloudKitOperationConfigurationForContainer:(id)arg1;	// IMP=0x00100000000db979
+ (void)subscribeToAllDBwithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000db478
+ (void)getZoneNamesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000dae9b
+ (void)createZoneWithName:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dacab
+ (void)bundleIDsForContainerName:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d9a87
+ (void)removeSessionWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d9248
+ (void)createSessionWithContainerName:(id)arg1 title:(id)arg2 maxConnectedPlayers:(long long)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000d85e3
+ (_Bool)isCloudDriveEnabledForBundleID:(id)arg1;	// IMP=0x00100000000d82bd
+ (id)databaseForZoneID:(id)arg1;	// IMP=0x00100000000d8271
+ (id)databaseForSession:(id)arg1;	// IMP=0x00100000000d8222
+ (id)sharedDatabase;	// IMP=0x00100000000d81c4
+ (id)privateDatabase;	// IMP=0x00100000000d8166
+ (_Bool)isOwnZoneID:(id)arg1;	// IMP=0x00100000000d8047
+ (_Bool)isOwnRecordID:(id)arg1;	// IMP=0x00100000000d7ff1
+ (id)recordIDForSessionIdentifier:(id)arg1;	// IMP=0x00100000000d7da2
+ (id)sessionIdentifierForRecordID:(id)arg1;	// IMP=0x00100000000d7bbf
+ (id)allowedCharacterSet;	// IMP=0x00100000000d7afe
+ (void)getFriendPlayersWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000d7483
+ (void)updateFriendRecordIfNeeded;	// IMP=0x00100000000d6c46
+ (void)updateFriendsWithRecord:(id)arg1;	// IMP=0x00100000000d6568
+ (void)updateCacheForFriendZoneID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d5f56
+ (void)updatePlayersForSessions:(id)arg1 sharesByRecordID:(id)arg2 inDatabase:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000d4cac
+ (void)primaryPlayerWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000d4beb
+ (id)playerIdentifierForUserRecordName:(id)arg1;	// IMP=0x00100000000d4b1e
+ (id)localPlayerAlias;	// IMP=0x00100000000d48b5
+ (void)determinePlayerChangesIn:(id)arg1 newSession:(id)arg2 notifyClients:(id)arg3;	// IMP=0x00100000000d40ae
+ (void)reportChangesForSessions:(id)arg1 shareChangedSessions:(id)arg2 removedSessions:(id)arg3 zoneID:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x00100000000d3126
+ (id)allChangedSessionsFromRecordChangedSessions:(id)arg1 shareChangedSessions:(id)arg2;	// IMP=0x00100000000d2c7a
+ (void)updateCacheForDatabase:(id)arg1 zoneIDs:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000d1372
+ (void)updateCacheForDatabaseScope:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000cfcbf
+ (void)updateCacheForZoneID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000cf8eb
+ (void)updateSessionCacheDatabasesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000cf525
+ (void)updateSessionCacheWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000cf0da
+ (void)updateUserWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000cf068
+ (void)fetchUserRecordIDWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000cefeb
+ (id)friendEmailsByID;	// IMP=0x00100000000cef9b
+ (void)sessionForShareMetadata:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ceeff
+ (void)sessionsForContainerName:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ceb49
+ (void)sessionForIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ce725
+ (id)cacheQueue;	// IMP=0x00100000000ce6ce
+ (id)sessionCache;	// IMP=0x00100000000ce679
+ (id)AES128Operation:(unsigned int)arg1 key:(id)arg2 data:(id)arg3;	// IMP=0x00100000000ce526
+ (id)AES128DecryptedVersionOfData:(id)arg1 withKey:(id)arg2;	// IMP=0x00100000000ce50c
+ (id)AES128EncryptedVersionOfData:(id)arg1 withKey:(id)arg2;	// IMP=0x00100000000ce4f5
+ (id)playerIdentifierForObfuscatedIdentifier:(id)arg1 containerName:(id)arg2;	// IMP=0x00100000000ce3f4
+ (id)obfuscatedIdentifierForPlayerIdentifier:(id)arg1 containerName:(id)arg2;	// IMP=0x00100000000ce309
+ (id)mutablePlistFromPlayerStatesData:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000cd504
+ (_Bool)supportsSecureCoding;	// IMP=0x00100000000cc996
- (void).cxx_destruct;	// IMP=0x00200000000e7924
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain, nonatomic) GKCloudPlayer *owner; // @synthesize owner=_owner;
@property(retain, nonatomic) NSDictionary *playersByIdentifier; // @synthesize playersByIdentifier=_playersByIdentifier;
@property(retain, nonatomic) CKRecord *record; // @synthesize record=_record;
- (void)setBadged:(_Bool)arg1 forPlayerIDs:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000e6f4f
- (void)saveConnectionState:(long long)arg1 forPlayerWithID:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000e25b4
- (void)tempEmailFixForPlayerID:(id)arg1;	// IMP=0x00100000000e242d
@property(readonly, nonatomic) NSArray *connectedPlayerIDs;
- (void)removePlayers:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000e0db7
- (void)deleteShareWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000e0a0a
- (void)fetchShareRecordWithRecordID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dc9bc
- (void)saveShare:(id)arg1 isNewShare:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000dc52b
- (void)setupShareWithRecordID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dc2c4
- (void)getShareURLWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000dbae0
- (void)saveWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000da9a7
- (void)saveData:(id)arg1 changeTag:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000da0d4
@property(readonly, nonatomic) NSString *containerName;
- (id)playersForGKGameSession;	// IMP=0x00100000000d5bcc
- (id)players;	// IMP=0x00100000000d5b7c
- (void)setPlayers:(id)arg1;	// IMP=0x00100000000d5973
- (void)updatePlayersWithIdentities:(id)arg1;	// IMP=0x00100000000d566a
- (id)createGKGameSession;	// IMP=0x00100000000cdc2a
@property(retain, nonatomic) NSMutableDictionary *nicknamesByIdentifier; // @dynamic nicknamesByIdentifier;
@property(retain, nonatomic) NSMutableDictionary *emailsByCKID;
@property(readonly, nonatomic) NSDictionary *playersByEmail;
- (id)playerStates;	// IMP=0x00100000000cd554
- (void)setPlayerStates:(id)arg1;	// IMP=0x00100000000cd48b
@property(readonly, nonatomic) NSString *serverChangeTag;
@property(readonly, nonatomic) GKCloudPlayer *lastModifiedPlayer;
@property(readonly, nonatomic) NSDate *lastModifiedDate;
@property(retain, nonatomic) NSData *data;
@property(nonatomic) long long maxConnectedPlayers;
@property(retain, nonatomic) NSString *title;
@property(readonly, nonatomic) NSString *identifier;
- (_Bool)isOwnedByUser;	// IMP=0x00100000000cce6c
- (id)description;	// IMP=0x00100000000ccd37
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00100000000ccc54
- (id)initWithCoder:(id)arg1;	// IMP=0x00100000000cc99e
- (id)initWithRecord:(id)arg1;	// IMP=0x00100000000cc92e
- (id)initWithContainerName:(id)arg1;	// IMP=0x00100000000cc87a

@end

