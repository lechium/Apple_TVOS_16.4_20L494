//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVAsset, AVAssetTrack, AVCoordinatedPlaybackSuspension, AVDelegateManager, AVInterstitialController, AVMediaSelectionOption, AVNavigationMarkersGroup, AVObservationController, AVPlayer, AVPlayerItem, AVPlayerItemPhotosensitivityMetadataHandler, AVPlayerLayer, AVQueuePlayer, AVTimeRange, AVValueTiming, BSSimpleAssertion, NSArray, NSDate, NSDictionary, NSError, NSNumber, NSString, NSTimer;
@protocol AVPlayerControllerDelegate, OS_dispatch_queue, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface AVPlayerController : NSObject
{
    NSArray *_audioMediaSelectionOptions;	// 8 = 0x8
    NSArray *_visualMediaSelectionOptions;	// 16 = 0x10
    NSArray *_legibleMediaSelectionOptions;	// 24 = 0x18
    AVMediaSelectionOption *_cachedSelectedAudioMediaSelectionOption;	// 32 = 0x20
    AVMediaSelectionOption *_cachedSelectedLegibleMediaSelectionOption;	// 40 = 0x28
    AVMediaSelectionOption *_cachedSelectedLegibleMediaSelectionOptionAccordingToAVFoundation;	// 48 = 0x30
    NSString *_lastKnownPersistedExtendedLanguageTag;	// 56 = 0x38
    void *_observationInfo;	// 64 = 0x40
    _Bool _inspectionSuspended;	// 72 = 0x48
    id _updateAtMinMaxTimePeriodicObserverToken;	// 80 = 0x50
    id _timecodePeriodicObserverToken;	// 88 = 0x58
    _Bool _pictureInPictureInterrupted;	// 96 = 0x60
    _Bool _handlesAudioSessionInterruptions;	// 97 = 0x61
    _Bool _isDeallocating;	// 98 = 0x62
    _Bool _hasSetUpSeekableLiveStreamState;	// 99 = 0x63
    NSNumber *_rateToRestoreAfterAudioSessionInterruptionEnds;	// 104 = 0x68
    CDUnknownBlockType _retryPlayingImmediatelyBlock;	// 112 = 0x70
    _Bool _shouldPlayImmediately;	// 120 = 0x78
    _Bool _looping;	// 121 = 0x79
    long long _actionAtItemEnd;	// 128 = 0x80
    long long _playbackSuspensionCount;	// 136 = 0x88
    long long _scrubbingCount;	// 144 = 0x90
    _Bool _usesSeekBasedHighRateStrategy;	// 152 = 0x98
    float _rate;	// 156 = 0x9c
    NSObject<OS_dispatch_queue> *_seekQueue;	// 160 = 0xa0
    NSObject<OS_dispatch_source> *_seekTimer;	// 168 = 0xa8
    double _timeOfLastUpdate;	// 176 = 0xb0
    _Bool _ignoreRateKeyValueChanges;	// 184 = 0xb8
    _Bool _ignoreNextRateKeyValueChange;	// 185 = 0xb9
    _Bool _pendingSeek;	// 186 = 0xba
    _Bool _isResumed;	// 187 = 0xbb
    CDStruct_1b6d18a9 _toleranceBefore;	// 188 = 0xbc
    CDStruct_1b6d18a9 _toleranceAfter;	// 212 = 0xd4
    _Bool _isScanningForward;	// 236 = 0xec
    _Bool _isScanningBackward;	// 237 = 0xed
    unsigned long long _scanningCount;	// 240 = 0xf0
    double _preScanningRate;	// 248 = 0xf8
    AVValueTiming *_liveStreamMinTiming;	// 256 = 0x100
    AVValueTiming *_liveStreamMaxTiming;	// 264 = 0x108
    _Bool _liveStreamEventModePossible;	// 272 = 0x110
    long long _canUseNetworkResourcesForLiveStreamingWhilePausedCount;	// 280 = 0x118
    _Bool _previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused;	// 288 = 0x120
    _Bool _shouldPlayWhenLikelyToKeepUp;	// 289 = 0x121
    _Bool _playingOnSecondScreen;	// 290 = 0x122
    BSSimpleAssertion *_reduceResourceUsageAssertion;	// 296 = 0x128
    double _defaultPlaybackRate;	// 304 = 0x130
    _Bool _touchBarRequiresLinearPlayback;	// 312 = 0x138
    id <AVPlayerControllerDelegate> _internalDelegate;	// 320 = 0x140
    NSObject<OS_dispatch_queue> *_backgroundQueue;	// 328 = 0x148
    NSDate *_lastTimePlayingOnMatchPointDeviceWasUpdated;	// 336 = 0x150
    NSTimer *_updatePlayingOnMatchPointDeviceThrottleTimer;	// 344 = 0x158
    AVPlayerItemPhotosensitivityMetadataHandler *_photosensitivityMetadataHandler;	// 352 = 0x160
    _Bool _muted;	// 360 = 0x168
    _Bool _avkitSettingMuted;	// 361 = 0x169
    _Bool _allowsAudioPlayback;	// 362 = 0x16a
    _Bool _hasPendingAtLiveEdgeStateUpdate;	// 363 = 0x16b
    NSTimer *_liveEdgeTimer;	// 368 = 0x170
    _Bool _atLiveEdge;	// 376 = 0x178
    _Bool _atMaxTime;	// 377 = 0x179
    _Bool _atMinTime;	// 378 = 0x17a
    _Bool _scrubbing;	// 379 = 0x17b
    _Bool _pictureInPictureSupported;	// 380 = 0x17c
    _Bool _seekingInternal;	// 381 = 0x17d
    _Bool _seeking;	// 382 = 0x17e
    _Bool _composable;	// 383 = 0x17f
    _Bool _hasProtectedContent;	// 384 = 0x180
    _Bool _compatibleWithAirPlayVideo;	// 385 = 0x181
    _Bool _preventingIdleSystemSleep;	// 386 = 0x182
    _Bool _preventingIdleDisplaySleep;	// 387 = 0x183
    _Bool _disablingAutomaticTermination;	// 388 = 0x184
    _Bool _allowsPictureInPicturePlayback;	// 389 = 0x185
    _Bool _pictureInPictureActive;	// 390 = 0x186
    _Bool _canTogglePictureInPicture;	// 391 = 0x187
    _Bool _hasBegunInspection;	// 392 = 0x188
    _Bool _playingOnMatchPointDevice;	// 393 = 0x189
    _Bool _playbackSuspended;	// 394 = 0x18a
    _Bool _coordinatedPlaybackActive;	// 395 = 0x18b
    AVPlayer *_player;	// 400 = 0x190
    AVPlayer *_activePlayer;	// 408 = 0x198
    double _activeRate;	// 416 = 0x1a0
    AVObservationController *_observationController;	// 424 = 0x1a8
    AVAsset *_currentAssetIfReady;	// 432 = 0x1b0
    NSObject<OS_dispatch_queue> *_assetInspectionQueue;	// 440 = 0x1b8
    AVAsset *_assetBeingPrepared;	// 448 = 0x1c0
    NSString *_externalPlaybackAirPlayDeviceLocalizedName;	// 456 = 0x1c8
    AVValueTiming *_timing;	// 464 = 0x1d0
    AVValueTiming *_minTiming;	// 472 = 0x1d8
    AVValueTiming *_maxTiming;	// 480 = 0x1e0
    AVAssetTrack *_currentAudioTrack;	// 488 = 0x1e8
    AVAssetTrack *_currentVideoTrack;	// 496 = 0x1f0
    double _seekToTime;	// 504 = 0x1f8
    double _initialScrubbingTime;	// 512 = 0x200
    NSDictionary *_metadata;	// 520 = 0x208
    NSArray *_availableMetadataFormats;	// 528 = 0x210
    double _rateBeforeScrubBegan;	// 536 = 0x218
    AVCoordinatedPlaybackSuspension *_scrubCoordinatorSuspension;	// 544 = 0x220
    NSString *_pipActivitySessionIdentifier;	// 552 = 0x228
    AVPlayerLayer *_playerLayerForReducingResources;	// 560 = 0x230
    NSArray *_photosensitivityRegions;	// 568 = 0x238
    long long _bestAvailableVideoResolution;	// 576 = 0x240
    long long _bestAvailableVideoRange;	// 584 = 0x248
    long long _bestAvailableAudioFormat;	// 592 = 0x250
    double _suspendedRate;	// 600 = 0x258
    struct CGSize _presentationSize;	// 608 = 0x260
    CDStruct_1b6d18a9 _seekToTimeInternal;	// 624 = 0x270
}

+ (id)keyPathsForValuesAffectingPictureInPicturePossible;	// IMP=0x00600000000c4c7f
+ (id)keyPathsForValuesAffectingExternalPlaybackType;	// IMP=0x00600000000c4c53
+ (id)keyPathsForValuesAffectingExternalPlaybackActive;	// IMP=0x00600000000c4c33
+ (id)keyPathsForValuesAffectingPlayingOnExternalScreen;	// IMP=0x00600000000c4c07
+ (id)keyPathsForValuesAffectingAllowsExternalPlayback;	// IMP=0x00600000000c4be7
+ (id)keyPathsForValuesAffectingCanSeekFrameBackward;	// IMP=0x00600000000c4bbb
+ (id)keyPathsForValuesAffectingCanSeekFrameForward;	// IMP=0x00600000000c4b8f
+ (id)keyPathsForValuesAffectingCanSeekToEnd;	// IMP=0x00600000000c4b6f
+ (id)keyPathsForValuesAffectingCanSeekToBeginning;	// IMP=0x00600000000c4b4f
+ (id)keyPathsForValuesAffectingCanScanBackward;	// IMP=0x00600000000c4b18
+ (id)keyPathsForValuesAffectingCanScanForward;	// IMP=0x00600000000c4ae1
+ (id)keyPathsForValuesAffectingCanSeek;	// IMP=0x00600000000c4a8d
+ (id)keyPathsForValuesAffectingTimeControlStatus;	// IMP=0x00600000000c4a6d
+ (id)keyPathsForValuesAffectingHasShareableContent;	// IMP=0x00600000000c4a36
+ (id)keyPathsForValuesAffectingHasTrimmableContent;	// IMP=0x00600000000c4a0a
+ (id)keyPathsForValuesAffectingHasSeekableLiveStreamingContent;	// IMP=0x00600000000c493b
+ (id)keyPathsForValuesAffectingHasLiveStreamingContent;	// IMP=0x00600000000c4877
+ (id)keyPathsForValuesAffectingStreaming;	// IMP=0x00600000000c4857
+ (id)keyPathsForValuesAffectingHasEnabledVideo;	// IMP=0x00600000000c4837
+ (id)keyPathsForValuesAffectingHasVideo;	// IMP=0x00600000000c4817
+ (id)keyPathsForValuesAffectingHasEnabledAudio;	// IMP=0x00600000000c47f7
+ (id)keyPathsForValuesAffectingLoadedTimeRanges;	// IMP=0x00600000000c47c0
+ (id)keyPathsForValuesAffectingSeekableTimeRanges;	// IMP=0x00600000000c47a0
+ (id)keyPathsForValuesAffectingCurrentTimeWithinEndTimes;	// IMP=0x00600000000c4774
+ (id)keyPathsForValuesAffectingContentDurationWithinEndTimes;	// IMP=0x00600000000c4748
+ (id)keyPathsForValuesAffectingForwardPlaybackEndTime;	// IMP=0x00600000000c4728
+ (id)keyPathsForValuesAffectingMaxTime;	// IMP=0x00600000000c46e0
+ (id)keyPathsForValuesAffectingReversePlaybackEndTime;	// IMP=0x00600000000c46c0
+ (id)keyPathsForValuesAffectingMinTime;	// IMP=0x00600000000c4689
+ (id)keyPathsForValuesAffectingCurrentTime;	// IMP=0x00600000000c4669
+ (id)keyPathsForValuesAffectingContentDimensions;	// IMP=0x00600000000c45bb
+ (id)keyPathsForValuesAffectingContentDuration;	// IMP=0x00600000000c459b
+ (id)keyPathsForValuesAffectingHasContent;	// IMP=0x00600000000c457b
+ (id)keyPathsForValuesAffectingMuted;	// IMP=0x00600000000c455b
+ (id)keyPathsForValuesAffectingVolume;	// IMP=0x00600000000c453b
+ (id)keyPathsForValuesAffectingCanTogglePlayback;	// IMP=0x00600000000c450f
+ (id)keyPathsForValuesAffectingCanPause;	// IMP=0x00600000000c44ef
+ (id)keyPathsForValuesAffectingPlaying;	// IMP=0x00600000000c44cf
+ (id)keyPathsForValuesAffectingCanPlay;	// IMP=0x00600000000c44a3
+ (id)keyPathsForValuesAffectingDefaultPlaybackRate;	// IMP=0x00600000000c447f
+ (id)keyPathsForValuesAffectingRate;	// IMP=0x00600000000c445f
+ (id)keyPathsForValuesAffectingActiveRate;	// IMP=0x00600000000c443b
+ (id)keyPathsForValuesAffectingCompletelySeekable;	// IMP=0x00600000000c440f
+ (id)keyPathsForValuesAffectingError;	// IMP=0x00600000000c43ef
+ (id)keyPathsForValuesAffectingReadyToPlay;	// IMP=0x00600000000c43cf
+ (id)keyPathsForValuesAffectingStatus;	// IMP=0x00600000000c4398
+ (_Bool)_usesCoreMediaBasedSmoothHighRatePlayback;	// IMP=0x00600000000c437d
+ (void)setCachedIsPictureInPictureSupported:(_Bool)arg1;	// IMP=0x00600000000c4371
+ (_Bool)cachedIsPictureInPictureSupported;	// IMP=0x00600000000c4365
+ (void)initialize;	// IMP=0x00600000000c42eb
+ (id)keyPathsForValuesAffectingMaximumVideoResolution;	// IMP=0x00600000000c4f55
+ (id)keyPathsForValuesAffectingPreferredDisplayCriteria;	// IMP=0x00600000000c4f35
+ (id)keyPathsForValuesAffectingUsesExternalPlaybackWhileExternalScreenIsActive;	// IMP=0x00600000000c4f15
+ (id)keyPathsForValuesAffectingHasLegibleMediaSelectionOptions;	// IMP=0x006000000013771d
+ (id)keyPathsForValuesAffectingHasAudioMediaSelectionOptions;	// IMP=0x00600000001376fd
+ (id)keyPathsForValuesAffectingHasMediaSelectionOptions;	// IMP=0x00600000001376d1
+ (id)canonicalLanguageIdentifierFromString:(id)arg1;	// IMP=0x006000000013755a
- (void).cxx_destruct;	// IMP=0x00000000000bfc94
@property(nonatomic) _Bool coordinatedPlaybackActive; // @synthesize coordinatedPlaybackActive=_coordinatedPlaybackActive;
@property(readonly, nonatomic) double suspendedRate; // @synthesize suspendedRate=_suspendedRate;
@property(readonly, nonatomic, getter=isPlaybackSuspended) _Bool playbackSuspended; // @synthesize playbackSuspended=_playbackSuspended;
@property(nonatomic) long long bestAvailableAudioFormat; // @synthesize bestAvailableAudioFormat=_bestAvailableAudioFormat;
@property(nonatomic) long long bestAvailableVideoRange; // @synthesize bestAvailableVideoRange=_bestAvailableVideoRange;
@property(nonatomic) long long bestAvailableVideoResolution; // @synthesize bestAvailableVideoResolution=_bestAvailableVideoResolution;
@property(retain, nonatomic) NSArray *photosensitivityRegions; // @synthesize photosensitivityRegions=_photosensitivityRegions;
@property(nonatomic) __weak AVPlayerLayer *playerLayerForReducingResources; // @synthesize playerLayerForReducingResources=_playerLayerForReducingResources;
@property(nonatomic, getter=isPlayingOnMatchPointDevice) _Bool playingOnMatchPointDevice; // @synthesize playingOnMatchPointDevice=_playingOnMatchPointDevice;
@property(nonatomic) _Bool hasBegunInspection; // @synthesize hasBegunInspection=_hasBegunInspection;
@property(copy, nonatomic) NSString *pipActivitySessionIdentifier; // @synthesize pipActivitySessionIdentifier=_pipActivitySessionIdentifier;
@property(nonatomic) _Bool canTogglePictureInPicture; // @synthesize canTogglePictureInPicture=_canTogglePictureInPicture;
@property(nonatomic, getter=isPictureInPictureActive) _Bool pictureInPictureActive; // @synthesize pictureInPictureActive=_pictureInPictureActive;
@property(nonatomic) _Bool allowsPictureInPicturePlayback; // @synthesize allowsPictureInPicturePlayback=_allowsPictureInPicturePlayback;
@property(nonatomic, getter=isDisablingAutomaticTermination) _Bool disablingAutomaticTermination; // @synthesize disablingAutomaticTermination=_disablingAutomaticTermination;
@property(nonatomic, getter=isPreventingIdleDisplaySleep) _Bool preventingIdleDisplaySleep; // @synthesize preventingIdleDisplaySleep=_preventingIdleDisplaySleep;
@property(nonatomic, getter=isPreventingIdleSystemSleep) _Bool preventingIdleSystemSleep; // @synthesize preventingIdleSystemSleep=_preventingIdleSystemSleep;
@property(retain, nonatomic) AVCoordinatedPlaybackSuspension *scrubCoordinatorSuspension; // @synthesize scrubCoordinatorSuspension=_scrubCoordinatorSuspension;
@property(nonatomic) double rateBeforeScrubBegan; // @synthesize rateBeforeScrubBegan=_rateBeforeScrubBegan;
@property(nonatomic, getter=isCompatibleWithAirPlayVideo) _Bool compatibleWithAirPlayVideo; // @synthesize compatibleWithAirPlayVideo=_compatibleWithAirPlayVideo;
@property(retain, nonatomic) NSArray *availableMetadataFormats; // @synthesize availableMetadataFormats=_availableMetadataFormats;
@property(nonatomic) _Bool hasProtectedContent; // @synthesize hasProtectedContent=_hasProtectedContent;
@property(nonatomic, getter=isComposable) _Bool composable; // @synthesize composable=_composable;
@property(retain, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(nonatomic) double initialScrubbingTime; // @synthesize initialScrubbingTime=_initialScrubbingTime;
@property(nonatomic) double seekToTime; // @synthesize seekToTime=_seekToTime;
@property CDStruct_1b6d18a9 seekToTimeInternal; // @synthesize seekToTimeInternal=_seekToTimeInternal;
@property(nonatomic, getter=isSeeking) _Bool seeking; // @synthesize seeking=_seeking;
@property(getter=isSeekingInternal) _Bool seekingInternal; // @synthesize seekingInternal=_seekingInternal;
@property(retain, nonatomic) AVAssetTrack *currentVideoTrack; // @synthesize currentVideoTrack=_currentVideoTrack;
@property(retain, nonatomic) AVAssetTrack *currentAudioTrack; // @synthesize currentAudioTrack=_currentAudioTrack;
@property(retain, nonatomic) AVValueTiming *maxTiming; // @synthesize maxTiming=_maxTiming;
@property(retain, nonatomic) AVValueTiming *minTiming; // @synthesize minTiming=_minTiming;
@property(retain, nonatomic) AVValueTiming *timing; // @synthesize timing=_timing;
@property(retain, nonatomic) NSString *externalPlaybackAirPlayDeviceLocalizedName; // @synthesize externalPlaybackAirPlayDeviceLocalizedName=_externalPlaybackAirPlayDeviceLocalizedName;
@property(nonatomic, getter=isPictureInPictureSupported) _Bool pictureInPictureSupported; // @synthesize pictureInPictureSupported=_pictureInPictureSupported;
@property(retain, nonatomic) AVAsset *assetBeingPrepared; // @synthesize assetBeingPrepared=_assetBeingPrepared;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *assetInspectionQueue; // @synthesize assetInspectionQueue=_assetInspectionQueue;
@property(retain, nonatomic) AVAsset *currentAssetIfReady; // @synthesize currentAssetIfReady=_currentAssetIfReady;
@property(nonatomic) struct CGSize presentationSize; // @synthesize presentationSize=_presentationSize;
@property(readonly, nonatomic) AVObservationController *observationController; // @synthesize observationController=_observationController;
@property(nonatomic) double activeRate; // @synthesize activeRate=_activeRate;
@property(retain, nonatomic) AVPlayer *activePlayer; // @synthesize activePlayer=_activePlayer;
@property(nonatomic, getter=isScrubbing) _Bool scrubbing; // @synthesize scrubbing=_scrubbing;
@property(nonatomic, getter=isAtMinTime) _Bool atMinTime; // @synthesize atMinTime=_atMinTime;
@property(nonatomic, getter=isAtMaxTime) _Bool atMaxTime; // @synthesize atMaxTime=_atMaxTime;
@property(nonatomic, getter=isAtLiveEdge) _Bool atLiveEdge; // @synthesize atLiveEdge=_atLiveEdge;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
- (double)_adjustedSeekTimeFromTime:(double)arg1 toTime:(double)arg2;	// IMP=0x00000000000bf763
- (void)_updateActivePlayer;	// IMP=0x00000000000bf717
- (void)_setupInterstitialController;	// IMP=0x00000000000bf711
- (void)_prepareAssetForInspectionIfNeeded;	// IMP=0x00000000000bf1d3
- (id)scanningDelays;	// IMP=0x00000000000bf179
- (void)_updateRateForScrubbingAndSeeking;	// IMP=0x00000000000befef
- (void)_updateMetadata;	// IMP=0x00000000000bed50
- (id)_outputContext;	// IMP=0x00000000000bed00
- (id)_timecodeTrack;	// IMP=0x00000000000bebab
- (void)_stopSuspendingPlayback;	// IMP=0x00000000000beb59
- (void)_startSuspendingPlayback;	// IMP=0x00000000000beb04
- (void)_setSuspendedRate:(double)arg1;	// IMP=0x00000000000beae6
- (void)_setPlaybackSuspended:(_Bool)arg1;	// IMP=0x00000000000bead2
- (void)_endPlaybackSuspension_AVKitStrategy;	// IMP=0x00000000000bea4c
- (void)_endPlaybackSuspension_AVFoundationStrategy;	// IMP=0x00000000000bea0e
- (id)_createMetadataDictionaryForCurrentAsset;	// IMP=0x00000000000be5d7
- (void)_cancelPendingSeeksIfNeeded;	// IMP=0x00000000000be589
- (void)_beginPlaybackSuspension_AVKitStrategy;	// IMP=0x00000000000be503
- (void)_beginPlaybackSuspension_AVFoundationStrategy;	// IMP=0x00000000000be4c5
- (id)_photosensitiveDisplayTimes;	// IMP=0x00000000000be3f2
- (void)_updatePhotosensitivityRegions;	// IMP=0x00000000000be2e7
- (void)_cancelOutstandingAtLiveEdgeStateUpdates;	// IMP=0x00000000000be28a
- (void)_updateAtLiveEdgeStateIfNeeded;	// IMP=0x00000000000be148
- (void)_updateAtLiveEdgeStateAndScheduleTimerIfNeeded;	// IMP=0x00000000000be0e6
- (void)_setNeedsAtLiveEdgeStateUpdate;	// IMP=0x00000000000be002
- (void)_scheduleAtLiveEdgeStateUpdateWithTimeInterval:(double)arg1;	// IMP=0x00000000000bdefa
- (void)_scheduleAtLiveEdgeStateUpdateIfNeeded;	// IMP=0x00000000000bde03
- (void)setCanUseNetworkResourcesForLiveStreamingWhilePaused:(_Bool)arg1;	// IMP=0x00000000000bdcb5
- (_Bool)canUseNetworkResourcesForLiveStreamingWhilePaused;	// IMP=0x00000000000bdc47
- (void)stopUsingNetworkResourcesForLiveStreamingWhilePaused;	// IMP=0x00000000000bdb4a
- (void)startUsingNetworkResourcesForLiveStreamingWhilePaused;	// IMP=0x00000000000bda56
- (_Bool)isReducingResourcesForPictureInPicture;	// IMP=0x00000000000bda23
@property(retain, nonatomic) BSSimpleAssertion *reduceResourceUsageAssertion;
- (void)acquireResourceReductionAssertion;	// IMP=0x00000000000bd805
- (void)endReducingResourcesForPictureInPicturePlayerLayer:(id)arg1;	// IMP=0x00000000000bd714
- (void)beginReducingResourcesForPictureInPicturePlayerLayer:(id)arg1;	// IMP=0x00000000000bd466
- (void)togglePictureInPicture:(id)arg1;	// IMP=0x00000000000bd460
- (void)setPictureInPictureInterrupted:(_Bool)arg1;	// IMP=0x00000000000bd418
- (_Bool)isPictureInPictureInterrupted;	// IMP=0x00000000000bd40f
- (_Bool)isPictureInPicturePossible;	// IMP=0x00000000000bd1b7
- (void)_updateExternalPlaybackAirPlayDeviceLocalizedNameIfNeeded;	// IMP=0x00000000000bcdf5
- (long long)externalPlaybackType;	// IMP=0x00000000000bcd6a
- (_Bool)isExternalPlaybackActive;	// IMP=0x00000000000bcd26
@property(nonatomic, getter=isPlayingOnSecondScreen) _Bool playingOnSecondScreen;
- (_Bool)isPlayingOnExternalScreen;	// IMP=0x00000000000bcce1
- (void)setAllowsExternalPlayback:(_Bool)arg1;	// IMP=0x00000000000bcc95
- (_Bool)allowsExternalPlayback;	// IMP=0x00000000000bcc51
- (void)_updateMinMaxTimingIfNeeded;	// IMP=0x00000000000bcc10
- (void)updateMinMaxTiming;	// IMP=0x00000000000bc367
- (void)updateTiming;	// IMP=0x00000000000bc131
- (void)endScrubbing:(id)arg1;	// IMP=0x00000000000bc002
- (void)beginScrubbing:(id)arg1;	// IMP=0x00000000000bbf31
- (void)skipBackwardThirtySeconds:(id)arg1;	// IMP=0x00000000000bbe0d
- (void)seekOrStepByFrameCount:(long long)arg1;	// IMP=0x00000000000bb6d8
- (void)seekFrameBackward:(id)arg1;	// IMP=0x00000000000bb69a
- (_Bool)canSeekFrameBackward;	// IMP=0x00000000000bb661
- (void)seekFrameForward:(id)arg1;	// IMP=0x00000000000bb625
- (_Bool)canSeekFrameForward;	// IMP=0x00000000000bb5ec
- (void)seekToEnd:(id)arg1;	// IMP=0x00000000000bb5cc
- (_Bool)canSeekToEnd;	// IMP=0x00000000000bb5ba
- (void)seekToBeginning:(id)arg1;	// IMP=0x00000000000bb59a
- (_Bool)canSeekToBeginning;	// IMP=0x00000000000bb588
- (void)endScanningBackward:(id)arg1;	// IMP=0x00000000000bb40d
- (void)_updateScanningBackwardRate;	// IMP=0x00000000000bb220
- (void)beginScanningBackward:(id)arg1;	// IMP=0x00000000000bb06c
- (void)scanBackward:(id)arg1;	// IMP=0x00000000000baf94
- (_Bool)canScanBackward;	// IMP=0x00000000000baef9
- (void)endScanningForward:(id)arg1;	// IMP=0x00000000000bad7e
- (void)_updateScanningForwardRate;	// IMP=0x00000000000bab9f
- (void)beginScanningForward:(id)arg1;	// IMP=0x00000000000ba9eb
- (void)scanForward:(id)arg1;	// IMP=0x00000000000ba918
- (_Bool)canScanForward;	// IMP=0x00000000000ba87d
- (void)seekByTimeInterval:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;	// IMP=0x00000000000ba72f
- (void)seekByTimeInterval:(double)arg1;	// IMP=0x00000000000ba717
- (void)actuallySeekToTime;	// IMP=0x00000000000ba436
- (void)throttledSeekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3;	// IMP=0x00000000000ba06c
- (void)seekToCMTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3;	// IMP=0x00000000000ba05a
- (void)seekToTime:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;	// IMP=0x00000000000b9fb7
- (void)resumePlaybackCoordinatorIfSuspended;	// IMP=0x00000000000b9e23
- (void)suspendPlaybackCoordinatorWhileActivelySeekingIfNecessary;	// IMP=0x00000000000b9cd9
- (void)endScrubbing;	// IMP=0x00000000000b9c08
- (void)beginScrubbing;	// IMP=0x00000000000b9b0a
- (void)seekToTime:(double)arg1;	// IMP=0x00000000000b9af2
- (_Bool)canSeek;	// IMP=0x00000000000b991b
- (long long)timeControlStatus;	// IMP=0x00000000000b98d7
- (id)currentEnabledAssetTrackForMediaType:(id)arg1;	// IMP=0x00000000000b93af
- (void)_updateCurrentVideoTrackIfNeeded;	// IMP=0x00000000000b9336
- (void)_updateCurrentAudioTrackIfNeeded;	// IMP=0x00000000000b92bd
- (void)_updateCoordinatedPlaybackActive;	// IMP=0x00000000000b921e
- (_Bool)_assetContainsProResRaw:(id)arg1;	// IMP=0x00000000000b8f8e
- (_Bool)_assetIsMarkedNotSerializable:(id)arg1;	// IMP=0x00000000000b8d32
- (id)audioWaveform;	// IMP=0x00000000000b8d2a
- (_Bool)_assetIsRestrictedFromSaving:(id)arg1;	// IMP=0x00000000000b8c4c
- (_Bool)hasShareableContent;	// IMP=0x00000000000b8b3d
- (_Bool)hasTrimmableContent;	// IMP=0x00000000000b8a67
- (_Bool)hasSeekableLiveStreamingContent;	// IMP=0x00000000000b87b8
- (_Bool)hasLiveStreamingContent;	// IMP=0x00000000000b8651
- (_Bool)isStreaming;	// IMP=0x00000000000b85dc
- (_Bool)hasContentChapters;	// IMP=0x00000000000b85d4
- (_Bool)hasEnabledVideo;	// IMP=0x00000000000b8566
- (_Bool)hasVideo;	// IMP=0x00000000000b84f8
- (_Bool)hasEnabledAudio;	// IMP=0x00000000000b848a
- (id)loadedTimeRanges;	// IMP=0x00000000000b80e1
- (id)seekableTimeRanges;	// IMP=0x00000000000b8067
- (double)currentTimeWithinEndTimes;	// IMP=0x00000000000b8020
@property(readonly, nonatomic) NSDate *currentOrEstimatedDate;
@property(readonly, nonatomic) NSDate *currentDate;
- (double)contentDurationWithinEndTimes;	// IMP=0x00000000000b7e7b
- (void)_setMinTiming:(id)arg1 maxTiming:(id)arg2;	// IMP=0x00000000000b7e1a
- (void)setForwardPlaybackEndTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x00000000000b7d9c
- (CDStruct_1b6d18a9)forwardPlaybackEndTime;	// IMP=0x00000000000b7d0f
- (void)setMaxTime:(double)arg1;	// IMP=0x00000000000b7b5d
- (double)maxTime;	// IMP=0x00000000000b7a00
- (void)setReversePlaybackEndTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x00000000000b7982
- (CDStruct_1b6d18a9)reversePlaybackEndTime;	// IMP=0x00000000000b78f5
- (void)setMinTime:(double)arg1;	// IMP=0x00000000000b780e
- (double)minTime;	// IMP=0x00000000000b76e9
- (double)currentTime;	// IMP=0x00000000000b75d8
- (struct CGSize)contentDimensions;	// IMP=0x00000000000b759a
- (float)nominalFrameRate;	// IMP=0x00000000000b72ee
- (double)contentDuration;	// IMP=0x00000000000b7248
- (_Bool)hasContent;	// IMP=0x00000000000b71e5
- (void)setInspectionSuspended:(_Bool)arg1;	// IMP=0x00000000000b7193
- (_Bool)isInspectionSuspended;	// IMP=0x00000000000b718a
- (void)toggleMuted:(id)arg1;	// IMP=0x00000000000b707a
- (void)setMuted:(_Bool)arg1;	// IMP=0x00000000000b702e
- (_Bool)isMuted;	// IMP=0x00000000000b6fea
- (void)changeVolumeToMaximum:(id)arg1;	// IMP=0x00000000000b6fd0
- (void)changeVolumeToMinimum:(id)arg1;	// IMP=0x00000000000b6fbb
- (void)decreaseVolume:(id)arg1;	// IMP=0x00000000000b6f7d
- (void)increaseVolume:(id)arg1;	// IMP=0x00000000000b6f3f
- (void)setVolume:(double)arg1;	// IMP=0x00000000000b6e4d
- (double)volume;	// IMP=0x00000000000b6df9
- (void)updateAtMinMaxTime;	// IMP=0x00000000000b6d6e
- (void)setLooping:(_Bool)arg1;	// IMP=0x00000000000b6cab
- (_Bool)isLooping;	// IMP=0x00000000000b6ca2
@property(nonatomic) _Bool touchBarRequiresLinearPlayback;
- (void)togglePlayback:(id)arg1;	// IMP=0x00000000000b6b7f
- (_Bool)canTogglePlayback;	// IMP=0x00000000000b6b48
- (_Bool)canPause;	// IMP=0x00000000000b6b36
- (void)autoplay:(id)arg1;	// IMP=0x00000000000b6980
- (void)play:(id)arg1;	// IMP=0x00000000000b68d6
- (void)setPlaying:(_Bool)arg1;	// IMP=0x00000000000b66ae
- (_Bool)isPlaying;	// IMP=0x00000000000b668a
- (_Bool)canPlay;	// IMP=0x00000000000b6653
- (void)_handleSeekTimerEvent;	// IMP=0x00000000000b6464
@property(readonly, nonatomic) NSObject<OS_dispatch_source> *seekTimer;
- (_Bool)canPlayImmediately;	// IMP=0x00000000000b5f9a
- (void)_retryPlayImmediatelyIfNeeded;	// IMP=0x00000000000b5f01
- (void)setDefaultPlaybackRate:(double)arg1;	// IMP=0x00000000000b5e3c
- (double)defaultPlaybackRate;	// IMP=0x00000000000b5de8
- (void)setRate:(double)arg1;	// IMP=0x00000000000b5d87
- (void)_setRate_AVKitStrategy:(double)arg1;	// IMP=0x00000000000b5993
- (void)_setRate_AVFoundationStrategy:(double)arg1;	// IMP=0x00000000000b5945
- (void)_playAtRate:(double)arg1;	// IMP=0x00000000000b563c
- (double)rate;	// IMP=0x00000000000b55d5
- (void)_observeValueForKeyPath:(id)arg1 oldValue:(id)arg2 newValue:(id)arg3;	// IMP=0x00000000000b384d
- (_Bool)isCompletelySeekable;	// IMP=0x00000000000b3614
@property(readonly, nonatomic) NSError *error;
@property(readonly, nonatomic, getter=isReadyToPlay) _Bool readyToPlay;
@property(readonly, nonatomic) long long status;
- (id)_queuePlayer;	// IMP=0x00000000000b32e5
- (void)setObservationInfo:(void *)arg1;	// IMP=0x00000000000b32db
- (void *)observationInfo;	// IMP=0x00000000000b32d1
- (void)startKVO;	// IMP=0x00000000000b2ab6
- (void)dealloc;	// IMP=0x00000000000b28bb
- (void)startInspectionIfNeeded;	// IMP=0x00000000000b253d
- (id)initWithPlayer:(id)arg1;	// IMP=0x00000000000b2258
- (id)init;	// IMP=0x00000000000b2027
- (void)_nukeTVExtras;	// IMP=0x000000000003c0f3
- (void)_makeTVExtras;	// IMP=0x000000000003c08b
- (id)tvExtras;	// IMP=0x000000000003c07a
- (void)_updateNavigationMarkers;	// IMP=0x000000000003bf47
- (void)_updatePrimaryNavigationMarkersGroup;	// IMP=0x000000000003be35
- (void)_setPrimaryNavigationMarkersGroup:(id)arg1;	// IMP=0x000000000003bdc3
@property(readonly, nonatomic) AVNavigationMarkersGroup *primaryNavigationMarkersGroup;
- (_Bool)isFirstFilteredNavigationGroupChapters;	// IMP=0x000000000003bcc4
- (_Bool)isFirstUnfilteredNavigationGroupChapters;	// IMP=0x000000000003bc58
- (id)externalChapterNavigationMarkersGroup;	// IMP=0x000000000003bbab
@property(readonly, nonatomic) NSArray *externalNavigationMarkerGroups;
@property(readonly, nonatomic) AVNavigationMarkersGroup *embeddedChapterNavigationMarkersGroup;
- (void)_loadEmbeddedChapterNavigationMarkersGroupAsynchronously:(CDUnknownBlockType)arg1;	// IMP=0x000000000003b69d
- (void)endPlaybackSuspension;	// IMP=0x000000000003b64e
- (void)beginPlaybackSuspension;	// IMP=0x000000000003b613
- (_Bool)isCoordinatorSuspended;	// IMP=0x000000000003b5b0
- (void)_resumePlaybackCoordinator;	// IMP=0x000000000003b43d
- (void)_suspendPlaybackCoordinatorForReason:(id)arg1;	// IMP=0x000000000003b2a6
- (void)setLimitReadAheadIfAllowed:(_Bool)arg1;	// IMP=0x000000000003b1e7
- (void)togglePlaybackEvenWhenInBackground:(id)arg1;	// IMP=0x000000000003b05d
- (void)requestNavigateToDate:(id)arg1 fromDate:(id)arg2 reason:(long long)arg3 playWhenReady:(_Bool)arg4 permissionHandler:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x000000000003aec2
- (void)requestSeekToDate:(id)arg1 reason:(long long)arg2 playWhenReady:(_Bool)arg3;	// IMP=0x000000000003ac1f
- (void)requestNavigateToTime:(double)arg1 fromTime:(double)arg2 reason:(long long)arg3 playWhenReady:(_Bool)arg4 permissionHandler:(CDUnknownBlockType)arg5 seekCompletion:(CDUnknownBlockType)arg6;	// IMP=0x000000000003a424
- (void)requestSeekToTime:(double)arg1 reason:(long long)arg2 playWhenReady:(_Bool)arg3;	// IMP=0x000000000003a0db
- (void)requestPauseWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000003a0c1
- (void)requestPauseWithoutAffectingCoordinatedPlaybackWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000003a0aa
- (void)requestPauseForAllCoordinatedPlaybackParticipants:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000039ee2
- (void)requestPlayWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000039c56
- (void)requestSeekToDate:(id)arg1 seekReason:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000399e5
- (void)requestSeekToTime:(double)arg1 seekReason:(long long)arg2 permissionHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000039740
- (CDStruct_1b6d18a9)timeToSeekAfterUserNavigatedFromTime:(double)arg1 toTime:(double)arg2;	// IMP=0x00000000000395a7
- (void)seekToDate:(id)arg1 seekReason:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000393e6
- (void)gotoEndOfSeekableRanges:(id)arg1;	// IMP=0x0000000000039292
- (void)seekToTime:(double)arg1 seekReason:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000003905f
- (void)_didRequestSeek;	// IMP=0x0000000000038fee
- (void)_willRequestSeek;	// IMP=0x0000000000038f7d
- (void)_didEndSeek;	// IMP=0x0000000000038f0c
- (void)_willBeginSeek;	// IMP=0x0000000000038e9b
- (_Bool)playerItem:(id)arg1 shouldSeekToTime:(CDStruct_1b6d18a9 *)arg2 toleranceBefore:(CDStruct_1b6d18a9 *)arg3 toleranceAfter:(CDStruct_1b6d18a9 *)arg4;	// IMP=0x0000000000038dbe
@property(readonly, nonatomic) _Bool isSeekingTV;
@property(readonly, nonatomic) long long currentSeekReason;
- (double)displayTimeFromTime:(double)arg1;	// IMP=0x0000000000038c97
- (double)timeFromDisplayTime:(double)arg1;	// IMP=0x0000000000038c3d
@property(readonly, nonatomic) _Bool shouldContinuePlaybackInBackground;
@property(readonly, nonatomic) long long avkitMediaType;
- (void)loadAspectRatio:(CDUnknownBlockType)arg1;	// IMP=0x000000000003896a
- (double)bounceBackReturningDisplayTime;	// IMP=0x00000000000388e9
@property(readonly, nonatomic) _Bool shouldBounceBackAfterScanForwardPastEndTime;
- (void)updateStartAndEndDates;	// IMP=0x0000000000037f87
@property(readonly, nonatomic) double startTime;
@property(readonly, nonatomic) NSDate *exactEndDate;
@property(readonly, nonatomic) NSDate *exactStartDate;
@property(readonly, nonatomic) _Bool canNavigateToBeginning;
@property(readonly, nonatomic) _Bool hasStartAndEndDates;
@property(retain, nonatomic) NSDate *programEndDate;
@property(retain, nonatomic) NSDate *programStartDate;
- (void)setEffectiveRateNonZero:(_Bool)arg1;	// IMP=0x0000000000037a5d
@property(readonly, nonatomic, getter=isEffectiveRateNonZero) _Bool effectiveRateNonZero;
@property(readonly, nonatomic) double currentDisplayTime;
- (double)playbackEndTime;	// IMP=0x000000000003799b
@property(readonly, nonatomic) double displayedDuration;
@property(readonly, nonatomic) double longestSeekableDurationSeenForCurrentItem;
@property(readonly, nonatomic, getter=isLiveStreamEventModePossible) _Bool liveStreamEventModePossible;
@property(readonly, nonatomic) _Bool isContentDurationIndefinite;
@property(readonly, nonatomic) double contentDurationCached;
@property(readonly, nonatomic) AVTimeRange *displayTimeRangeForNavigation;
@property(readonly, nonatomic) AVTimeRange *timeRangeForNavigation;
@property(readonly, nonatomic) AVTimeRange *timeRangeForNonLivePlayback;
@property(readonly, nonatomic) AVTimeRange *timeRangeSeekable;
@property(readonly, nonatomic) AVPlayerItem *currentItem;
@property(readonly, nonatomic) _Bool hasMoreEnqueuedContent;
- (void)setActivePlaying:(_Bool)arg1;	// IMP=0x0000000000036e06
- (_Bool)isActivePlaying;	// IMP=0x0000000000036dc1
- (float)_activeRate;	// IMP=0x0000000000036bf5
- (_Bool)isPrimaryPlayerWaitingForInterstitial;	// IMP=0x0000000000036ad2
@property(readonly, nonatomic) AVQueuePlayer *queuePlayer;
- (_Bool)linearPlaybackRequiredByInterstitial:(id)arg1;	// IMP=0x00000000000369ca
@property(readonly, nonatomic) AVInterstitialController *interstitialController;
@property(retain, nonatomic) AVDelegateManager *delegateManager;
- (id)kvoPlayerItem;	// IMP=0x000000000003683a
- (id)kvoPlayer;	// IMP=0x00000000000367ea
- (void)_durationDidChange;	// IMP=0x0000000000036696
- (void)updateTimeRanges;	// IMP=0x0000000000036376
- (void)invalidateTV;	// IMP=0x000000000003616a
- (id)initWithTVPlayer:(id)arg1;	// IMP=0x0000000000035d6a
- (void)setClientSpecifiedDate:(id)arg1;	// IMP=0x0000000000035cf8
- (id)clientSpecifiedDate;	// IMP=0x0000000000035ca8
- (void)updateAudioFormats;	// IMP=0x000000000006ce20
- (void)updateVideoResolutionAndRange;	// IMP=0x000000000006ccaf
- (void)_updateVideoResolutionAndRange;	// IMP=0x000000000006c6e3
- (id)_audioAssetTracks;	// IMP=0x000000000006c451
- (id)_videoAssetTracks;	// IMP=0x000000000006c1bf
@property(readonly, nonatomic) struct CGSize maximumVideoResolution;
- (id)preferredDisplayCriteria;	// IMP=0x00000000000c4e24
@property(readonly, nonatomic) _Bool usesExternalPlaybackWhileExternalScreenIsActive;
@property(nonatomic) _Bool handlesAudioSessionInterruptions;
- (_Bool)_mediaSelectionCriteriaCanBeAppliedAutomaticallyToLegibleMediaSelectionGroup;	// IMP=0x00000000001367ae
- (id)_selectedMediaOptionWithMediaCharacteristic:(id)arg1;	// IMP=0x00000000001366a0
- (void)_setMediaOption:(id)arg1 mediaCharacteristic:(id)arg2;	// IMP=0x0000000000136365
- (void)_enableAutoMediaSelection:(id)arg1;	// IMP=0x000000000013622c
- (void)_disableLegibleMediaSelectionOptions:(id)arg1;	// IMP=0x0000000000136176
- (void)_performAutomaticMediaSelectionForUserCaptionDisplayType:(long long)arg1;	// IMP=0x00000000001360ab
- (void)_ensureUserCaptionDisplayType:(long long)arg1;	// IMP=0x0000000000135fd9
- (id)legibleOptions;	// IMP=0x000000000013541f
- (id)audioOptions;	// IMP=0x0000000000134f75
- (void)reloadLegibleOptions;	// IMP=0x0000000000134ee3
- (void)reloadAudioOptions;	// IMP=0x0000000000134e51
- (void)reloadOptionsAssumingMediaOptionsMayHaveChanged:(_Bool)arg1;	// IMP=0x0000000000134cf2
- (void)reloadOptionsAndCurrentSelections;	// IMP=0x0000000000134cdb
- (void)reloadOptions;	// IMP=0x0000000000134cc7
- (void)selectedMediaOptionMayHaveChanged:(_Bool)arg1;	// IMP=0x0000000000134650
- (void)selectedMediaOptionMayHaveChanged;	// IMP=0x000000000013463c
- (id)_optionsForGroup:(id)arg1;	// IMP=0x0000000000134627
- (id)mediaSelectionGroupForMediaCharacteristic:(id)arg1;	// IMP=0x00000000001345a4
- (void)setCurrentLegibleMediaSelectionOption:(id)arg1;	// IMP=0x000000000013452f
- (id)keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption;	// IMP=0x0000000000134503
- (id)currentLegibleMediaSelectionOption;	// IMP=0x00000000001341f9
- (void)setLegibleMediaSelectionOptions:(id)arg1;	// IMP=0x0000000000134124
- (id)legibleMediaSelectionOptions;	// IMP=0x0000000000134116
- (_Bool)hasLegibleMediaSelectionOptions;	// IMP=0x00000000001340ce
- (void)setCurrentAudioMediaSelectionOption:(id)arg1;	// IMP=0x00000000001340b2
- (id)keyPathsForValuesAffectingCurrentAudioMediaSelectionOption;	// IMP=0x000000000013408e
@property(retain, nonatomic) AVMediaSelectionOption *currentVideoMediaSelectionOption; // @dynamic currentVideoMediaSelectionOption;
- (id)currentAudioMediaSelectionOption;	// IMP=0x0000000000133f78
- (void)setAudioMediaSelectionOptions:(id)arg1;	// IMP=0x0000000000133ea3
@property(readonly, nonatomic) NSArray *visualMediaSelectionOptions; // @dynamic visualMediaSelectionOptions;
- (id)audioMediaSelectionOptions;	// IMP=0x0000000000133e87
- (void)setLegibleMediaSelectionOptions:(id)arg1 audioMediaSelectionOptions:(id)arg2 assumeMediaOptionMayHaveChanged:(_Bool)arg3;	// IMP=0x0000000000133db0
- (_Bool)hasAudioMediaSelectionOptions;	// IMP=0x0000000000133d67
- (_Bool)hasMediaSelectionOptions;	// IMP=0x0000000000133d2e

@end

