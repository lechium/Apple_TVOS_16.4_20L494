//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "MTLRenderPipelineDescriptor.h"

__attribute__((visibility("hidden")))
@interface MTLRenderPipelineDescriptorInternal : MTLRenderPipelineDescriptor
{
    struct MTLRenderPipelineDescriptorPrivate _private;	// 48 = 0x30
    struct FlatBufferBuilder _builder;	// 648 = 0x288
}

- (id).cxx_construct;	// IMP=0x00000000000f57bd
- (void).cxx_destruct;	// IMP=0x00000000000f57ac
- (const void *)getPipelineScript;	// IMP=0x00000000000f5773
- (id)newSerializedMeshDataWithFlags:(unsigned long long)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00000000000f573d
- (id)newSerializedObjectDataWithFlags:(unsigned long long)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00000000000f5707
- (id)newSerializedVertexDataWithFlags:(unsigned long long)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00000000000f507e
- (id)newSerializedVertexDataWithFlags:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x00000000000f5067
- (id)serializeFragmentData;	// IMP=0x00000000000f504f
- (id)newSerializedFragmentDataWithFlags:(unsigned long long)arg1 options:(unsigned long long)arg2;	// IMP=0x00000000000f4bb0
- (void)validateWithDevice:(id)arg1;	// IMP=0x00000000000f46fa
- (_Bool)validateWithDevice:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000f434d
- (void)setStencilAttachmentPixelFormat:(unsigned long long)arg1;	// IMP=0x00000000000f37d7
- (unsigned long long)stencilAttachmentPixelFormat;	// IMP=0x00000000000f37c5
- (void)setDepthAttachmentPixelFormat:(unsigned long long)arg1;	// IMP=0x00000000000f37b3
- (unsigned long long)depthAttachmentPixelFormat;	// IMP=0x00000000000f37a1
- (id)colorAttachments;	// IMP=0x00000000000f3790
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000000f2f9b
- (unsigned long long)hash;	// IMP=0x00000000000f29b0
- (const struct MTLRenderPipelineDescriptorPrivate *)_descriptorPrivate;	// IMP=0x00000000000f29a0
- (id)gpuCompilerSPIOptions;	// IMP=0x00000000000f298b
- (void)setGpuCompilerSPIOptions:(id)arg1;	// IMP=0x00000000000f293e
- (id)driverCompilerOptions;	// IMP=0x00000000000f2929
- (void)setDriverCompilerOptions:(id)arg1;	// IMP=0x00000000000f28dc
- (id)vertexDescriptor;	// IMP=0x00000000000f28a5
- (void)setVertexDescriptor:(id)arg1;	// IMP=0x00000000000f2817
- (void)attachVertexDescriptor:(id)arg1;	// IMP=0x00000000000f2790
- (id)pipelineLibrary;	// IMP=0x00000000000f277b
- (void)setPipelineLibrary:(id)arg1;	// IMP=0x00000000000f2735
- (void)setMaxPipelineChildren:(CDStruct_da2e99ad)arg1;	// IMP=0x00000000000f2710
- (CDStruct_da2e99ad)maxPipelineChildren;	// IMP=0x00000000000f26e9
- (void)setPipelineMemoryLength:(unsigned long long)arg1;	// IMP=0x00000000000f26d4
- (unsigned long long)pipelineMemoryLength;	// IMP=0x00000000000f26bf
- (void)setMeshThreadgroupSizeIsMultipleOfThreadExecutionWidth:(_Bool)arg1;	// IMP=0x00000000000f2691
- (_Bool)meshThreadgroupSizeIsMultipleOfThreadExecutionWidth;	// IMP=0x00000000000f2678
- (void)setObjectThreadgroupSizeIsMultipleOfThreadExecutionWidth:(_Bool)arg1;	// IMP=0x00000000000f264a
- (_Bool)objectThreadgroupSizeIsMultipleOfThreadExecutionWidth;	// IMP=0x00000000000f2631
- (void)setMaxTotalThreadsPerMeshThreadgroup:(unsigned long long)arg1;	// IMP=0x00000000000f261c
- (unsigned long long)maxTotalThreadsPerMeshThreadgroup;	// IMP=0x00000000000f2607
- (void)setMaxTotalThreadsPerObjectThreadgroup:(unsigned long long)arg1;	// IMP=0x00000000000f25f2
- (unsigned long long)maxTotalThreadsPerObjectThreadgroup;	// IMP=0x00000000000f25dd
- (void)setMeshThreadsPerThreadgroup:(CDStruct_da2e99ad)arg1;	// IMP=0x00000000000f25b8
- (CDStruct_da2e99ad)meshThreadsPerThreadgroup;	// IMP=0x00000000000f2591
- (void)setObjectThreadsPerThreadgroup:(CDStruct_da2e99ad)arg1;	// IMP=0x00000000000f256c
- (CDStruct_da2e99ad)objectThreadsPerThreadgroup;	// IMP=0x00000000000f2545
- (id)meshBuffers;	// IMP=0x00000000000f2530
- (id)objectBuffers;	// IMP=0x00000000000f251b
- (id)meshFunction;	// IMP=0x00000000000f2506
- (void)setMeshFunction:(id)arg1;	// IMP=0x00000000000f2439
- (id)objectFunction;	// IMP=0x00000000000f2424
- (void)setObjectFunction:(id)arg1;	// IMP=0x00000000000f2357
- (id)fragmentFunction;	// IMP=0x00000000000f2342
- (void)setFragmentFunction:(id)arg1;	// IMP=0x00000000000f2275
- (id)vertexFunction;	// IMP=0x00000000000f2260
- (void)setVertexFunction:(id)arg1;	// IMP=0x00000000000f2193
- (void)setLabel:(id)arg1;	// IMP=0x00000000000f20ee
- (id)label;	// IMP=0x00000000000f20d9
- (void)reset;	// IMP=0x00000000000f1d22
- (void)setProfileControl:(id)arg1;	// IMP=0x00000000000f1cd5
- (id)profileControl;	// IMP=0x00000000000f1cc0
- (void)setExplicitVisibilityGroupID:(unsigned int)arg1;	// IMP=0x00000000000f1cac
- (unsigned int)explicitVisibilityGroupID;	// IMP=0x00000000000f1c98
- (id)fragmentBuffers;	// IMP=0x00000000000f1c83
- (id)vertexBuffers;	// IMP=0x00000000000f1c6e
- (void)setMaxObjectCallStackDepth:(unsigned long long)arg1;	// IMP=0x00000000000f1c59
- (unsigned long long)maxObjectCallStackDepth;	// IMP=0x00000000000f1c44
- (void)setMaxMeshCallStackDepth:(unsigned long long)arg1;	// IMP=0x00000000000f1c2f
- (unsigned long long)maxMeshCallStackDepth;	// IMP=0x00000000000f1c1a
- (void)setSupportAddingObjectBinaryFunctions:(_Bool)arg1;	// IMP=0x00000000000f1c06
- (_Bool)supportAddingObjectBinaryFunctions;	// IMP=0x00000000000f1bf2
- (void)setSupportAddingMeshBinaryFunctions:(_Bool)arg1;	// IMP=0x00000000000f1bde
- (_Bool)supportAddingMeshBinaryFunctions;	// IMP=0x00000000000f1bca
- (void)setMaxFragmentCallStackDepth:(unsigned long long)arg1;	// IMP=0x00000000000f1bb5
- (unsigned long long)maxFragmentCallStackDepth;	// IMP=0x00000000000f1ba0
- (void)setMaxVertexCallStackDepth:(unsigned long long)arg1;	// IMP=0x00000000000f1b8b
- (unsigned long long)maxVertexCallStackDepth;	// IMP=0x00000000000f1b76
- (void)setSupportAddingFragmentBinaryFunctions:(_Bool)arg1;	// IMP=0x00000000000f1b62
- (_Bool)supportAddingFragmentBinaryFunctions;	// IMP=0x00000000000f1b4e
- (void)setSupportAddingVertexBinaryFunctions:(_Bool)arg1;	// IMP=0x00000000000f1b3a
- (_Bool)supportAddingVertexBinaryFunctions;	// IMP=0x00000000000f1b26
- (void)setInsertMeshLibraries:(id)arg1;	// IMP=0x00000000000f1b08
- (id)insertMeshLibraries;	// IMP=0x00000000000f1af3
- (void)setInsertObjectLibraries:(id)arg1;	// IMP=0x00000000000f1ad5
- (id)insertObjectLibraries;	// IMP=0x00000000000f1ac0
- (void)setInsertFragmentLibraries:(id)arg1;	// IMP=0x00000000000f1aa2
- (id)insertFragmentLibraries;	// IMP=0x00000000000f1a8d
- (void)setInsertVertexLibraries:(id)arg1;	// IMP=0x00000000000f1a6f
- (id)insertVertexLibraries;	// IMP=0x00000000000f1a5a
- (void)setMeshPreloadedLibraries:(id)arg1;	// IMP=0x00000000000f1a0d
- (id)meshPreloadedLibraries;	// IMP=0x00000000000f19f8
- (void)setObjectPreloadedLibraries:(id)arg1;	// IMP=0x00000000000f19ab
- (id)objectPreloadedLibraries;	// IMP=0x00000000000f1996
- (void)setFragmentPreloadedLibraries:(id)arg1;	// IMP=0x00000000000f1949
- (id)fragmentPreloadedLibraries;	// IMP=0x00000000000f1934
- (void)setVertexPreloadedLibraries:(id)arg1;	// IMP=0x00000000000f18e7
- (id)vertexPreloadedLibraries;	// IMP=0x00000000000f18d2
- (void)setMeshLinkedFunctions:(id)arg1;	// IMP=0x00000000000f183a
- (id)meshLinkedFunctions;	// IMP=0x00000000000f17df
- (void)setObjectLinkedFunctions:(id)arg1;	// IMP=0x00000000000f1747
- (id)objectLinkedFunctions;	// IMP=0x00000000000f16ec
- (void)setFragmentLinkedFunctions:(id)arg1;	// IMP=0x00000000000f1654
- (id)fragmentLinkedFunctions;	// IMP=0x00000000000f15f9
- (void)setVertexLinkedFunctions:(id)arg1;	// IMP=0x00000000000f1561
- (id)vertexLinkedFunctions;	// IMP=0x00000000000f1506
- (id)binaryArchives;	// IMP=0x00000000000f14f1
- (void)setBinaryArchives:(id)arg1;	// IMP=0x00000000000f14a4
- (void)setInputPrimitiveTopology:(unsigned long long)arg1;	// IMP=0x00000000000f1449
- (unsigned long long)inputPrimitiveTopology;	// IMP=0x00000000000f142f
- (void)setDepthStencilWriteDisabled:(_Bool)arg1;	// IMP=0x00000000000f1405
- (_Bool)isDepthStencilWriteDisabled;	// IMP=0x00000000000f13ec
- (void)setSampleCoverageInvert:(_Bool)arg1;	// IMP=0x00000000000f13bf
- (_Bool)sampleCoverageInvert;	// IMP=0x00000000000f13a9
- (void)setNeedsCustomBorderColorSamplers:(_Bool)arg1;	// IMP=0x00000000000f1395
- (_Bool)needsCustomBorderColorSamplers;	// IMP=0x00000000000f1381
- (void)setOpenGLModeEnabled:(_Bool)arg1;	// IMP=0x00000000000f1354
- (_Bool)openGLModeEnabled;	// IMP=0x00000000000f133d
- (void)setPluginData:(id)arg1;	// IMP=0x00000000000f12f7
- (id)pluginData;	// IMP=0x00000000000f12e2
- (void)setFragmentDepthCompareClampMask:(unsigned int)arg1;	// IMP=0x00000000000f12ce
- (unsigned int)fragmentDepthCompareClampMask;	// IMP=0x00000000000f12ba
- (void)setVertexDepthCompareClampMask:(unsigned int)arg1;	// IMP=0x00000000000f12a6
- (unsigned int)vertexDepthCompareClampMask;	// IMP=0x00000000000f1292
- (void)setTwoSideEnabled:(_Bool)arg1;	// IMP=0x00000000000f1265
- (_Bool)isTwoSideEnabled;	// IMP=0x00000000000f124c
- (void)setPointSizeOutputVS:(_Bool)arg1;	// IMP=0x00000000000f121f
- (_Bool)isPointSizeOutputVS;	// IMP=0x00000000000f1206
- (void)setPointCoordLowerLeft:(_Bool)arg1;	// IMP=0x00000000000f11d9
- (_Bool)isPointCoordLowerLeft;	// IMP=0x00000000000f11c0
- (void)setPointSmoothEnabled:(_Bool)arg1;	// IMP=0x00000000000f1193
- (_Bool)isPointSmoothEnabled;	// IMP=0x00000000000f117a
- (unsigned char)clipDistanceEnableMask;	// IMP=0x00000000000f1160
- (void)setClipDistanceEnableMask:(unsigned char)arg1;	// IMP=0x00000000000f1133
- (void)setAlphaTestFunction:(unsigned long long)arg1;	// IMP=0x00000000000f1105
- (unsigned long long)alphaTestFunction;	// IMP=0x00000000000f10eb
- (void)setAlphaTestEnabled:(_Bool)arg1;	// IMP=0x00000000000f10be
- (_Bool)isAlphaTestEnabled;	// IMP=0x00000000000f10a5
- (void)setLogicOperation:(unsigned long long)arg1;	// IMP=0x00000000000f1077
- (unsigned long long)logicOperation;	// IMP=0x00000000000f105d
- (void)setLogicOperationEnabled:(_Bool)arg1;	// IMP=0x00000000000f102d
- (_Bool)isLogicOperationEnabled;	// IMP=0x00000000000f1016
- (void)setColorSampleCount:(unsigned long long)arg1;	// IMP=0x00000000000f1001
- (unsigned long long)colorSampleCount;	// IMP=0x00000000000f0fec
- (void)setMaxVertexAmplificationCount:(unsigned long long)arg1;	// IMP=0x00000000000f0fd8
- (unsigned long long)maxVertexAmplificationCount;	// IMP=0x00000000000f0fc4
- (void)setVertexAmplificationMode:(unsigned long long)arg1;	// IMP=0x00000000000f0f63
- (unsigned long long)vertexAmplificationMode;	// IMP=0x00000000000f0f49
- (void)setRasterizationEnabled:(_Bool)arg1;	// IMP=0x00000000000f0f22
- (_Bool)isRasterizationEnabled;	// IMP=0x00000000000f0f09
- (void)setAlphaToOneEnabled:(_Bool)arg1;	// IMP=0x00000000000f0ee2
- (_Bool)isAlphaToOneEnabled;	// IMP=0x00000000000f0eca
- (void)setAlphaToCoverageEnabled:(_Bool)arg1;	// IMP=0x00000000000f0ea4
- (_Bool)isAlphaToCoverageEnabled;	// IMP=0x00000000000f0e8e
- (void)setSampleCoverage:(float)arg1;	// IMP=0x00000000000f0e78
- (float)sampleCoverage;	// IMP=0x00000000000f0e62
- (void)setSampleMask:(unsigned long long)arg1;	// IMP=0x00000000000f0e4d
- (unsigned long long)sampleMask;	// IMP=0x00000000000f0e38
- (void)setRasterSampleCount:(unsigned long long)arg1;	// IMP=0x00000000000f0e23
- (unsigned long long)rasterSampleCount;	// IMP=0x00000000000f0e0e
- (void)setSampleCount:(unsigned long long)arg1;	// IMP=0x00000000000f0dfc
- (unsigned long long)sampleCount;	// IMP=0x00000000000f0dea
@property(nonatomic) unsigned long long postVertexDumpBufferIndex;
- (void)setResourceIndex:(unsigned long long)arg1;	// IMP=0x00000000000f0dab
- (unsigned long long)resourceIndex;	// IMP=0x00000000000f0d96
- (void)setForceResourceIndex:(_Bool)arg1;	// IMP=0x00000000000f0d68
- (_Bool)forceResourceIndex;	// IMP=0x00000000000f0d52
- (long long)textureWriteRoundingMode;	// IMP=0x00000000000f0d36
- (void)setTextureWriteRoundingMode:(long long)arg1;	// IMP=0x00000000000f0d21
- (void)setSupportIndirectCommandBuffers:(_Bool)arg1;	// IMP=0x00000000000f0d0d
- (_Bool)supportIndirectCommandBuffers;	// IMP=0x00000000000f0cf9
- (void)setTessellationOutputWindingOrder:(unsigned long long)arg1;	// IMP=0x00000000000f0cb6
- (unsigned long long)tessellationOutputWindingOrder;	// IMP=0x00000000000f0ca1
- (void)setTessellationFactorStepFunction:(unsigned long long)arg1;	// IMP=0x00000000000f0c5e
- (unsigned long long)tessellationFactorStepFunction;	// IMP=0x00000000000f0c49
- (void)setTessellationControlPointIndexType:(unsigned long long)arg1;	// IMP=0x00000000000f0c09
- (unsigned long long)tessellationControlPointIndexType;	// IMP=0x00000000000f0bf7
- (void)setTessellationFactorFormat:(unsigned long long)arg1;	// IMP=0x00000000000f0bb7
- (unsigned long long)tessellationFactorFormat;	// IMP=0x00000000000f0ba5
- (void)setTessellationFactorScaleEnabled:(_Bool)arg1;	// IMP=0x00000000000f0b94
- (_Bool)isTessellationFactorScaleEnabled;	// IMP=0x00000000000f0b83
- (void)setMaxTessellationFactor:(unsigned long long)arg1;	// IMP=0x00000000000f0b3d
- (unsigned long long)maxTessellationFactor;	// IMP=0x00000000000f0b2b
- (void)setTessellationPartitionMode:(unsigned long long)arg1;	// IMP=0x00000000000f0aeb
- (unsigned long long)tessellationPartitionMode;	// IMP=0x00000000000f0ad9
@property(nonatomic) _Bool forceSoftwareVertexFetch;
- (id)description;	// IMP=0x00000000000f0a7f
- (id)formattedDescription:(unsigned long long)arg1;	// IMP=0x00000000000efca1
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000000ef6a0
- (void)dealloc;	// IMP=0x00000000000ef54a
- (id)init;	// IMP=0x00000000000ef35c

@end

