//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@interface NSObject (Foundation)
+ (id)__old_unswizzled_keyPathsForValuesAffectingValueForKey:(id)arg1;	// IMP=0x0020000000047460
+ (_Bool)__old_unswizzled_automaticallyNotifiesObserversForKey:(id)arg1;	// IMP=0x0020000000047410
+ (const char *)_localClassNameForClass;	// IMP=0x002000000040998d
+ (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;	// IMP=0x002000000040d1d6
+ (struct objc_method_description *)instanceMethodDescriptionForSelector:(SEL)arg1;	// IMP=0x002000000040cfd0
+ (id)_createMutableArrayValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x002000000044ea1b
+ (_Bool)accessInstanceVariablesDirectly;	// IMP=0x002000000044ea13
+ (id)_createValuePrimitiveSetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x0020000000454ce2
+ (id)_createValuePrimitiveGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x0020000000454a09
+ (id)_createOtherValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004549c7
+ (id)_createOtherValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x0020000000454985
+ (id)_createMutableSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x002000000045431e
+ (id)_createMutableOrderedSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x0020000000453cad
+ (id)_createValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004539b8
+ (id)_createValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004532a2
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;	// IMP=0x002000000046573e
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;	// IMP=0x00200000004654ee
+ (id)_keysForValuesAffectingValueForKey:(id)arg1;	// IMP=0x002000000046533c
+ (void)setKeys:(id)arg1 triggerChangeNotificationsForDependentKey:(id)arg2;	// IMP=0x0020000000465a2a
+ (_Bool)_shouldAddObservationForwardersForKey:(id)arg1;	// IMP=0x0020000000465b15
+ (id)classFallbacksForKeyedArchiver;	// IMP=0x002000000047a76a
+ (Class)classForKeyedUnarchiver;	// IMP=0x002000000047a777
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1;	// IMP=0x00200000004d635d
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;	// IMP=0x00200000004d5f86
+ (id)replacementObjectForPortCoder:(id)arg1;	// IMP=0x0020000000579753
- (id)__NS_swiftOverlay_keyPathsForValuesAffectingValueForKey:(id)arg1 foundationImplementation:(CDUnknownBlockType)arg2;	// IMP=0x0010000000047630
- (_Bool)__NS_swiftOverlay_automaticallyNotifiesObserversForKey:(id)arg1 foundationImplementation:(CDUnknownBlockType)arg2;	// IMP=0x00100000000474b0
- (id)newTaggedNSStringWithASCIIBytes_:(const char *)arg1 length_:(long long)arg2;	// IMP=0x0010000000177930
- (id)replacementObjectForArchiver:(id)arg1;	// IMP=0x00100000003c4254
- (Class)classForArchiver;	// IMP=0x00100000003c4242
- (const char *)_localClassNameForClass;	// IMP=0x001000000040997b
- (_Bool)_conformsToProtocolNamed:(const char *)arg1;	// IMP=0x001000000040d31a
- (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;	// IMP=0x001000000040d29a
- (void)setObservation:(id)arg1 forObservingKeyPath:(id)arg2;	// IMP=0x001000000040ecdf
- (void)removeObservation:(id)arg1 forObservableKeyPath:(id)arg2;	// IMP=0x001000000040ecc2
- (id)addObserver:(id)arg1 forObservableKeyPath:(id)arg2;	// IMP=0x001000000040ec51
- (void)_receiveBox:(id)arg1;	// IMP=0x001000000042dc9b
- (void)removeObservation:(id)arg1;	// IMP=0x001000000042dc5d
- (id)addObserver:(id)arg1;	// IMP=0x001000000042dbd7
- (void)receiveObservedValue:(id)arg1;	// IMP=0x001000000042dad4
- (void)receiveObservedError:(id)arg1;	// IMP=0x001000000042d9d1
- (_Bool)_isToManyChangeInformation;	// IMP=0x001000000042d9c9
- (void)_destroyObserverList;	// IMP=0x001000000042d9b5
- (void *)_observerStorageOfSize:(unsigned long long)arg1;	// IMP=0x001000000042d9ad
- (id *)_observerStorage;	// IMP=0x001000000042d9a5
- (id)addObservationTransformer:(CDUnknownBlockType)arg1;	// IMP=0x001000000042d902
- (id)addObserverBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000042d7be
- (id)addChainedObservers:(id)arg1;	// IMP=0x001000000042d674
- (void)finishObserving;	// IMP=0x001000000042d63b
- (_Bool)_overrideUseFastBlockObservers;	// IMP=0x001000000042d633
- (void)setValuesForKeysWithDictionary:(id)arg1;	// IMP=0x00100000004507a6
- (id)dictionaryWithValuesForKeys:(id)arg1;	// IMP=0x00100000004506b0
- (void)setNilValueForKey:(id)arg1;	// IMP=0x0010000000450644
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;	// IMP=0x0010000000450553
- (id)valueForUndefinedKey:(id)arg1;	// IMP=0x0010000000450461
- (id)mutableSetValueForKeyPath:(id)arg1;	// IMP=0x0010000000450314
- (id)mutableOrderedSetValueForKeyPath:(id)arg1;	// IMP=0x00100000004501c7
- (id)mutableArrayValueForKeyPath:(id)arg1;	// IMP=0x001000000045007a
- (_Bool)validateValue:(inout id *)arg1 forKeyPath:(id)arg2 error:(out id *)arg3;	// IMP=0x001000000044ff0c
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;	// IMP=0x001000000044fdb5
- (id)valueForKeyPath:(id)arg1;	// IMP=0x001000000044fc68
- (id)mutableSetValueForKey:(id)arg1;	// IMP=0x001000000044fb09
- (id)mutableOrderedSetValueForKey:(id)arg1;	// IMP=0x001000000044f9aa
- (id)mutableArrayValueForKey:(id)arg1;	// IMP=0x001000000044f84b
- (_Bool)validateValue:(inout id *)arg1 forKey:(id)arg2 error:(out id *)arg3;	// IMP=0x001000000044f6e2
- (void)setValue:(id)arg1 forKey:(id)arg2;	// IMP=0x001000000044f479
- (id)valueForKey:(id)arg1;	// IMP=0x001000000044f1ed
- (_Bool)_isKVOA;	// IMP=0x001000000045fb29
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x00100000004631bf
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;	// IMP=0x0010000000463e61
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void *)arg3;	// IMP=0x0010000000463d00
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;	// IMP=0x0010000000463b07
- (void)_removeObserver:(id)arg1 forProperty:(id)arg2;	// IMP=0x00100000004637d1
- (void)_addObserver:(id)arg1 forProperty:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;	// IMP=0x00100000004632b2
- (void)didChangeValueForKey:(id)arg1 withSetMutation:(unsigned long long)arg2 usingObjects:(id)arg3;	// IMP=0x00100000004652c8
- (void)willChangeValueForKey:(id)arg1 withSetMutation:(unsigned long long)arg2 usingObjects:(id)arg3;	// IMP=0x0010000000464f03
- (void)didChange:(unsigned long long)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;	// IMP=0x0010000000464a7f
- (void)willChange:(unsigned long long)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;	// IMP=0x00100000004647d1
- (void)didChangeValueForKey:(id)arg1;	// IMP=0x00100000004647b8
- (void)willChangeValueForKey:(id)arg1;	// IMP=0x001000000046479c
@property void *observationInfo;
- (id)_pendingChangeNotificationsArrayForKey:(id)arg1 create:(_Bool)arg2;	// IMP=0x00100000004671f8
- (id)_implicitObservationInfo;	// IMP=0x00100000004671f0
- (void)_changeValueForKey:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000467199
- (void)_changeValueForKey:(id)arg1 key:(id)arg2 key:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;	// IMP=0x001000000046713a
- (void)_changeValueForKeys:(id *)arg1 count:(unsigned long long)arg2 maybeOldValuesDict:(id)arg3 maybeNewValuesDict:(id)arg4 usingBlock:(CDUnknownBlockType)arg5;	// IMP=0x0010000000466562
- (void)_notifyObserversOfChangeFromValuesForKeys:(id)arg1 toValuesForKeys:(id)arg2;	// IMP=0x0010000000465f41
- (void)_didChangeValuesForKeys:(id)arg1;	// IMP=0x0010000000465f25
- (void)_willChangeValuesForKeys:(id)arg1;	// IMP=0x0010000000465f06
- (void)_notifyObserversForKeyPath:(id)arg1 change:(id)arg2;	// IMP=0x0010000000465b1d
- (void)_didEndKeyValueObserving;	// IMP=0x0010000000465b0f
- (void)_willBeginKeyValueObserving;	// IMP=0x0010000000465b09
- (id)replacementObjectForKeyedArchiver:(id)arg1;	// IMP=0x001000000047a712
@property(readonly) Class classForKeyedArchiver;
@property(readonly, retain) id autoContentAccessingProxy;
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 inModes:(id)arg4;	// IMP=0x00100000004d5b98
- (void)performSelector:(SEL)arg1 object:(id)arg2 afterDelay:(double)arg3;	// IMP=0x00100000004d5b86
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3;	// IMP=0x00100000004d5b1e
- (void)performSelectorInBackground:(SEL)arg1 withObject:(id)arg2;	// IMP=0x00100000004fe59f
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(_Bool)arg4;	// IMP=0x00100000004fe51a
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(_Bool)arg3;	// IMP=0x00100000004fe487
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(_Bool)arg3 modes:(id)arg4;	// IMP=0x00100000004fe421
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(_Bool)arg4 modes:(id)arg5;	// IMP=0x00100000004fdf88
- (id)replacementObjectForPortCoder:(id)arg1;	// IMP=0x0010000000579716
- (Class)classForPortCoder;	// IMP=0x0010000000579704
@end

