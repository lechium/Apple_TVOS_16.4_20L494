//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSFileProviderProxy, NSMutableDictionary, NSString;

__attribute__((visibility("hidden")))
@interface NSFileAccessNode : NSObject
{
    NSFileAccessNode *_parent;	// 8 = 0x8
    NSString *_name;	// 16 = 0x10
    NSString *_normalizedName;	// 24 = 0x18
    NSFileAccessNode *_symbolicLinkDestination;	// 32 = 0x20
    unsigned long long _symbolicLinkReferenceCount;	// 40 = 0x28
    NSMutableDictionary *_childrenByNormalizedName;	// 48 = 0x30
    id _presenterOrPresenters;	// 56 = 0x38
    NSFileProviderProxy *_provider;	// 64 = 0x40
    id _accessClaimOrClaims;	// 72 = 0x48
    _Bool _isArbitrationBoundary;	// 80 = 0x50
    _Bool _isFilePackageIsFigured;	// 81 = 0x51
    _Bool _isFilePackage;	// 82 = 0x52
    _Bool _symbolicLinkIsFirmlink;	// 83 = 0x53
    NSString *_lastRequestedChildName;	// 88 = 0x58
    NSFileAccessNode *_lastRequestedChild;	// 96 = 0x60
    id _progressPublisherOrPublishers;	// 104 = 0x68
    id _progressSubscriberOrSubscribers;	// 112 = 0x70
}

- (id)subarbiterDescription;	// IMP=0x00000000005c024d
- (id)sensitiveSubarbiterDescription;	// IMP=0x00000000005c022c
- (id)description;	// IMP=0x00000000005c020e
- (id)sensitiveDescription;	// IMP=0x00000000005c01ed
- (id)descriptionWithIndenting:(id)arg1 excludingExcessNodes:(_Bool)arg2 excludingReactors:(_Bool)arg3;	// IMP=0x00000000005bf8db
- (id)_childrenExcludingExcessNodes:(_Bool)arg1 excludingReactors:(_Bool)arg2;	// IMP=0x00000000005bf6e6
- (_Bool)_mayContainCriticalDebuggingInformationExcludingReactors:(_Bool)arg1;	// IMP=0x00000000005bf690
- (void)assertDescendantsLive;	// IMP=0x00000000005bf61d
- (void)assertLive;	// IMP=0x00000000005bf552
- (void)assertDead;	// IMP=0x00000000005bf483
- (id)parent;	// IMP=0x00000000005bf479
- (void)forEachProgressThingOfItemOrContainedItemPerformProcedure:(CDUnknownBlockType)arg1;	// IMP=0x00000000005bf255
- (void)forEachProgressSubscriberOfItemOrContainingItemPerformProcedure:(CDUnknownBlockType)arg1;	// IMP=0x00000000005bf175
- (void)forEachProgressSubscriberOfItemPerformProcedure:(CDUnknownBlockType)arg1;	// IMP=0x00000000005bf04f
- (void)forEachProgressPublisherOfItemOrContainedItemPerformProcedure:(CDUnknownBlockType)arg1;	// IMP=0x00000000005bef0a
- (void)forEachProgressPublisherOfItemPerformProcedure:(CDUnknownBlockType)arg1;	// IMP=0x00000000005bedd4
- (void)removeProgressSubscriber:(id)arg1;	// IMP=0x00000000005bed5b
- (void)addProgressSubscriber:(id)arg1;	// IMP=0x00000000005becc2
- (void)removeProgressPublisher:(id)arg1;	// IMP=0x00000000005bec49
- (void)addProgressPublisher:(id)arg1;	// IMP=0x00000000005bebb0
- (id)urlOfSubitemAtPath:(id)arg1 plusPath:(id)arg2;	// IMP=0x00000000005beabc
- (id)standardizedURL;	// IMP=0x00000000005bea04
- (id)pathExceptPrivate;	// IMP=0x00000000005be96e
- (id)url;	// IMP=0x00000000005be8b4
- (void)removeAccessClaim:(id)arg1;	// IMP=0x00000000005be83b
- (void)addAccessClaim:(id)arg1;	// IMP=0x00000000005be7a1
- (void)removeProvider:(id)arg1;	// IMP=0x00000000005be77a
- (_Bool)setProvider:(id)arg1;	// IMP=0x00000000005be58e
- (void)removePresenter:(id)arg1;	// IMP=0x00000000005be515
- (void)addPresenter:(id)arg1;	// IMP=0x00000000005be47c
- (_Bool)itemIsInItemAtLocation:(id)arg1;	// IMP=0x00000000005be462
- (_Bool)itemIsItemAtLocation:(id)arg1;	// IMP=0x00000000005be417
- (_Bool)itemIsSubarbitrable;	// IMP=0x00000000005be3f3
- (void)setArbitrationBoundary;	// IMP=0x00000000005be3e9
- (void)forEachAccessClaimOnItemOrContainedItemPerformProcedure:(CDUnknownBlockType)arg1;	// IMP=0x00000000005be281
- (void)forEachPresenterOfContainingItemPerformProcedure:(CDUnknownBlockType)arg1;	// IMP=0x00000000005be1d1
- (void)forEachPresenterOfItemOrContainingItemPerformProcedure:(CDUnknownBlockType)arg1;	// IMP=0x00000000005be11a
- (void)forEachPresenterOfItemOrContainedItemPerformProcedure:(CDUnknownBlockType)arg1;	// IMP=0x00000000005be0dd
- (void)forEachPresenterOfContainedItemPerformProcedure:(CDUnknownBlockType)arg1;	// IMP=0x00000000005bdfe3
- (void)forEachPresenterOfItemPerformProcedure:(CDUnknownBlockType)arg1;	// IMP=0x00000000005bdead
- (void)forEachPresenterOfContainingFilePackagePerformProcedure:(CDUnknownBlockType)arg1;	// IMP=0x00000000005bdde1
- (id)itemProvider;	// IMP=0x00000000005bddc5
- (void)forEachReactorToItemOrContainedItemPerformProcedure:(CDUnknownBlockType)arg1;	// IMP=0x00000000005bdceb
- (void)forEachRelevantAccessClaimPerformProcedure:(CDUnknownBlockType)arg1;	// IMP=0x00000000005bdcd4
- (void)forEachRelevantAccessClaimForEvaluatingAgainstClaim:(id)arg1 performProcedure:(CDUnknownBlockType)arg2;	// IMP=0x00000000005bdc91
- (void)_forEachRelevantAccessClaimExcludingClaimsFromSuperarbiter:(_Bool)arg1 performProcedure:(CDUnknownBlockType)arg2;	// IMP=0x00000000005bdb01
- (void)forEachAccessClaimOnItemPerformProcedure:(CDUnknownBlockType)arg1;	// IMP=0x00000000005bd9cb
- (void)forEachDescendantPerformProcedure:(CDUnknownBlockType)arg1;	// IMP=0x00000000005bd86a
- (id)biggestFilePackageLocation;	// IMP=0x00000000005bd81d
- (_Bool)itemIsFilePackage;	// IMP=0x00000000005bd634
- (void)setParent:(id)arg1 name:(id)arg2;	// IMP=0x00000000005bd58c
- (id)pathFromAncestor:(id)arg1;	// IMP=0x00000000005bd518
- (id)descendantForFileURL:(id)arg1;	// IMP=0x00000000005bd288
- (id)childForRange:(struct _NSRange)arg1 ofPath:(id)arg2;	// IMP=0x00000000005bd101
- (id)descendantAtPath:(id)arg1 componentRange:(struct _NSRange)arg2 forAddingLeafNode:(id)arg3 create:(_Bool)arg4;	// IMP=0x00000000005bcef1
- (id)descendantAtPath:(id)arg1 componentRange:(struct _NSRange)arg2 create:(_Bool)arg3;	// IMP=0x00000000005bcecf
- (id)normalizationOfChildName:(id)arg1;	// IMP=0x00000000005bcec6
- (void)removeSelfIfUseless;	// IMP=0x00000000005bce4e
- (void)removeChildForNormalizedName:(id)arg1;	// IMP=0x00000000005bcdcc
- (void)setChild:(id)arg1 forName:(id)arg2 normalizedName:(id)arg3;	// IMP=0x00000000005bcd3a
- (id)pathToDescendantForFileURL:(id)arg1 componentRange:(struct _NSRange *)arg2;	// IMP=0x00000000005bcb14
- (void)dealloc;	// IMP=0x00000000005bca68
- (void)setFirmlinkDestination:(id)arg1;	// IMP=0x00000000005bca41
- (void)setSymbolicLinkDestination:(id)arg1;	// IMP=0x00000000005bca20
- (void)_setLinkDestination:(id)arg1;	// IMP=0x00000000005bc999
- (id)initWithParent:(id)arg1 name:(id)arg2 normalizedName:(id)arg3;	// IMP=0x00000000005bc8f5

@end

