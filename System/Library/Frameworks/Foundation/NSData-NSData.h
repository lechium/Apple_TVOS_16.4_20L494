//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Foundation/NSData.h>

@interface NSData (NSData)
+ (_Bool)_base64DecodingAlwaysSucceedsForOptions:(unsigned long long)arg1;	// IMP=0x00800000003f5536
+ (id)_newZeroingDataWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 deallocator:(CDUnknownBlockType)arg3;	// IMP=0x00800000003f4e62
+ (id)_newZeroingDataWithBytes:(const void *)arg1 length:(unsigned long long)arg2;	// IMP=0x00800000003f4e26
+ (id)dataWithData:(id)arg1;	// IMP=0x00800000003f44e4
+ (id)dataWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 maxLength:(unsigned long long)arg3 error:(id *)arg4;	// IMP=0x00800000003f449c
+ (id)dataWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00800000003f4459
+ (id)dataWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00800000003f4416
+ (id)dataWithContentsOfMappedFile:(id)arg1;	// IMP=0x00800000003f43e7
+ (id)dataWithContentsOfURL:(id)arg1;	// IMP=0x00800000003f43b8
+ (id)dataWithContentsOfFile:(id)arg1;	// IMP=0x00800000003f4389
+ (id)dataWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3;	// IMP=0x00800000003f4346
+ (id)dataWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2;	// IMP=0x00800000003f4312
+ (id)dataWithBytes:(const void *)arg1 length:(unsigned long long)arg2;	// IMP=0x00800000003f42de
+ (id)data;	// IMP=0x00800000003f42b8
+ (id)_alloc;	// IMP=0x00800000003f4264
+ (id)allocWithZone:(struct _NSZone *)arg1;	// IMP=0x00800000003f4243
+ (_Bool)_subclassesMustBeExplicitlyMentionedWhenDecoded;	// IMP=0x00800000003f30e3
- (_Bool)_providesConcreteBacking;	// IMP=0x00100000003f6338
- (id)base64Encoding;	// IMP=0x00100000003f62ee
- (id)initWithBase64Encoding:(id)arg1;	// IMP=0x00100000003f6259
- (id)base64EncodedDataWithOptions:(unsigned long long)arg1;	// IMP=0x00100000003f620f
- (id)initWithBase64EncodedData:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x00100000003f617f
- (id)base64EncodedStringWithOptions:(unsigned long long)arg1;	// IMP=0x00100000003f6132
- (id)initWithBase64EncodedString:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x00100000003f60a2
- (id)_base64EncodingAsString:(_Bool)arg1 withOptions:(unsigned long long)arg2;	// IMP=0x00100000003f5987
- (id)_initWithBase64EncodedObject:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x00100000003f5558
- (_Bool)_decodeBase64EncodedCharacterBuffer:(const char *)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 buffer:(char *)arg4 bufferLength:(unsigned long long)arg5 state:(CDStruct_6243051c *)arg6;	// IMP=0x00100000003f5291
- (id)_createDispatchData;	// IMP=0x00100000003f5192
- (struct _NSRange)rangeOfData:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;	// IMP=0x00100000003f4ea7
- (id)initWithData:(id)arg1;	// IMP=0x00100000003f4d92
- (id)initWithContentsOfFile:(id)arg1 error:(id *)arg2;	// IMP=0x00100000003f4d7b
- (id)initWithContentsOfMappedFile:(id)arg1 error:(id *)arg2;	// IMP=0x00100000003f4d61
- (id)initWithContentsOfMappedFile:(id)arg1;	// IMP=0x00100000003f4ca2
- (id)initWithContentsOfURL:(id)arg1;	// IMP=0x00100000003f4b12
- (id)initWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00100000003f4af6
- (id)initWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00100000003f4ada
- (id)initWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 maxLength:(unsigned long long)arg3 error:(id *)arg4;	// IMP=0x00100000003f4885
- (id)initWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 maxLength:(unsigned long long)arg3 error:(id *)arg4;	// IMP=0x00100000003f4724
- (id)initWithContentsOfFile:(id)arg1;	// IMP=0x00100000003f4671
- (id)initWithBytes:(void *)arg1 length:(unsigned long long)arg2 copy:(_Bool)arg3 deallocator:(CDUnknownBlockType)arg4;	// IMP=0x00100000003f4659
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 deallocator:(CDUnknownBlockType)arg3;	// IMP=0x00100000003f4641
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3;	// IMP=0x00100000003f4619
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2;	// IMP=0x00100000003f45ee
- (id)initWithBytes:(const void *)arg1 length:(unsigned long long)arg2;	// IMP=0x00100000003f45c3
- (id)initWithBytes:(void *)arg1 length:(unsigned long long)arg2 copy:(_Bool)arg3 freeWhenDone:(_Bool)arg4 bytesAreVM:(_Bool)arg5;	// IMP=0x00100000003f458f
- (_Bool)writeToURL:(id)arg1 atomically:(_Bool)arg2;	// IMP=0x00100000003f41b5
- (_Bool)writeToFile:(id)arg1 atomically:(_Bool)arg2;	// IMP=0x00100000003f415c
- (_Bool)writeToFile:(id)arg1 atomically:(_Bool)arg2 error:(id *)arg3;	// IMP=0x00100000003f4101
- (_Bool)writeToURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00100000003f3fa4
- (_Bool)writeToFile:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00100000003f3eb1
- (id)subdataWithRange:(struct _NSRange)arg1;	// IMP=0x00100000003f3c44
- (_Bool)isEqualToData:(id)arg1;	// IMP=0x00100000003f380c
- (_Bool)_isCompact;	// IMP=0x00100000003f36d1
- (_Bool)_isDispatchData;	// IMP=0x00100000003f36c9
- (void)getBytes:(void *)arg1 range:(struct _NSRange)arg2;	// IMP=0x00100000003f345a
- (void)enumerateByteRangesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000003f33ba
- (void)getBytes:(void *)arg1 length:(unsigned long long)arg2;	// IMP=0x00100000003f32c7
- (void)getBytes:(void *)arg1;	// IMP=0x00100000003f31db
- (_Bool)_allowsDirectEncoding;	// IMP=0x00100000003f31c6
- (id)replacementObjectForCoder:(id)arg1;	// IMP=0x00100000003f3129
- (_Bool)_canReplaceWithDispatchDataForXPCCoder;	// IMP=0x00100000003f30eb
- (Class)classForCoder;	// IMP=0x00100000003f30d2
- (id)initWithCoder:(id)arg1;	// IMP=0x00100000003f2e65
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00100000003f2d7f
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;	// IMP=0x00100000003f2c7e
- (_Bool)_copyWillRetain;	// IMP=0x00100000003f2c76
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00100000003f2bdd
- (_Bool)isEqual:(id)arg1;	// IMP=0x00100000003f2b74
- (unsigned long long)hash;	// IMP=0x00100000003f2b00
- (id)_asciiDescription;	// IMP=0x00100000003f2a27
- (id)debugDescription;	// IMP=0x00100000003f2786
- (id)description;	// IMP=0x00100000003f2451
- (unsigned long long)_cfTypeID;	// IMP=0x00100000003f2447
- (const void *)bytes;	// IMP=0x00100000003f23f5
- (unsigned long long)length;	// IMP=0x00100000003f23a3
- (id)_compressedDataUsingCompressionAlgorithm:(int)arg1 error:(id *)arg2;	// IMP=0x00100000003fb0b1
- (id)_decompressedDataUsingCompressionAlgorithm:(int)arg1 error:(id *)arg2;	// IMP=0x00100000003fae87
- (id)compressedDataUsingAlgorithm:(long long)arg1 error:(id *)arg2;	// IMP=0x00100000003fae59
- (id)decompressedDataUsingAlgorithm:(long long)arg1 error:(id *)arg2;	// IMP=0x00100000003fadb3
- (void)_produceDataWithCompressionOperation:(int)arg1 algorithm:(int)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000003fabaa
- (id)_replaceCString:(const char *)arg1 withCString:(const char *)arg2;	// IMP=0x00100000003fc0aa
- (id)_web_parseRFC822HeaderFields;	// IMP=0x00100000003fbb51
- (id)_web_guessedMIMETypeForExtension:(id)arg1;	// IMP=0x00100000003fbacd
- (id)_web_guessedMIMEType;	// IMP=0x00100000003fb82e
- (id)_web_guessedMIMETypeForXML;	// IMP=0x00100000003fb6c2
- (_Bool)_getBPlistMarker:(char *)arg1 offset:(unsigned long long *)arg2 trailer:(CDStruct_f10e9336 *)arg3;	// IMP=0x001000000042be56
- (_Bool)isNSData__;	// IMP=0x00100000004ba20b
- (id)replacementObjectForPortCoder:(id)arg1;	// IMP=0x00100000005798e1
@end

