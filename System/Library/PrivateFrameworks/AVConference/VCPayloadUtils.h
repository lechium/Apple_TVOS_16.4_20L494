//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

__attribute__((visibility("hidden")))
@interface VCPayloadUtils : NSObject
{
}

+ (int)audioCodecBandwidthForVCAudioCodecBandwidth:(int)arg1;	// IMP=0x008000000008f93e
+ (int)vcAudioCodecBandwidthForAudioCodecBandwidth:(int)arg1;	// IMP=0x008000000008f92d
+ (unsigned int)bitrateForEVSCodecMode:(int)arg1;	// IMP=0x008000000008f8fe
+ (unsigned int)bitrateForAMRWBCodecMode:(int)arg1;	// IMP=0x008000000008f80a
+ (unsigned int)bitrateForAMRCodecMode:(int)arg1;	// IMP=0x008000000008f716
+ (_Bool)supportsCodecBandwidthUpdateForCodecType:(long long)arg1;	// IMP=0x008000000008f705
+ (_Bool)supportsCodecRateModesForCodecType:(long long)arg1;	// IMP=0x008000000008f6e8
+ (unsigned int)bitrateForCodecType:(long long)arg1 mode:(int)arg2;	// IMP=0x008000000008f618
+ (int)payloadForCodecType:(long long)arg1;	// IMP=0x008000000008f37c
+ (long long)codecTypeForPayload:(int)arg1;	// IMP=0x008000000008f0f4
+ (float)qualityForPayload:(int)arg1 forBitrate:(unsigned int)arg2;	// IMP=0x008000000008ef71
+ (_Bool)shouldEnablePacketSizeLimitForPayload:(int)arg1;	// IMP=0x008000000008ef65
+ (unsigned int)internalBundleFactorForPayload:(int)arg1;	// IMP=0x008000000008ef50
+ (_Bool)canBundleExternallyForPayload:(int)arg1 forBundlingScheme:(int)arg2 operatingMode:(int)arg3;	// IMP=0x008000000008ef08
+ (_Bool)shouldUseCookieForPayload:(int)arg1;	// IMP=0x008000000008eeec
+ (_Bool)skipBandWidthCheckForCodecRateModes:(int)arg1 supportedBitrates:(id)arg2;	// IMP=0x008000000008ed30
+ (_Bool)isEVSPayload:(int)arg1;	// IMP=0x008000000008ed14
+ (_Bool)isCodecModeSupported:(int)arg1 forBandwidth:(int)arg2 withPayload:(int)arg3;	// IMP=0x008000000008ecd2
+ (_Bool)isAMRCodecModeSupported:(int)arg1 forBandwidth:(int)arg2;	// IMP=0x008000000008ecb4
+ (_Bool)isEVSCodecModeSupported:(int)arg1 forBandwidth:(int)arg2;	// IMP=0x008000000008ec5d
+ (int)codecRateModeForDesiredANBR:(unsigned int)arg1 payload:(int)arg2 supportedBitrates:(id)arg3 supportedBandwidths:(id)arg4;	// IMP=0x008000000008e6ee
+ (id)allowedBitratesForPayload:(int)arg1 supportedBitrates:(id)arg2 supportedBandwidths:(id)arg3;	// IMP=0x008000000008e419
+ (id)supportedCodecModesForBandwidth:(int)arg1 payload:(int)arg2;	// IMP=0x008000000008e3c6
+ (id)codecModesForEVS32kHz;	// IMP=0x008000000008e3b9
+ (id)codecModesForEVS16kHz;	// IMP=0x008000000008e3ac
+ (id)codecModesForEVS8kHz;	// IMP=0x008000000008e39f
+ (id)codecModesForAMR16kHz;	// IMP=0x008000000008e392
+ (id)codecModesForAMR8kHz;	// IMP=0x008000000008e385
+ (int)codecBandwidthForPayload:(int)arg1;	// IMP=0x008000000008e358
+ (_Bool)canSetBitrateForPayload:(int)arg1;	// IMP=0x008000000008e33c
+ (unsigned int)codecSamplesPerFrameForPayload:(int)arg1 blockSize:(double)arg2;	// IMP=0x008000000008e1ec
+ (unsigned int)audioCodecTypeForPayload:(int)arg1;	// IMP=0x008000000008e0cc
+ (unsigned int)sampleRateForCodecBandwidth:(int)arg1;	// IMP=0x008000000008e0ac
+ (unsigned int)sampleRateForPayload:(int)arg1;	// IMP=0x008000000008dfe7
+ (_Bool)isPayloadSupportedInFaceTime:(int)arg1;	// IMP=0x008000000008dfb4
+ (_Bool)isUseCaseWatchContinuity:(int)arg1 primaryPayload:(int)arg2;	// IMP=0x008000000008df98

@end

