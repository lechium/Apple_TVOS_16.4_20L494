//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSString, VCRateControlMediaController;

__attribute__((visibility("hidden")))
@interface VCRateControlAlgorithmBase : NSObject
{
    struct tagVCRateControlAlgorithmConfig _config;	// 8 = 0x8
    VCRateControlMediaController *_mediaController;	// 696 = 0x2b8
    _Atomic _Bool _paused;	// 704 = 0x2c0
    double _pauseStartTime;	// 712 = 0x2c8
    int _state;	// 720 = 0x2d0
    int _rampUpStatus;	// 724 = 0x2d4
    int _rampDownStatus;	// 728 = 0x2d8
    int _currentTierIndex;	// 732 = 0x2dc
    int _previousTierIndex;	// 736 = 0x2e0
    double _targetBitrateContinuous;	// 744 = 0x2e8
    unsigned int _targetBitrate;	// 752 = 0x2f0
    unsigned int _actualBitrate;	// 756 = 0x2f4
    unsigned int _rateChangeCounter;	// 760 = 0x2f8
    unsigned int _rateControlCounter;	// 764 = 0x2fc
    double _rateControlTime;	// 768 = 0x300
    double _rampUpFrozenTime;	// 776 = 0x308
    _Bool _isCongested;	// 784 = 0x310
    _Bool _isNewRateSentOut;	// 785 = 0x311
    _Bool _isSendBitrateLimited;	// 786 = 0x312
    _Bool _isFirstInitialRampUpDone;	// 787 = 0x313
    _Bool _isFirstTimestampArrived;	// 788 = 0x314
    unsigned int _consecutiveRampDown;	// 792 = 0x318
    double _lastTimeStartRampingDown;	// 800 = 0x320
    double _lastCongestionTime;	// 808 = 0x328
    double _lastRampDownTimeDueToFeedback;	// 816 = 0x330
    double _lastRampDownTimeDueToBaseband;	// 824 = 0x338
    unsigned int _remoteBandwidthEstimation;	// 832 = 0x340
    unsigned int _localBandwidthEstimation;	// 836 = 0x344
    double _lastNoOvershootBWEstimationTime;	// 840 = 0x348
    double _firstBelowNoRampUpBandwidthTime;	// 848 = 0x350
    _Bool _belowNoRampUpBandwidth;	// 856 = 0x358
    _Bool _isOvershoot;	// 857 = 0x359
    CDStruct_55dce769 _owrdList;	// 864 = 0x360
    _Bool _isOWRDListReady;	// 2512 = 0x9d0
    _Bool _isOWRDConstant;	// 2513 = 0x9d1
    double _owrd;	// 2520 = 0x9d8
    double _nowrd;	// 2528 = 0x9e0
    double _nowrdShort;	// 2536 = 0x9e8
    double _nowrdAcc;	// 2544 = 0x9f0
    double _lastOWRDChangeTime;	// 2552 = 0x9f8
    struct {
        double time;
        double packetLossRate;
        double packetLossRateVideo;
        _Bool isLossIncreasing;
    } _lossEventBuffer[64];	// 2560 = 0xa00
    unsigned int _lossEventBufferIndex;	// 4608 = 0x1200
    double _lastLossEventRampDownTime;	// 4616 = 0x1208
    double _firstLossEventRampDownTime;	// 4624 = 0x1210
    int _packetLossRateBadTrendCount;	// 4632 = 0x1218
    unsigned int _lossEventBandwidthLimit;	// 4636 = 0x121c
    unsigned int _lossEventBandwidthConfidence;	// 4640 = 0x1220
    unsigned int _mostBurstLoss;	// 4644 = 0x1224
    double _packetLossRate;	// 4648 = 0x1228
    double _previousPacketLossRate;	// 4656 = 0x1230
    double _packetLossRateThreshold;	// 4664 = 0x1238
    double _packetLossRateAvgLong;	// 4672 = 0x1240
    double _packetLossRateAvgLongPrevious;	// 4680 = 0x1248
    double _packetLossRateAvgLongAtLBAStart;	// 4688 = 0x1250
    double _packetLossRateAvgLongAtLBAExit;	// 4696 = 0x1258
    double _packetLossRateAudio;	// 4704 = 0x1260
    double _packetLossRateVideo;	// 4712 = 0x1268
    double _roundTripTime;	// 4720 = 0x1270
    double _worstRecentRoundTripTime;	// 4728 = 0x1278
    unsigned int _worstRecentBurstLoss;	// 4736 = 0x1280
    unsigned int _totalPacketReceived;	// 4740 = 0x1284
    _Bool _shouldConsiderVideoInLossEvent;	// 4744 = 0x1288
    unsigned int _rateSharingCount;	// 4748 = 0x128c
    void *_logDump;	// 4752 = 0x1290
    void *_logBasebandDump;	// 4760 = 0x1298
    _Bool _isPeriodicLoggingEnabled;	// 4768 = 0x12a0
    _Bool _didMBLRampDown;	// 4769 = 0x12a1
}

@property(nonatomic) _Bool isFirstTimestampArrived; // @synthesize isFirstTimestampArrived=_isFirstTimestampArrived;
@property(nonatomic) unsigned int rateSharingCount; // @synthesize rateSharingCount=_rateSharingCount;
@property(readonly, nonatomic) _Bool isFirstInitialRampUpDone; // @synthesize isFirstInitialRampUpDone=_isFirstInitialRampUpDone;
@property(readonly, nonatomic) _Bool isSendBitrateLimited; // @synthesize isSendBitrateLimited=_isSendBitrateLimited;
@property(nonatomic) _Bool didMBLRampDown; // @synthesize didMBLRampDown=_didMBLRampDown;
@property(readonly, nonatomic) unsigned int actualBitrate; // @synthesize actualBitrate=_actualBitrate;
@property(readonly, nonatomic) double owrd; // @synthesize owrd=_owrd;
@property(readonly, nonatomic) unsigned int remoteBandwidthEstimation; // @synthesize remoteBandwidthEstimation=_remoteBandwidthEstimation;
@property(nonatomic) unsigned int localBandwidthEstimation; // @synthesize localBandwidthEstimation=_localBandwidthEstimation;
@property(readonly, nonatomic) _Bool isNewRateSentOut; // @synthesize isNewRateSentOut=_isNewRateSentOut;
@property(readonly, nonatomic) unsigned int worstRecentBurstLoss; // @synthesize worstRecentBurstLoss=_worstRecentBurstLoss;
@property(readonly, nonatomic) double worstRecentRoundTripTime; // @synthesize worstRecentRoundTripTime=_worstRecentRoundTripTime;
@property(readonly, nonatomic) double roundTripTime; // @synthesize roundTripTime=_roundTripTime;
@property(readonly, nonatomic) unsigned int totalPacketReceived; // @synthesize totalPacketReceived=_totalPacketReceived;
@property(readonly, nonatomic) double packetLossRateVideo; // @synthesize packetLossRateVideo=_packetLossRateVideo;
@property(readonly, nonatomic) double packetLossRateAudio; // @synthesize packetLossRateAudio=_packetLossRateAudio;
@property(readonly, nonatomic) double packetLossRate; // @synthesize packetLossRate=_packetLossRate;
@property(readonly, nonatomic) unsigned int mostBurstLoss; // @synthesize mostBurstLoss=_mostBurstLoss;
@property(retain, nonatomic) VCRateControlMediaController *mediaController; // @synthesize mediaController=_mediaController;
@property(readonly, nonatomic) unsigned int rateChangeCounter; // @synthesize rateChangeCounter=_rateChangeCounter;
@property(readonly, nonatomic) unsigned int targetBitrate; // @synthesize targetBitrate=_targetBitrate;
@property(readonly, nonatomic) _Bool isCongested; // @synthesize isCongested=_isCongested;
@property(readonly, nonatomic) struct tagVCRateControlAlgorithmConfig config; // @synthesize config=_config;
- (void)updateCongestionStatusWhenRampDown:(double)arg1;	// IMP=0x00000000001e4f23
- (void)updateCongestionStatusWhenRampUp;	// IMP=0x00000000001e4ea3
- (_Bool)shouldRampDownDueToLossThreshold;	// IMP=0x00000000001e4c23
- (_Bool)shouldRampDownDueToConsecutiveLoss;	// IMP=0x00000000001e4bd3
- (_Bool)shouldRampDownDueToLossEvent;	// IMP=0x00000000001e4b77
- (_Bool)shouldBlockRampUpDueToLossEventThreshold;	// IMP=0x00000000001e4a53
- (_Bool)allowRampUpWithContinuousTargetBitrate;	// IMP=0x00000000001e4988
- (double)rampUpTargetBitrateContinuousWithBandwidthDiff:(int)arg1;	// IMP=0x00000000001e493c
- (void)resetLossEventBandwidthLimit;	// IMP=0x00000000001e492b
- (void)updateLossEventBandwidthLimit:(unsigned int)arg1;	// IMP=0x00000000001e4846
- (void)resetLossEventBuffer;	// IMP=0x00000000001e4819
- (double)lossEventOverThresholdRatio;	// IMP=0x00000000001e475f
- (int)lossEventIncreasingCount;	// IMP=0x00000000001e471f
- (void)updateLossEvent;	// IMP=0x00000000001e460d
@property(readonly, nonatomic) _Bool isLossBasedAdaptationOn;
- (_Bool)recentlyGoAboveRampUpBandwidth;	// IMP=0x00000000001e4581
- (_Bool)keepOvershootingRampDownBandwidth;	// IMP=0x00000000001e454a
- (void)checkBandwidthOvershootWithRemoteBandwidthEstimation:(unsigned int)arg1;	// IMP=0x00000000001e444a
- (void)stateEnter;	// IMP=0x00000000001e442b
- (void)stateExit;	// IMP=0x00000000001e4407
- (void)stateChangeTo:(int)arg1;	// IMP=0x00000000001e43b3
- (void)resetRampingStatus;	// IMP=0x00000000001e43a2
- (void)calculateCongestionMetricsFromOWRD:(double)arg1 time:(double)arg2;	// IMP=0x00000000001e42c8
- (unsigned short)getTimestampFromMicroTime:(double)arg1;	// IMP=0x00000000001e42af
- (double)getDoubleTimeFromTimestamp:(unsigned int)arg1 timestampTick:(unsigned int)arg2 wrapAroundCounter:(unsigned int)arg3;	// IMP=0x00000000001e4283
- (void)logToDumpFilesWithString:(id)arg1;	// IMP=0x00000000001e41c3
- (void)enableBasebandDump:(void *)arg1;	// IMP=0x00000000001e41b1
- (void)enableLogDump:(void *)arg1 enablePeriodicLogging:(_Bool)arg2;	// IMP=0x00000000001e4199
- (_Bool)doRateControlWithStatistics:(struct tagVCStatisticsMessage)arg1;	// IMP=0x00000000001e4138
- (void)configure:(struct tagVCRateControlAlgorithmConfig)arg1 restartRequired:(_Bool)arg2;	// IMP=0x00000000001e40d7
- (void)checkPaused;	// IMP=0x00000000001e3e8a
@property(nonatomic, getter=isPaused) _Bool paused;
- (void)dealloc;	// IMP=0x00000000001e3e0f
- (id)init;	// IMP=0x00000000001e3d99

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

