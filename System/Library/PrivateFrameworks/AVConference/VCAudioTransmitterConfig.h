//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVCStatisticsCollector, NSArray, NSMutableArray, VCAudioPayload, VCTransportSession;

__attribute__((visibility("hidden")))
@interface VCAudioTransmitterConfig : NSObject
{
    struct tagHANDLE *_rtpHandle;	// 8 = 0x8
    struct tagHANDLE *_rtpVideo;	// 16 = 0x10
    struct tagHANDLE *_mediaQueue;	// 24 = 0x18
    struct tagHANDLE *_afrcHandle;	// 32 = 0x20
    void *_controlInfoGenerator;	// 40 = 0x28
    AVCStatisticsCollector *_statisticsCollector;	// 48 = 0x30
    NSMutableArray *_audioPayloads;	// 56 = 0x38
    VCAudioPayload *_chosenAudioPayload;	// 64 = 0x40
    VCAudioPayload *_chosenDTXPayload;	// 72 = 0x48
    unsigned char _packetsPerBundle;	// 80 = 0x50
    _Bool _useRateControl;	// 81 = 0x51
    int _bundlingScheme;	// 84 = 0x54
    _Bool _isUseCaseWatchContinuity;	// 88 = 0x58
    _Bool _allowAudioSwitching;	// 89 = 0x59
    _Bool _supportsAdaptation;	// 90 = 0x5a
    int _chosenRedPayloadType;	// 92 = 0x5c
    _Bool _redEnabled;	// 96 = 0x60
    _Bool _includeRedSequenceOffset;	// 97 = 0x61
    unsigned int _redNumPayloads;	// 100 = 0x64
    unsigned int _redMaxDelay20ms;	// 104 = 0x68
    _Bool _transmitROC;	// 108 = 0x6c
    _Bool _needsPacketThread;	// 109 = 0x6d
    int _operatingMode;	// 112 = 0x70
    struct tagVCAudioFrameFormat _inputFormat;	// 120 = 0x78
    struct opaqueRTCReporting *_reportingAgent;	// 168 = 0xa8
    int _reportingParentID;	// 176 = 0xb0
    VCTransportSession *_transportSession;	// 184 = 0xb8
    _Bool _ignoreSilence;	// 192 = 0xc0
    int _ratType;	// 196 = 0xc4
    _Bool _shouldCreateRedundancyController;	// 200 = 0xc8
    _Bool _useChannelDataFormat;	// 201 = 0xc9
    _Bool _shouldUseRedAsBoolean;	// 202 = 0xca
    unsigned int _maxIDSStreamIdCount;	// 204 = 0xcc
    NSArray *_streamIDs;	// 208 = 0xd0
    unsigned int _tierNetworkBitrate;	// 216 = 0xd8
    NSArray *_supportedNumRedundantPayload;	// 224 = 0xe0
    _Bool _sendActiveVoiceOnly;	// 232 = 0xe8
    _Bool _currentDTXEnable;	// 233 = 0xe9
    unsigned char _mediaControlInfoVersion;	// 234 = 0xea
    unsigned int _qualityIndex;	// 236 = 0xec
    _Bool _alwaysOnAudioRedundancyEnabled;	// 240 = 0xf0
    _Bool _cellularAllowRedLowBitratesEnabled;	// 241 = 0xf1
    _Bool _wifiAllowRedLowBitratesEnabled;	// 242 = 0xf2
    unsigned long long _remoteIDSParticipantID;	// 248 = 0xf8
    _Bool _useWifiTiers;	// 256 = 0x100
    struct tagVCCryptor *_sframeCryptor;	// 264 = 0x108
    _Bool _audioIssueDetectorEnabled;	// 272 = 0x110
    unsigned int _packetExpirationTime;	// 276 = 0x114
    _Bool _audioDumpEnabled;	// 280 = 0x118
    _Bool _shouldApplyRedAsBoolean;	// 281 = 0x119
    _Bool _supportsCodecBandwidthUpdate;	// 282 = 0x11a
    _Bool _targetBitrateIsAudioOnly;	// 283 = 0x11b
}

@property(nonatomic) _Bool audioDumpEnabled; // @synthesize audioDumpEnabled=_audioDumpEnabled;
@property(nonatomic) _Bool targetBitrateIsAudioOnly; // @synthesize targetBitrateIsAudioOnly=_targetBitrateIsAudioOnly;
@property(nonatomic) _Bool audioIssueDetectorEnabled; // @synthesize audioIssueDetectorEnabled=_audioIssueDetectorEnabled;
@property(nonatomic) int ratType; // @synthesize ratType=_ratType;
@property(nonatomic) _Bool supportsCodecBandwidthUpdate; // @synthesize supportsCodecBandwidthUpdate=_supportsCodecBandwidthUpdate;
@property(nonatomic) unsigned int packetExpirationTime; // @synthesize packetExpirationTime=_packetExpirationTime;
@property(nonatomic) struct tagVCCryptor *sframeCryptor; // @synthesize sframeCryptor=_sframeCryptor;
@property(nonatomic) _Bool useWifiTiers; // @synthesize useWifiTiers=_useWifiTiers;
@property(nonatomic) unsigned int qualityIndex; // @synthesize qualityIndex=_qualityIndex;
@property(nonatomic) _Bool shouldApplyRedAsBoolean; // @synthesize shouldApplyRedAsBoolean=_shouldApplyRedAsBoolean;
@property(nonatomic) _Bool useChannelDataFormat; // @synthesize useChannelDataFormat=_useChannelDataFormat;
@property(nonatomic) _Bool shouldCreateRedundancyController; // @synthesize shouldCreateRedundancyController=_shouldCreateRedundancyController;
@property(nonatomic) unsigned long long remoteIDSParticipantID; // @synthesize remoteIDSParticipantID=_remoteIDSParticipantID;
@property(nonatomic) _Bool wifiAllowRedLowBitratesEnabled; // @synthesize wifiAllowRedLowBitratesEnabled=_wifiAllowRedLowBitratesEnabled;
@property(nonatomic) _Bool cellularAllowRedLowBitratesEnabled; // @synthesize cellularAllowRedLowBitratesEnabled=_cellularAllowRedLowBitratesEnabled;
@property(nonatomic) _Bool alwaysOnAudioRedundancyEnabled; // @synthesize alwaysOnAudioRedundancyEnabled=_alwaysOnAudioRedundancyEnabled;
@property(nonatomic) unsigned char mediaControlInfoVersion; // @synthesize mediaControlInfoVersion=_mediaControlInfoVersion;
@property(nonatomic, getter=isCurrentDTXEnabled) _Bool currentDTXEnable; // @synthesize currentDTXEnable=_currentDTXEnable;
@property(nonatomic) int reportingParentID; // @synthesize reportingParentID=_reportingParentID;
@property(nonatomic) _Bool sendActiveVoiceOnly; // @synthesize sendActiveVoiceOnly=_sendActiveVoiceOnly;
@property(retain, nonatomic) NSArray *supportedNumRedundantPayload; // @synthesize supportedNumRedundantPayload=_supportedNumRedundantPayload;
@property(nonatomic) unsigned int maxIDSStreamIdCount; // @synthesize maxIDSStreamIdCount=_maxIDSStreamIdCount;
@property(nonatomic) unsigned int tierNetworkBitrate; // @synthesize tierNetworkBitrate=_tierNetworkBitrate;
@property(retain, nonatomic) NSArray *streamIDs; // @synthesize streamIDs=_streamIDs;
@property(nonatomic) _Bool needsPacketThread; // @synthesize needsPacketThread=_needsPacketThread;
@property(nonatomic) _Bool ignoreSilence; // @synthesize ignoreSilence=_ignoreSilence;
@property(nonatomic) _Bool transmitROC; // @synthesize transmitROC=_transmitROC;
@property(retain, nonatomic) AVCStatisticsCollector *statisticsCollector; // @synthesize statisticsCollector=_statisticsCollector;
@property(nonatomic) unsigned int redMaxDelay20ms; // @synthesize redMaxDelay20ms=_redMaxDelay20ms;
@property(nonatomic) unsigned int redNumPayloads; // @synthesize redNumPayloads=_redNumPayloads;
@property(nonatomic) _Bool includeRedSequenceOffset; // @synthesize includeRedSequenceOffset=_includeRedSequenceOffset;
@property(nonatomic, getter=isRedEnabled) _Bool redEnabled; // @synthesize redEnabled=_redEnabled;
@property(retain, nonatomic) VCTransportSession *transportSession; // @synthesize transportSession=_transportSession;
@property(nonatomic) struct opaqueRTCReporting *reportingAgent; // @synthesize reportingAgent=_reportingAgent;
@property(nonatomic) struct tagVCAudioFrameFormat inputFormat; // @synthesize inputFormat=_inputFormat;
@property(nonatomic) int operatingMode; // @synthesize operatingMode=_operatingMode;
@property(nonatomic) _Bool supportsAdaptation; // @synthesize supportsAdaptation=_supportsAdaptation;
@property(nonatomic) _Bool allowAudioSwitching; // @synthesize allowAudioSwitching=_allowAudioSwitching;
@property(nonatomic) _Bool isUseCaseWatchContinuity; // @synthesize isUseCaseWatchContinuity=_isUseCaseWatchContinuity;
@property(nonatomic) int bundlingScheme; // @synthesize bundlingScheme=_bundlingScheme;
@property(nonatomic) _Bool useRateControl; // @synthesize useRateControl=_useRateControl;
@property(nonatomic) unsigned char packetsPerBundle; // @synthesize packetsPerBundle=_packetsPerBundle;
@property(nonatomic) int chosenRedPayloadType; // @synthesize chosenRedPayloadType=_chosenRedPayloadType;
@property(retain, nonatomic) VCAudioPayload *chosenDTXPayload; // @synthesize chosenDTXPayload=_chosenDTXPayload;
@property(retain, nonatomic) VCAudioPayload *chosenAudioPayload; // @synthesize chosenAudioPayload=_chosenAudioPayload;
@property(retain, nonatomic) NSMutableArray *audioPayloads; // @synthesize audioPayloads=_audioPayloads;
@property(nonatomic) struct tagHANDLE *afrcHandle; // @synthesize afrcHandle=_afrcHandle;
@property(nonatomic) struct tagHANDLE *mediaQueue; // @synthesize mediaQueue=_mediaQueue;
@property(nonatomic) void *controlInfoGenerator; // @synthesize controlInfoGenerator=_controlInfoGenerator;
@property(nonatomic) struct tagHANDLE *rtpVideo; // @synthesize rtpVideo=_rtpVideo;
@property(nonatomic) struct tagHANDLE *rtpHandle; // @synthesize rtpHandle=_rtpHandle;
- (id)description;	// IMP=0x00000000003a9887
- (void)dealloc;	// IMP=0x00000000003a97dd

@end

