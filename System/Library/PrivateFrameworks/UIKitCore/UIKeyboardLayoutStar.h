//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "UIKeyboardLayout.h"

@class CADisplayLink, NSArray, NSDate, NSLayoutConstraint, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSString, NSTimer, TUIKeyplaneView, UIButton, UIDelayedAction, UIGestureKeyboardIntroduction, UIImageView, UIKBBackgroundView, UIKBKeyViewAnimator, UIKBKeyplaneView, UIKBRenderConfig, UIKBResizingKeyplaneCoordinator, UIKBTree, UIKeyboardEmojiKeyDisplayController, UIKeyboardPathEffectView, UIKeyboardPinchGestureRecognizer, UIKeyboardSplitTransitionView, UISwipeGestureRecognizer, UIView, _UIKeyboardTypingSpeedLogger;
@protocol UIKeyboardKeyplaneTransitionDelegate, UIKeyboardLayoutStarDelegate, UITextCursorAssertion;

__attribute__((visibility("hidden")))
@interface UIKeyboardLayoutStar : UIKeyboardLayout
{
    UIKBTree *_keyboard;	// 208 = 0xd0
    UIKBTree *_keyplane;	// 216 = 0xd8
    NSString *_keyboardName;	// 224 = 0xe0
    NSString *_keyplaneName;	// 232 = 0xe8
    long long _appearance;	// 240 = 0xf0
    UIKBTree *_activeKey;	// 248 = 0xf8
    UIKBTree *_inactiveLanguageIndicator;	// 256 = 0x100
    UIKBKeyplaneView *_keyplaneView;	// 264 = 0x108
    UIKBBackgroundView *_backgroundView;	// 272 = 0x110
    UIKBKeyViewAnimator *_keyViewAnimator;	// 280 = 0x118
    UIKeyboardEmojiKeyDisplayController *_emojiKeyManager;	// 288 = 0x120
    double _prevTouchUpTime;	// 296 = 0x128
    double _prevTouchUpFinishedTime;	// 304 = 0x130
    double _prevTouchDownTime;	// 312 = 0x138
    unsigned long long _prevUpActions;	// 320 = 0x140
    NSMutableDictionary *_keyboards;	// 328 = 0x148
    NSMutableDictionary *_allKeyplaneViews;	// 336 = 0x150
    NSMutableSet *_allKeyplaneKeycaps;	// 344 = 0x158
    NSMutableSet *_validInputStrings;	// 352 = 0x160
    NSString *_localizedInputKey;	// 360 = 0x168
    int _preferredTrackingChangeCount;	// 368 = 0x170
    int _shiftTrackingChangeCount;	// 372 = 0x174
    NSMutableSet *_accentInfo;	// 376 = 0x178
    NSMutableSet *_hasAccents;	// 384 = 0x180
    id _spaceTarget;	// 392 = 0x188
    SEL _spaceAction;	// 400 = 0x190
    SEL _spaceLongAction;	// 408 = 0x198
    id _returnTarget;	// 416 = 0x1a0
    SEL _returnAction;	// 424 = 0x1a8
    SEL _returnLongAction;	// 432 = 0x1b0
    id _deleteTarget;	// 440 = 0x1b8
    SEL _deleteAction;	// 448 = 0x1c0
    SEL _deleteLongAction;	// 456 = 0x1c8
    _Bool _shift;	// 464 = 0x1d0
    _Bool _autoshift;	// 465 = 0x1d1
    _Bool _settingShift;	// 466 = 0x1d2
    _Bool _holdingShift;	// 467 = 0x1d3
    _Bool _didLongPress;	// 468 = 0x1d4
    NSString *_preTouchKeyplaneName;	// 472 = 0x1d8
    _Bool _revertKeyplaneAfterTouch;	// 480 = 0x1e0
    _Bool _wasShifted;	// 481 = 0x1e1
    _Bool _swipeDetected;	// 482 = 0x1e2
    _Bool _showIntlKey;	// 483 = 0x1e3
    _Bool _showDictationKey;	// 484 = 0x1e4
    _Bool _suppressDeactivateKeys;	// 485 = 0x1e5
    _Bool _suppressShiftKeyplaneAnimation;	// 486 = 0x1e6
    _Bool _isTrackpadMode;	// 487 = 0x1e7
    _Bool _shiftLockReady;	// 488 = 0x1e8
    double _shiftLockFirstTapTime;	// 496 = 0x1f0
    UISwipeGestureRecognizer *_rightSwipeRecognizer;	// 504 = 0x1f8
    UISwipeGestureRecognizer *_leftSwipeRecognizer;	// 512 = 0x200
    UISwipeGestureRecognizer *_upSwipeRecognizer;	// 520 = 0x208
    UIKeyboardPinchGestureRecognizer *_pinchGestureRecognizer;	// 528 = 0x210
    UIKeyboardSplitTransitionView *_transitionView;	// 536 = 0x218
    double _initialSplitProgress;	// 544 = 0x220
    double _finalSplitProgress;	// 552 = 0x228
    double _autoSplitLastUpdate;	// 560 = 0x230
    double _autoSplitElapsedTime;	// 568 = 0x238
    CADisplayLink *_displayLink;	// 576 = 0x240
    _Bool _ghostKeysEnabled;	// 584 = 0x248
    UIDelayedAction *_delayedCentroidUpdate;	// 592 = 0x250
    _Bool _isRebuilding;	// 600 = 0x258
    long long _currentHandBias;	// 608 = 0x260
    NSString *_layoutTag;	// 616 = 0x268
    _Bool _preRotateShift;	// 624 = 0x270
    NSString *_preRotateKeyplaneName;	// 632 = 0x278
    _Bool _preRotateTrackpadMode;	// 640 = 0x280
    UIDelayedAction *_multitapAction;	// 648 = 0x288
    _Bool _unshiftAfterMultitap;	// 656 = 0x290
    int _multitapCount;	// 660 = 0x294
    UIKBTree *_multitapKey;	// 664 = 0x298
    UIView *_flickPopupView;	// 672 = 0x2a0
    NSMutableDictionary *_compositeImages;	// 680 = 0x2a8
    NSTimer *_flickPopuptimer;	// 688 = 0x2b0
    id _touchInfo;	// 696 = 0x2b8
    UIView *_dimKeyboardImageView;	// 704 = 0x2c0
    _Bool _keyboardImageViewIsDim;	// 712 = 0x2c8
    _Bool _isOutOfBounds;	// 713 = 0x2c9
    _Bool _inDealloc;	// 714 = 0x2ca
    NSMutableSet *_keysUnderIndicator;	// 720 = 0x2d0
    _UIKeyboardTypingSpeedLogger *_typingSpeedLogger;	// 728 = 0x2d8
    UIKBRenderConfig *_passcodeRenderConfig;	// 736 = 0x2e0
    long long _setKeyplaneViewCount;	// 744 = 0x2e8
    _Bool _inputTraitsPreventInitialReuse;	// 752 = 0x2f0
    _Bool _settingFloat;	// 753 = 0x2f1
    NSMutableSet *_leftKeySet;	// 760 = 0x2f8
    NSMutableSet *_rightKeySet;	// 768 = 0x300
    struct CGPoint _leftDriftOffset;	// 776 = 0x308
    struct CGPoint _rightDriftOffset;	// 792 = 0x318
    NSMutableArray *_leftSideReachability;	// 808 = 0x328
    NSMutableArray *_rightSideReachability;	// 816 = 0x330
    NSNumber *_homeRowHint;	// 824 = 0x338
    double _touchDownTimeSpan;	// 832 = 0x340
    NSDate *_prevTouchMoreKeyTime;	// 840 = 0x348
    NSDate *_prevProgressiveCandidateRequestTime;	// 848 = 0x350
    NSTimer *_progressiveCandidateUpdateTimer;	// 856 = 0x358
    NSString *_lastInputMode;	// 864 = 0x360
    _Bool _pendingDictationReload;	// 872 = 0x368
    _Bool _hasPeekedGestureKey;	// 873 = 0x369
    _Bool _lastInputIsGestureKey;	// 874 = 0x36a
    UIGestureKeyboardIntroduction *_gestureKeyboardIntroduction;	// 880 = 0x370
    _Bool _dictationUsingServerManualEndpointing;	// 888 = 0x378
    _Bool _splitTransitionNeedsRebuild;	// 889 = 0x379
    NSMutableDictionary *_extendedTouchInfoMap;	// 896 = 0x380
    UIKBResizingKeyplaneCoordinator *_resizingKeyplaneCoordinator;	// 904 = 0x388
    UIButton *_biasEscapeButton;	// 912 = 0x390
    NSLayoutConstraint *_biasEscapeButtonLeftConstraint;	// 920 = 0x398
    NSLayoutConstraint *_biasEscapeButtonRightConstraint;	// 928 = 0x3a0
    NSMutableSet *_keyplaneTransformations;	// 936 = 0x3a8
    UIImageView *_pathEffectGlowView;	// 944 = 0x3b0
    UIKeyboardPathEffectView *_pathEffectView;	// 952 = 0x3b8
    NSArray *_pathEffectViewConstraints;	// 960 = 0x3c0
    _Bool _isContinuousPathUnderway;	// 968 = 0x3c8
    UIView *_keyplaneTransformationAreaView;	// 976 = 0x3d0
    _Bool _externalDictationAndInternationalKeys;	// 984 = 0x3d8
    _Bool _showsPunctuationKeysOnPrimaryKeyplane;	// 985 = 0x3d9
    TUIKeyplaneView *_liveKeyplaneView;	// 992 = 0x3e0
    _Bool _layoutSupportsCrescendo;	// 1000 = 0x3e8
    NSArray *_liveKeyplaneConstraints;	// 1008 = 0x3f0
    _Bool _preventPaddlesForPointerTouches;	// 1016 = 0x3f8
    _Bool _muteNextKeyClickSound;	// 1017 = 0x3f9
    int playKeyClickSoundOn;	// 1020 = 0x3fc
    UIKBRenderConfig *_renderConfig;	// 1024 = 0x400
    UIView *_modalDisplayView;	// 1032 = 0x408
    id <UIKeyboardLayoutStarDelegate> _delegate;	// 1040 = 0x410
    double _lastTwoFingerTapTimestamp;	// 1048 = 0x418
    id <UITextCursorAssertion> _blinkAssertion;	// 1056 = 0x420
    id <UIKeyboardKeyplaneTransitionDelegate> _splitKeyplaneTransitionDelegate;	// 1064 = 0x428
}

+ (id)sharedPunctuationCharacterSet;	// IMP=0x001000000097b384
+ (id)sharedRivenKeyplaneGenerator;	// IMP=0x0010000000959303
+ (struct CGSize)keyboardSizeForInputMode:(id)arg1 screenTraits:(id)arg2 keyboardType:(long long)arg3;	// IMP=0x0010000000953ac4
+ (id)keyboardWithName:(id)arg1 screenTraits:(id)arg2;	// IMP=0x0010000000953802
+ (id)keyboardFromFactoryWithName:(id)arg1 screenTraits:(id)arg2;	// IMP=0x001000000095353c
+ (void)accessibilitySensitivityChanged;	// IMP=0x0010000000952c42
+ (Class)_subclassForScreenTraits:(id)arg1;	// IMP=0x001000000095267d
- (void).cxx_destruct;	// IMP=0x000000000098dbf1
@property(nonatomic) __weak id <UIKeyboardKeyplaneTransitionDelegate> splitKeyplaneTransitionDelegate; // @synthesize splitKeyplaneTransitionDelegate=_splitKeyplaneTransitionDelegate;
@property(retain, nonatomic) id <UITextCursorAssertion> blinkAssertion; // @synthesize blinkAssertion=_blinkAssertion;
@property(nonatomic) _Bool muteNextKeyClickSound; // @synthesize muteNextKeyClickSound=_muteNextKeyClickSound;
@property(nonatomic) _Bool preventPaddlesForPointerTouches; // @synthesize preventPaddlesForPointerTouches=_preventPaddlesForPointerTouches;
@property(nonatomic) double lastTwoFingerTapTimestamp; // @synthesize lastTwoFingerTapTimestamp=_lastTwoFingerTapTimestamp;
@property(nonatomic) id <UIKeyboardLayoutStarDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIView *modalDisplayView; // @synthesize modalDisplayView=_modalDisplayView;
@property(retain, nonatomic) UIKBRenderConfig *renderConfig; // @synthesize renderConfig=_renderConfig;
@property(copy, nonatomic) NSString *preTouchKeyplaneName; // @synthesize preTouchKeyplaneName=_preTouchKeyplaneName;
@property(nonatomic) int playKeyClickSoundOn; // @synthesize playKeyClickSoundOn;
@property(copy, nonatomic) NSString *localizedInputKey; // @synthesize localizedInputKey=_localizedInputKey;
@property(readonly, nonatomic) _Bool showsDictationKey; // @synthesize showsDictationKey=_showDictationKey;
@property(readonly, nonatomic) _Bool showsInternationalKey; // @synthesize showsInternationalKey=_showIntlKey;
@property(nonatomic) _Bool didLongPress; // @synthesize didLongPress=_didLongPress;
@property(nonatomic) _Bool autoShift; // @synthesize autoShift=_autoshift;
@property(nonatomic) _Bool shift; // @synthesize shift=_shift;
@property(retain, nonatomic) UIKBTree *activeKey; // @synthesize activeKey=_activeKey;
@property(copy, nonatomic) NSString *keyplaneName; // @synthesize keyplaneName=_keyplaneName;
@property(copy, nonatomic) NSString *keyboardName; // @synthesize keyboardName=_keyboardName;
@property(readonly, nonatomic) UIKBTree *keyplane; // @synthesize keyplane=_keyplane;
@property(readonly, nonatomic) UIKBTree *keyboard; // @synthesize keyboard=_keyboard;
- (void)typingStyleEstimator:(id)arg1 didChangeTypingStyleEstimate:(unsigned long long)arg2;	// IMP=0x000000000098d86f
- (void)triggerSpaceKeyplaneSwitchIfNecessary;	// IMP=0x000000000098d730
- (_Bool)is10KeyRendering;	// IMP=0x000000000098d6b8
- (_Bool)isEmojiKeyplane;	// IMP=0x000000000098d673
- (_Bool)keyplaneContainsEmojiKey;	// IMP=0x000000000098d5f2
- (_Bool)keyplaneContainsDismissKey;	// IMP=0x000000000098d5ad
- (void)updateGlobeKeyAndLayoutOriginBeforeSnapshotForInputView:(id)arg1;	// IMP=0x000000000098d43f
- (id)currentKeyplaneView;	// IMP=0x000000000098d42a
- (id)currentKeyplane;	// IMP=0x000000000098d415
- (void)fadeWithInvocation:(id)arg1;	// IMP=0x000000000098d2ec
- (id)simulateTouchForCharacter:(id)arg1 errorVector:(struct CGPoint)arg2 shouldTypeVariants:(_Bool)arg3 baseKeyForVariants:(_Bool)arg4;	// IMP=0x000000000098cf82
- (id)simulateTouch:(struct CGPoint)arg1;	// IMP=0x000000000098cdee
- (struct CGPoint)applyError:(struct CGPoint)arg1 toKey:(id)arg2;	// IMP=0x000000000098cba6
- (void)switchKeyplane:(id)arg1;	// IMP=0x000000000098cada
- (void)changeToKeyplane:(id)arg1;	// IMP=0x000000000098ca0c
- (id)keyplaneNamed:(id)arg1;	// IMP=0x000000000098c989
- (id)keyplaneForKey:(id)arg1;	// IMP=0x000000000098c906
- (id)baseKeyForString:(id)arg1;	// IMP=0x000000000098c06c
- (_Bool)shouldRetestKey:(id)arg1 slidOffKey:(id)arg2 withKeyplane:(id)arg3;	// IMP=0x000000000098bf92
- (_Bool)shouldRetestTouchDraggedFromKey:(id)arg1;	// IMP=0x000000000098bf7d
- (void)didRotate;	// IMP=0x000000000098bd84
- (void)willRotate;	// IMP=0x000000000098bc7b
- (void)updateKeyCentroids;	// IMP=0x000000000098b30d
- (void)divideKeysIntoLeft:(id)arg1 right:(id)arg2;	// IMP=0x000000000098ac62
- (_Bool)isShiftKeyBeingHeld;	// IMP=0x000000000098ac39
- (void)setAutoshift:(_Bool)arg1;	// IMP=0x000000000098abfb
- (void)updateUndoKeyState;	// IMP=0x000000000098ab21
- (void)setMultitapReverseKeyState;	// IMP=0x000000000098a97f
- (void)updateShiftKeyState;	// IMP=0x000000000098a11a
- (int)stateForShiftKey:(id)arg1;	// IMP=0x0000000000989e7f
- (_Bool)diacriticForwardCompose;	// IMP=0x0000000000989e58
- (_Bool)supportsContinuousPath;	// IMP=0x0000000000989e31
- (_Bool)isKanaPlane;	// IMP=0x0000000000989e14
- (_Bool)isAlphabeticPlane;	// IMP=0x0000000000989ded
- (_Bool)ignoresShiftState;	// IMP=0x0000000000989dc6
- (_Bool)usesAutoShift;	// IMP=0x0000000000989d9f
- (void)upActionShift;	// IMP=0x0000000000989c81
- (void)downActionShiftWithKey:(id)arg1;	// IMP=0x0000000000989967
- (void)refreshDualStringKeys;	// IMP=0x00000000009897d0
- (unsigned long long)upActionFlagsForKey:(id)arg1;	// IMP=0x000000000098941c
- (unsigned long long)downActionFlagsForKey:(id)arg1;	// IMP=0x0000000000988e8d
- (_Bool)keyHasAccentedVariants:(id)arg1;	// IMP=0x0000000000988a55
- (_Bool)hasActiveContinuousPathInput;	// IMP=0x00000000009888a7
- (id)activeTouchInfoForShift;	// IMP=0x000000000098867c
- (id)touchInfoForKey:(id)arg1;	// IMP=0x0000000000988488
- (void)clearAllTouchInfo;	// IMP=0x000000000098832d
- (void)clearInfoForTouch:(id)arg1 forResting:(_Bool)arg2;	// IMP=0x000000000098824e
- (void)clearInfoForTouch:(id)arg1;	// IMP=0x000000000098823a
- (void)cancelTouchIfNecessaryForInfo:(id)arg1 forResting:(_Bool)arg2;	// IMP=0x0000000000987f3e
- (id)generateInfoForTouch:(id)arg1;	// IMP=0x0000000000987e65
- (id)infoForTouch:(id)arg1;	// IMP=0x0000000000987e03
- (id)infoForTouchUUID:(id)arg1;	// IMP=0x0000000000987dca
- (void)swipeDetected:(id)arg1;	// IMP=0x0000000000987d1a
- (void)uninstallGestureRecognizers;	// IMP=0x0000000000987b7b
- (void)installGestureRecognizers;	// IMP=0x0000000000987b75
- (void)_gestureRecognizerFailed:(id)arg1;	// IMP=0x0000000000987b4e
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x0000000000987a81
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x0000000000987947
- (void)touchChanged:(id)arg1 executionContext:(id)arg2;	// IMP=0x00000000009877e8
- (void)touchCancelled:(id)arg1 forResting:(_Bool)arg2 executionContext:(id)arg3;	// IMP=0x000000000098732f
- (void)touchCancelled:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000987318
- (void)continueFromInternationalActionForTouchUp:(id)arg1 withActions:(unsigned long long)arg2 timestamp:(double)arg3 interval:(double)arg4 didLongPress:(_Bool)arg5 prevActions:(unsigned long long)arg6 executionContext:(id)arg7;	// IMP=0x00000000009862ec
- (void)completeSendStringActionForTouchUp:(id)arg1 withActions:(unsigned long long)arg2 timestamp:(double)arg3 interval:(double)arg4 didLongPress:(_Bool)arg5 prevActions:(unsigned long long)arg6 executionContext:(id)arg7;	// IMP=0x000000000098525a
- (_Bool)shouldSendStringForFlick:(id)arg1;	// IMP=0x00000000009850bd
- (_Bool)shouldYieldToControlCenterForFlickWithInitialPoint:(struct CGPoint)arg1 finalPoint:(struct CGPoint)arg2;	// IMP=0x0000000000984faf
- (void)presentModalDisplayForKey:(id)arg1;	// IMP=0x0000000000984ce7
- (void)completeRetestForTouchUp:(id)arg1 timestamp:(double)arg2 interval:(double)arg3 executionContext:(id)arg4;	// IMP=0x000000000098217e
- (void)_recordKeystrokeStatisticForKeyPress;	// IMP=0x0000000000982121
- (_Bool)shouldSendTouchUpToInputManager:(id)arg1;	// IMP=0x0000000000981ffd
- (void)handleKeyboardMenusForTouch:(id)arg1;	// IMP=0x0000000000981c17
- (void)touchUp:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000980f00
- (_Bool)shouldRetestTouchUp:(id)arg1;	// IMP=0x00000000009809b3
- (void)handleDelayedCentroidUpdate;	// IMP=0x0000000000980833
- (void)cancelDelayedCentroidUpdate;	// IMP=0x00000000009807fb
- (void)refreshGhostKeyState;	// IMP=0x0000000000980735
- (_Bool)performSpaceAction;	// IMP=0x00000000009806d4
- (_Bool)performReturnAction;	// IMP=0x0000000000980673
- (void)resetPanAlternativesForEndedTouch:(id)arg1;	// IMP=0x00000000009805e0
- (void)updatePanAlternativesForTouchInfo:(id)arg1;	// IMP=0x0000000000980227
- (void)updateSelectedVariantIndexForKey:(id)arg1 withActions:(unsigned long long)arg2 withPoint:(struct CGPoint)arg3;	// IMP=0x000000000097fe14
- (long long)defaultSelectedVariantIndexForKey:(id)arg1 withActions:(unsigned long long)arg2;	// IMP=0x000000000097fcd6
- (void)completeHitTestForTouchDragged:(id)arg1 hitKey:(id)arg2;	// IMP=0x000000000097e6ea
- (void)touchDragged:(id)arg1 executionContext:(id)arg2;	// IMP=0x000000000097d0e9
- (void)touchDragged:(id)arg1;	// IMP=0x000000000097cfda
- (_Bool)touchPassesDragThreshold:(id)arg1;	// IMP=0x000000000097cc6b
- (_Bool)canForceTouchUUIDCommit:(id)arg1 inWindow:(id)arg2;	// IMP=0x000000000097cb64
- (void)completeDeleteActionForTouchDownWithActions:(unsigned long long)arg1 executionContext:(id)arg2;	// IMP=0x000000000097ca4b
- (void)completeSendStringActionForTouchDownWithKey:(id)arg1 withActions:(unsigned long long)arg2 executionContext:(id)arg3;	// IMP=0x000000000097bca5
- (_Bool)showGestureKeyboardIntroductionIfNeeded;	// IMP=0x000000000097b9e1
- (_Bool)shouldShowGestureKeyboardIntroduction;	// IMP=0x000000000097b8ee
- (id)synthesizeTouchUpEventForKey:(id)arg1;	// IMP=0x000000000097b7c5
- (id)keyplaneNameForRevertAfterTouch;	// IMP=0x000000000097b752
- (void)completeCommitTouchesPrecedingTouchDownWithKey:(id)arg1 withActions:(unsigned long long)arg2 executionContext:(id)arg3;	// IMP=0x000000000097b526
- (void)incrementPunctuationIfNeeded:(id)arg1;	// IMP=0x000000000097b3e9
- (_Bool)shouldCommitPrecedingTouchesForTouchDownWithActions:(unsigned long long)arg1;	// IMP=0x000000000097b334
- (void)touchDownWithKey:(id)arg1 withTouchInfo:(id)arg2 atPoint:(struct CGPoint)arg3 executionContext:(id)arg4;	// IMP=0x0000000000979f55
- (void)_cleanUpBlinkAssertionIfNecessary;	// IMP=0x0000000000979efb
- (_Bool)isKeyScriptSwitchKey:(id)arg1;	// IMP=0x0000000000979e75
- (_Bool)shouldSkipResponseToGlobeKey:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x0000000000979dc3
- (void)playKeyClickSoundOnUpForKey:(id)arg1;	// IMP=0x0000000000979db1
- (void)playKeyClickSoundOnDownForKey:(id)arg1;	// IMP=0x0000000000979d66
- (void)playKeyClickSoundForKey:(id)arg1;	// IMP=0x0000000000979c7d
- (void)playKeyReleaseSoundForKey:(id)arg1;	// IMP=0x0000000000979c77
- (void)completeHitTestForTouchDown:(id)arg1 executionContext:(id)arg2;	// IMP=0x000000000097956c
- (void)touchDown:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000978cce
- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;	// IMP=0x000000000097872f
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x00000000009786df
- (_Bool)_pointAllowedInStaticHitBuffer:(struct CGPoint)arg1;	// IMP=0x0000000000978429
- (double)hitBuffer;	// IMP=0x0000000000978398
- (struct CGRect)_paddedKeyUnionFrame;	// IMP=0x00000000009780ce
- (_Bool)_handleTouchForEmojiInputView;	// IMP=0x0000000000977fbe
- (void)prepareForFloatingTransition:(_Bool)arg1;	// IMP=0x0000000000977ed5
- (void)setSplit:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000977d25
- (void)_autoSplit:(id)arg1;	// IMP=0x0000000000977be3
- (void)setSplitProgress:(double)arg1;	// IMP=0x0000000000977a76
- (void)pinchHandler:(id)arg1;	// IMP=0x00000000009779e0
- (void)pinchDidConsumeTouch:(id)arg1;	// IMP=0x000000000097793d
- (void)didDetectPinchWithSeparation:(double)arg1;	// IMP=0x0000000000977898
- (_Bool)pinchCanBeginWithTouches:(id)arg1 andScale:(double)arg2;	// IMP=0x000000000097759f
- (_Bool)pinchSplitGestureEnabled;	// IMP=0x000000000097755c
- (_Bool)pinchDetected;	// IMP=0x000000000097753f
- (void)finishSplitTransitionWithProgress:(double)arg1;	// IMP=0x0000000000977521
- (void)finishSplitTransitionWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000097724e
- (void)finishSplitTransition;	// IMP=0x000000000097723a
- (void)finishSplitWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000976df1
- (void)showSplitTransitionView:(_Bool)arg1;	// IMP=0x0000000000976c43
- (void)prepareForSplitTransition;	// IMP=0x0000000000976af8
- (id)splitTransitionDelegate;	// IMP=0x00000000009769f2
- (id)hostViewForResizingKeyplane:(id)arg1;	// IMP=0x00000000009769e9
- (void)resizeKeyplaneAndRedraw:(_Bool)arg1;	// IMP=0x00000000009764a7
- (_Bool)keyplaneSupportsResizingGesture;	// IMP=0x000000000097646e
- (_Bool)keyplaneUsesResizingOffset;	// IMP=0x0000000000976358
- (void)_didTapBiasEscapeButton:(id)arg1;	// IMP=0x00000000009762ab
- (void)_setBiasEscapeButtonVisible:(_Bool)arg1;	// IMP=0x0000000000975b81
- (void)setKeyboardBias:(long long)arg1;	// IMP=0x0000000000975a69
- (long long)currentHandBias;	// IMP=0x00000000009759ab
- (double)biasedKeyboardWidthRatio;	// IMP=0x000000000097592c
- (void)calculateReachabilityScoreWithKey:(id)arg1 keyError:(struct CGPoint)arg2;	// IMP=0x000000000097536f
- (void)resetHRRLayoutState;	// IMP=0x000000000097532e
- (void)setNeedsVirtualDriftUpdate;	// IMP=0x00000000009752d9
- (_Bool)_handRestRecognizerCancelShouldBeEnd;	// IMP=0x00000000009752bc
- (id)getHorizontalOffsetFromHomeRowForRowRelativeToHomeRow:(long long)arg1;	// IMP=0x0000000000974ed5
- (struct CGPoint)getCenterForKeyUnderRightIndexFinger;	// IMP=0x0000000000974d80
- (struct CGPoint)getCenterForKeyUnderLeftIndexFinger;	// IMP=0x0000000000974c2b
- (void)handRestRecognizerNotifyRestForBegin:(_Bool)arg1 location:(struct CGPoint)arg2 timestamp:(double)arg3 pathIndex:(int)arg4 touchUUID:(id)arg5 context:(id)arg6;	// IMP=0x0000000000974ae5
- (CDUnknownBlockType)handRestRecognizerSilenceNextTouchDown;	// IMP=0x0000000000974acb
- (struct CGSize)handRestRecognizerStandardKeyPixelSize;	// IMP=0x0000000000974881
- (id)handRestRecognizerGetHomeRowHint;	// IMP=0x00000000009746bb
- (id)getSortedKeysForDisplayRowHint:(int)arg1;	// IMP=0x00000000009743cc
- (_Bool)handRestRecognizerShouldNeverIgnoreTouchState:(id)arg1 fromPoint:(struct CGPoint)arg2 toPoint:(struct CGPoint)arg3 forRestingState:(unsigned long long)arg4 otherRestedTouchLocations:(id)arg5;	// IMP=0x0000000000973f05
- (unsigned char)getHandRestRecognizerState;	// IMP=0x0000000000973caf
- (void)layoutSubviews;	// IMP=0x0000000000973c3a
- (unsigned long long)targetEdgesForScreenGestureRecognition;	// IMP=0x0000000000973c09
- (_Bool)shouldDeactivateWithoutWindow;	// IMP=0x0000000000973c01
- (void)fadeActivationIndicatorWithDuration:(double)arg1 withDelay:(double)arg2;	// IMP=0x0000000000973bfb
- (id)activationIndicatorView;	// IMP=0x0000000000971e07
- (void)setHideKeysUnderIndicator:(_Bool)arg1;	// IMP=0x0000000000971d58
- (_Bool)shouldShowIndicator;	// IMP=0x0000000000971ce6
- (void)showPopupVariantsForKey:(id)arg1;	// IMP=0x00000000009701e1
- (void)preparePopupVariantsForKey:(id)arg1 onKeyplane:(id)arg2;	// IMP=0x00000000009700f0
- (id)_variantsOfCurrencyKey:(id)arg1 language:(id)arg2;	// IMP=0x000000000096fe4d
- (id)_variantsByAppendingDualStringKey:(id)arg1 toVariants:(id)arg2;	// IMP=0x000000000096fab0
- (id)_appendingSecondaryStringToVariantsTop:(id)arg1 secondaryString:(id)arg2 withDirection:(id)arg3;	// IMP=0x000000000096f9c9
- (id)_keyplaneVariantsKeyForString:(id)arg1;	// IMP=0x000000000096f935
- (id)_keyboardLongPressInteractionRegions;	// IMP=0x000000000096f67b
- (void)longPressAction;	// IMP=0x000000000096e82f
- (void)showMenu:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000096e760
- (_Bool)shouldShowInternationalMenuForKey:(id)arg1;	// IMP=0x000000000096e6ee
- (_Bool)isLongPressedKey:(id)arg1;	// IMP=0x000000000096e641
- (_Bool)isShiftKeyPlaneChooser;	// IMP=0x000000000096e4d1
- (void)restoreDefaultsForAllKeys;	// IMP=0x000000000096e487
- (void)restoreDefaultsForKey:(id)arg1;	// IMP=0x000000000096e3bf
- (void)setLongPressAction:(SEL)arg1 forKey:(id)arg2;	// IMP=0x000000000096e38a
- (void)setAction:(SEL)arg1 forKey:(id)arg2;	// IMP=0x000000000096e355
- (void)setTarget:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000096e2cc
- (void)setLabel:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000096dbca
- (void)updateLayoutTags;	// IMP=0x000000000096d49c
@property(retain, nonatomic) NSString *layoutTag; // @synthesize layoutTag=_layoutTag;
- (void)didClearInput;	// IMP=0x000000000096d3e5
- (void)touchMultitapTimer;	// IMP=0x000000000096d305
- (void)cancelMultitapTimer;	// IMP=0x000000000096d2cd
- (_Bool)isMultitapKey:(id)arg1;	// IMP=0x000000000096d1f2
- (void)handleMultitapTimerFired;	// IMP=0x000000000096d072
- (void)multitapExpired;	// IMP=0x000000000096d020
- (void)endMultitapForKey:(id)arg1;	// IMP=0x000000000096cfff
- (void)multitapInterrupted;	// IMP=0x000000000096ce09
- (_Bool)canMultitap;	// IMP=0x000000000096cd5e
- (id)multitapForwardKeys;	// IMP=0x000000000096cd3a
- (id)multitapCompleteKeys;	// IMP=0x000000000096cd16
- (id)activeMultitapCompleteKey;	// IMP=0x000000000096c9d9
- (_Bool)hasAccentKey;	// IMP=0x000000000096c994
- (_Bool)hasCandidateKeys;	// IMP=0x000000000096c94f
- (id)candidateList;	// IMP=0x000000000096c895
- (void)logHandwritingData;	// IMP=0x000000000096c7c7
- (void)deleteHandwritingStrokesAtIndexes:(id)arg1;	// IMP=0x000000000096c6e2
- (void)clearHandwritingStrokesIfNeededAndNotify:(_Bool)arg1;	// IMP=0x000000000096c5fd
- (id)createKeyEventForStringAction:(id)arg1 forKey:(id)arg2 inputFlags:(int)arg3;	// IMP=0x000000000096bfad
- (id)createKeyEventForStringAction:(id)arg1 forKey:(id)arg2 touchInfo:(id)arg3 inputFlags:(int)arg4;	// IMP=0x000000000096bedb
- (id)currentRepresentedStringForDualDisplayKey:(id)arg1;	// IMP=0x000000000096bd44
- (void)updatePhysicalKeyboardEvent:(id)arg1 withMarkedInput:(id)arg2;	// IMP=0x000000000096ba57
- (_Bool)isDeadkeyInput:(id)arg1;	// IMP=0x000000000096b9ea
- (void)performHitTestForTouchInfo:(id)arg1 touchStage:(int)arg2 executionContextPassingUIKBTree:(id)arg3;	// IMP=0x000000000096ae13
- (void)playKeyFeedbackIfNecessaryForTouchDownOnKey:(id)arg1 touchInfo:(id)arg2;	// IMP=0x000000000096acf7
- (id)unprocessedTouchEventsForTouchInfo:(id)arg1 touchStage:(int)arg2 forcedKeyCode:(int)arg3;	// IMP=0x000000000096a990
- (int)keycodeForKey:(id)arg1;	// IMP=0x000000000096a911
- (_Bool)shouldIgnoreDistantKey;	// IMP=0x000000000096a87e
- (_Bool)shouldPreventInputManagerHitTestingForKey:(id)arg1;	// IMP=0x000000000096a869
- (_Bool)isGeometricShiftOrMoreKeyForTouch:(id)arg1;	// IMP=0x000000000096a761
- (id)keyHitTest:(struct CGPoint)arg1;	// IMP=0x000000000096a6da
- (id)keyHitTestWithoutCharging:(struct CGPoint)arg1;	// IMP=0x000000000096a5bb
- (id)keyHitTestClosestToPoint:(struct CGPoint)arg1 inKeys:(id)arg2;	// IMP=0x000000000096a2d2
- (id)keyHitTestClosestToPoint:(struct CGPoint)arg1;	// IMP=0x000000000096a251
- (id)keyHitTestContainingPoint:(struct CGPoint)arg1;	// IMP=0x000000000096a061
- (id)keyViewHitTestForPoint:(struct CGPoint)arg1;	// IMP=0x0000000000969e04
- (_Bool)shouldHitTestKey:(id)arg1;	// IMP=0x0000000000969d8b
- (void)finishSliderBehaviorFeedback;	// IMP=0x0000000000969d85
- (void)provideSliderBehaviorFeedback;	// IMP=0x0000000000969d7f
- (void)prepareSliderBehaviorFeedback;	// IMP=0x0000000000969d79
- (_Bool)isTrackpadMode;	// IMP=0x0000000000969d69
- (void)deactivateActiveKey;	// IMP=0x0000000000969cd7
- (void)deactivateActiveKeys;	// IMP=0x0000000000969c45
- (void)deactivateActiveKeysClearingTouchInfo:(_Bool)arg1 clearingDimming:(_Bool)arg2;	// IMP=0x0000000000969a61
- (void)cleanupPreviousKeyboardWithNewInputTraits:(id)arg1;	// IMP=0x00000000009699c3
- (id)initialKeyplaneNameWithKBStarName:(id)arg1;	// IMP=0x00000000009694a1
- (_Bool)shouldUseDefaultShiftStateFromLayout;	// IMP=0x0000000000969499
- (void)setToInitialKeyplane;	// IMP=0x000000000096941d
- (void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;	// IMP=0x00000000009693f6
- (void)reloadKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;	// IMP=0x00000000009693cf
- (void)showKeyboardWithInputMode:(id)arg1 renderConfig:(id)arg2 inputTraits:(id)arg3 screenTraits:(id)arg4 splitTraits:(id)arg5 reload:(_Bool)arg6;	// IMP=0x0000000000968f61
- (void)showKeyboardWithInputMode:(id)arg1 renderConfig:(id)arg2 inputTraits:(id)arg3 screenTraits:(id)arg4 splitTraits:(id)arg5;	// IMP=0x0000000000968f45
- (_Bool)_shouldInheritScreenScaleAsContentScaleFactor;	// IMP=0x0000000000968f3d
- (void)updateCachedKeyplaneKeycaps;	// IMP=0x0000000000968c8d
- (id)cacheTokenForKeyplane:(id)arg1 caseAlternates:(_Bool)arg2;	// IMP=0x00000000009689fe
- (id)cacheIdentifierForKeyplaneNamed:(id)arg1;	// IMP=0x0000000000968926
@property(readonly, nonatomic) UIKeyboardEmojiKeyDisplayController *emojiKeyManager; // @synthesize emojiKeyManager=_emojiKeyManager;
- (id)keyViewAnimator;	// IMP=0x0000000000968887
- (void)updateState:(int)arg1 forKey:(id)arg2;	// IMP=0x0000000000968823
- (void)setState:(int)arg1 forKey:(id)arg2;	// IMP=0x0000000000968709
- (int)stateForKey:(id)arg1;	// IMP=0x000000000096869a
- (id)viewForKey:(id)arg1;	// IMP=0x000000000096861d
- (id)keyplaneFactory;	// IMP=0x00000000009685c9
- (void)refreshForDictationAvailablityDidChange;	// IMP=0x0000000000968470
- (_Bool)shouldMergeKey:(id)arg1;	// IMP=0x0000000000968053
- (id)inputModeToMergeCapsLockKey;	// IMP=0x0000000000967fe2
- (_Bool)canAddRomanSwitchKey;	// IMP=0x0000000000967ecb
- (void)relayoutForWriteboardKey;	// IMP=0x0000000000967cfe
- (void)transitionToModalContinuousPathKeyplane;	// IMP=0x0000000000967bd1
- (void)updateReturnKeysIfNeeded;	// IMP=0x0000000000967b08
- (void)updateMoreAndInternationalKeys;	// IMP=0x000000000096720d
- (void)recenterMonolithKeyplaneSwitchKeys;	// IMP=0x0000000000966fdb
- (void)_transformCarPlayIfNecessary;	// IMP=0x0000000000966ede
- (void)_transformFloatingKeyboardIfNecessary;	// IMP=0x0000000000966df1
- (void)_addResizeTransformationIfNecessary;	// IMP=0x0000000000966d04
- (void)_addExtraControlKeysIfNecessary;	// IMP=0x0000000000966c17
- (id)_currentKeyplaneTransformationContext;	// IMP=0x0000000000966ae7
- (_Bool)_shouldAttemptToAddSupplementaryControlKeys;	// IMP=0x0000000000966915
- (void)_updateSupplementaryKeys;	// IMP=0x00000000009664f6
- (void)_swapGlobeAndMoreKeysIfNecessary;	// IMP=0x000000000096607c
- (_Bool)_shouldSwapGlobeAndMore;	// IMP=0x0000000000965d84
- (void)mergeKeysIfNeeded;	// IMP=0x0000000000965cb1
- (id)keylistContainingKey:(id)arg1;	// IMP=0x0000000000965979
- (int)stateForKeyplaneSwitchKey:(id)arg1;	// IMP=0x0000000000965748
- (void)setTextEditingTraits:(id)arg1;	// IMP=0x00000000009651a6
- (unsigned long long)textEditingKeyMask;	// IMP=0x0000000000964f95
- (int)stateForManipulationKey:(id)arg1;	// IMP=0x0000000000964d2b
- (id)highlightedVariantListForStylingKey:(id)arg1;	// IMP=0x0000000000964c3c
- (int)stateForStylingKey:(id)arg1;	// IMP=0x0000000000964b29
- (_Bool)supportStylingWithKey:(id)arg1;	// IMP=0x0000000000964a03
- (int)stateForDictationKey:(id)arg1;	// IMP=0x0000000000964845
- (int)stateForCandidateListKey:(id)arg1;	// IMP=0x000000000096483a
- (int)stateForMultitapForwardKey:(id)arg1;	// IMP=0x0000000000964828
- (int)stateForMultitapReverseKey:(id)arg1;	// IMP=0x000000000096473c
- (int)displayTypeHintForShiftKey;	// IMP=0x00000000009646ac
- (int)displayTypeHintForMoreKey;	// IMP=0x00000000009645fb
- (void)setPercentSignKeysForCurrentLocaleOnKeyplane:(id)arg1;	// IMP=0x0000000000963e55
- (void)setCurrencyKeysForCurrentLocaleOnKeyplane:(id)arg1;	// IMP=0x00000000009637ea
- (void)updateCurrencySymbolForKey:(id)arg1 withCurrencyString:(id)arg2;	// IMP=0x0000000000963555
- (_Bool)_stringContainsCurrencyCharacters:(id)arg1;	// IMP=0x000000000096337f
- (void)_setReturnKeyEnabled:(_Bool)arg1 withDisplayName:(id)arg2 withType:(int)arg3;	// IMP=0x0000000000962fc0
- (void)setReturnKeyEnabled:(_Bool)arg1 withDisplayName:(id)arg2 withType:(int)arg3;	// IMP=0x0000000000962eed
- (void)updateTransitionWithFlags:(unsigned long long)arg1;	// IMP=0x0000000000962e65
- (void)clearKeyAnnotationsIfNecessary;	// IMP=0x0000000000962a6b
- (void)annotateWriteboardDisplayTypeHintForKeyIfNeeded;	// IMP=0x0000000000962726
- (_Bool)useUndoForMessagesWriteboard;	// IMP=0x000000000096269c
- (_Bool)useDismissForMessagesWriteboard;	// IMP=0x000000000096223d
- (_Bool)ignoreWriteboard;	// IMP=0x00000000009621b9
- (void)annotateKeysWithDeveloperPunctuation;	// IMP=0x0000000000961be8
- (void)updateStateForKey:(id)arg1;	// IMP=0x0000000000961759
- (void)updateAllKeyStates;	// IMP=0x0000000000961280
- (void)createLayoutFromName:(id)arg1;	// IMP=0x000000000095c335
- (_Bool)useCrescendoLayout;	// IMP=0x000000000095c325
- (void)reloadCurrentKeyplane;	// IMP=0x000000000095c2b1
- (_Bool)_allowPaddle;	// IMP=0x000000000095c213
- (_Bool)_allowContinuousPathUI;	// IMP=0x000000000095c085
- (_Bool)shouldIgnoreContinuousPathRequirements;	// IMP=0x000000000095bfa1
- (_Bool)_allowStartingContinuousPathForTouchInfo:(id)arg1 alreadyActiveKeyExisting:(_Bool)arg2;	// IMP=0x000000000095bcea
- (unsigned long long)keyplaneShiftState;	// IMP=0x000000000095bbec
- (_Bool)shouldAllowCurrentKeyplaneReload;	// IMP=0x000000000095bb91
- (_Bool)shouldMergeAssistantBarWithKeyboardLayout;	// IMP=0x000000000095baef
- (struct CGSize)stretchFactor;	// IMP=0x000000000095b8d1
- (double)stretchFactorHeight;	// IMP=0x000000000095b737
- (_Bool)stretchKeyboardToFitKeyplane:(id)arg1;	// IMP=0x000000000095b608
- (_Bool)stretchKeyboardToFit;	// IMP=0x000000000095b5eb
- (_Bool)showsDedicatedEmojiKeyAlongsideGlobeButton;	// IMP=0x000000000095b4bc
- (_Bool)globeKeyDisplaysAsEmojiKey;	// IMP=0x000000000095afc0
- (void)updateGlobeKeyDisplayString;	// IMP=0x000000000095af2a
- (void)setTwoFingerTapTimestamp:(double)arg1;	// IMP=0x000000000095af18
- (_Bool)shouldAllowSelectionGestures:(_Bool)arg1 atPoint:(struct CGPoint)arg2 toBegin:(_Bool)arg3;	// IMP=0x000000000095aa89
- (_Bool)isResized;	// IMP=0x000000000095aa3d
- (_Bool)isResizing;	// IMP=0x000000000095aa20
- (_Bool)supportsEmoji;	// IMP=0x000000000095aa18
- (_Bool)canReuseKeyplaneView;	// IMP=0x000000000095a80f
- (_Bool)shouldShowDictationKey;	// IMP=0x000000000095a4a1
- (void)updateBackgroundIfNeeded;	// IMP=0x000000000095a270
- (void)updateBackgroundCorners;	// IMP=0x000000000095a1ce
- (_Bool)isHandwritingPlane;	// IMP=0x000000000095a123
- (void)setTrackpadMode:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000959b68
- (void)didEndTrackpadModeForServerSideDictation;	// IMP=0x0000000000959b52
- (void)willBeginTrackpadModeForServerSideDictation;	// IMP=0x0000000000959b39
- (void)didEndIndirectSelectionGesture:(_Bool)arg1;	// IMP=0x0000000000959aec
- (_Bool)isDeveloperGestureKeybaord;	// IMP=0x0000000000959a96
- (void)didEndIndirectSelectionGesture;	// IMP=0x0000000000959a7f
- (void)cancelTouchesForTwoFingerTapGesture:(id)arg1;	// IMP=0x0000000000959a34
- (void)willBeginIndirectSelectionGesture:(_Bool)arg1;	// IMP=0x00000000009599e4
- (void)willBeginIndirectSelectionGesture;	// IMP=0x00000000009599cd
- (void)setPasscodeOutlineAlpha:(double)arg1;	// IMP=0x0000000000959880
- (void)didTriggerDestructiveRenderConfigChange;	// IMP=0x000000000095980f
- (void)setRenderConfig:(id)arg1 updateKeyplane:(_Bool)arg2;	// IMP=0x000000000095955d
- (void)traitCollectionDidChange;	// IMP=0x0000000000959358
- (struct CGImage *)renderedKeyplaneWithToken:(id)arg1 split:(_Bool)arg2;	// IMP=0x0000000000959273
- (struct CGImage *)renderedImageWithToken:(id)arg1;	// IMP=0x0000000000958eef
- (struct CGImage *)renderedImageWithStateFallbacksForToken:(id)arg1;	// IMP=0x0000000000958e00
- (struct CGImage *)cachedCompositeImageWithCacheKey:(id)arg1;	// IMP=0x0000000000958ab0
- (void)rebuildSplitTransitionView;	// IMP=0x0000000000958762
- (_Bool)shouldMatchCaseForDomainKeys;	// IMP=0x000000000095875a
- (void)updateLocalizedKeysForKeyplane:(id)arg1 updateAllKeyplanes:(_Bool)arg2;	// IMP=0x000000000095844f
- (void)updateLocalizedKeys:(_Bool)arg1;	// IMP=0x0000000000958417
- (void)updateInputModeLocalizedKeysForKeyplane:(id)arg1;	// IMP=0x0000000000957898
- (void)updateLocalizedDisplayStringsForKeys:(id)arg1;	// IMP=0x0000000000956d08
- (void)updateAutolocalizedKeysForKeyplane:(id)arg1;	// IMP=0x0000000000956bcb
- (void)updateLocalizedKeysOnKeyplane:(id)arg1;	// IMP=0x000000000095637e
- (void)nextToUseInputModeDidChange:(id)arg1;	// IMP=0x00000000009562a1
- (id)internationalKeyDisplayStringOnEmojiKeyboard;	// IMP=0x0000000000956229
- (void)updateLocalizedDisplayStringOnEmojiInternationalWithKeyplane:(id)arg1 withInputMode:(id)arg2;	// IMP=0x0000000000955d94
- (_Bool)canProduceString:(id)arg1;	// IMP=0x000000000095568f
@property(readonly, nonatomic) _Bool hasActiveKeys;
- (double)lastTouchDownTimestamp;	// IMP=0x000000000095560b
- (double)lastTouchUpTimestamp;	// IMP=0x00000000009555f9
- (void)setKeyboardName:(id)arg1 appearance:(long long)arg2;	// IMP=0x00000000009551a3
- (id)keyForKeyboardName:(id)arg1 screenTraits:(id)arg2;	// IMP=0x0000000000955124
- (void)updateKeyboardForKeyplane:(id)arg1;	// IMP=0x0000000000954fc9
- (struct UIEdgeInsets)keyplanePadding;	// IMP=0x0000000000954f56
- (struct CGSize)sizeForKeyplane:(id)arg1;	// IMP=0x0000000000954c33
- (_Bool)allKeyplanesHaveSameHeight;	// IMP=0x0000000000954a2c
- (void)setKeyboardAppearance:(long long)arg1;	// IMP=0x0000000000954788
- (int)visualStyleForKeyboardIfSplit:(_Bool)arg1;	// IMP=0x00000000009546ca
- (void)refreshForRivenPreferences;	// IMP=0x000000000095452e
- (void)tearDownSplitTransitionView;	// IMP=0x000000000095448d
- (struct CGRect)frameForKeylayoutName:(id)arg1;	// IMP=0x00000000009542bf
- (struct CGRect)frameForKeylayoutName:(id)arg1 onKeyplaneName:(id)arg2;	// IMP=0x0000000000954232
- (struct CGRect)dragGestureRectInView:(id)arg1;	// IMP=0x000000000095400a
- (id)defaultKeyplaneForKeyplane:(id)arg1;	// IMP=0x0000000000953f79
- (id)splitNameForKeyplane:(id)arg1;	// IMP=0x0000000000953edb
- (id)splitNameForKeyplaneName:(id)arg1;	// IMP=0x0000000000953e84
- (id)defaultNameForKeyplaneName:(id)arg1;	// IMP=0x0000000000953e61
@property(readonly, nonatomic) NSString *localizedInputMode;
- (SEL)handlerForNotification:(id)arg1;	// IMP=0x00000000009534c9
- (void)flushKeyCache:(id)arg1;	// IMP=0x0000000000953238
- (void)removeFromSuperview;	// IMP=0x00000000009531a7
- (void)clearTransientState;	// IMP=0x00000000009530d2
- (void)clearUnusedObjects:(_Bool)arg1;	// IMP=0x0000000000952d21
- (void)willMoveToWindow:(id)arg1;	// IMP=0x0000000000952cab
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x0000000000952c5b
- (void)accessibilitySensitivityChanged;	// IMP=0x0000000000952c25
- (void)removePathEffectViewConstraintsIfNeeded;	// IMP=0x0000000000952bdc
- (void)dealloc;	// IMP=0x00000000009529ab
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x000000000095268e
@property(readonly, nonatomic, getter=isRotating) _Bool rotating;
- (void)setKeyForTouchInfo:(id)arg1 key:(id)arg2;	// IMP=0x000000000098ec22
- (id)popupKeyViews;	// IMP=0x000000000098e9b2
- (struct CGRect)frameForLastKeyWithRepresentedString:(id)arg1;	// IMP=0x000000000098e762
- (struct CGRect)frameForKeyWithRepresentedString:(id)arg1;	// IMP=0x000000000098e2c0
- (id)keyWithRepresentedString:(id)arg1;	// IMP=0x000000000098e060
- (id)keyplaneView:(id)arg1 containingViewForActiveKey:(id)arg2;	// IMP=0x00000000009907c4
- (void)_didChangeKeyplaneWithContext:(id)arg1;	// IMP=0x000000000099073e
- (void)showPopupView:(long long)arg1 withKey:(id)arg2 popupInfo:(id)arg3 force:(_Bool)arg4;	// IMP=0x0000000000990668
- (void)setKeyboardDim:(_Bool)arg1;	// IMP=0x000000000099043b
- (void)setPreferredHeight:(double)arg1;	// IMP=0x00000000009902c2
- (void)setDisableInteraction:(_Bool)arg1;	// IMP=0x0000000000990277
- (void)setKeyboardDim:(_Bool)arg1 amount:(double)arg2 withDuration:(double)arg3;	// IMP=0x000000000098feb7
- (void)dismissGestureKeyboardIntroduction;	// IMP=0x000000000098fe75
- (void)handleDismissFlickView;	// IMP=0x000000000098fe03
- (void)handleDismissFlickView:(id)arg1;	// IMP=0x000000000098fbe6
- (void)handlePopupView;	// IMP=0x000000000098fac9
- (void)handlePopupView:(id)arg1;	// IMP=0x000000000098f954
- (void)showFlickView:(long long)arg1 withKey:(id)arg2 flickString:(id)arg3;	// IMP=0x000000000098f8d5
- (_Bool)handleFlick:(id)arg1;	// IMP=0x000000000098f3dc
- (void)populateFlickPopupsForKey:(id)arg1;	// IMP=0x000000000098ee7b
- (id)flickStringForInputKey:(id)arg1 direction:(long long)arg2;	// IMP=0x000000000098ecb8
- (id)flickPopupStringForKey:(id)arg1 withString:(id)arg2;	// IMP=0x000000000098ec3a
- (void)finishContinuousPathView:(_Bool)arg1;	// IMP=0x000000000099172a
- (void)clearContinuousPathView;	// IMP=0x0000000000991635
- (void)addContinuousPathPoint:(struct CGPoint)arg1 withTimestamp:(double)arg2;	// IMP=0x00000000009914d1
- (void)didBeginContinuousPath;	// IMP=0x0000000000991154
- (void)transitionToPunctuationKeysVisible:(_Bool)arg1;	// IMP=0x000000000099114e
- (void)_transitionToContinuousPathState:(long long)arg1 forTouchInfo:(id)arg2;	// IMP=0x00000000009910b1
@property(retain, nonatomic) UIKeyboardPathEffectView *pathEffectView;
- (void)didMoveToWindow;	// IMP=0x00000000009909f7
- (_Bool)_continuousPathModalPunctuationPlaneEnabled;	// IMP=0x0000000000990949
- (_Bool)_continuousPathSpotlightEffectEnabled;	// IMP=0x00000000009908f4

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

