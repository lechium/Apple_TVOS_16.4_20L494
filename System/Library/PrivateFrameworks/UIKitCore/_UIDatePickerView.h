//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "UIPickerView.h"

@class NSCalendar, NSLocale, NSString, UIColor, UIDatePicker, UIFont, UILabel, _UIControlEventsGestureRecognizer, _UIDatePickerDataModel, _UIDatePickerMode, _UIDatePickerNumericKeyboardViewController, _UIDatePickerWheelsTimeLabel, _UIPassthroughScrollInteraction;

__attribute__((visibility("hidden")))
@interface _UIDatePickerView : UIPickerView
{
    long long _loadingDate;	// 216 = 0xd8
    _Bool _allowsZeroTimeInterval;	// 224 = 0xe0
    _UIDatePickerMode *_mode;	// 232 = 0xe8
    UILabel *_hourLabel;	// 240 = 0xf0
    UILabel *_minuteLabel;	// 248 = 0xf8
    int _expectedAMPM;	// 256 = 0x100
    struct {
        unsigned int staggerTimeIntervals:1;
        unsigned int loadingDateOrTime:1;
        unsigned int highlightsToday:1;
        unsigned int usesBlackChrome:1;
        unsigned int updatingWithKeyInput:1;
        unsigned int isPendingManualKeyboardPresentation:1;
        unsigned int isPresentingManualKeyboard:1;
        unsigned int selectionBarTableHidden:1;
        unsigned int receivedTextInputUpdate:1;
        unsigned int isPresentingOrDismissingKeyboard:1;
    } _datePickerFlags;	// 260 = 0x104
    _UIPassthroughScrollInteraction *_passthroughInteraction;	// 264 = 0x108
    UIDatePicker *_datePicker;	// 272 = 0x110
    _UIDatePickerDataModel *_data;	// 280 = 0x118
    _UIDatePickerNumericKeyboardViewController *_numericKeyboardViewController;	// 288 = 0x120
    _UIDatePickerWheelsTimeLabel *_timeInputLabel;	// 296 = 0x128
    _UIControlEventsGestureRecognizer *_controlEventsGestureRecognizer;	// 304 = 0x130
}

- (void).cxx_destruct;	// IMP=0x0000000000c1cb73
@property(readonly, nonatomic) _UIControlEventsGestureRecognizer *controlEventsGestureRecognizer; // @synthesize controlEventsGestureRecognizer=_controlEventsGestureRecognizer;
@property(readonly, nonatomic) _UIDatePickerWheelsTimeLabel *timeInputLabel; // @synthesize timeInputLabel=_timeInputLabel;
@property(readonly, nonatomic) _UIDatePickerNumericKeyboardViewController *numericKeyboardViewController; // @synthesize numericKeyboardViewController=_numericKeyboardViewController;
@property(retain, nonatomic) _UIDatePickerDataModel *data; // @synthesize data=_data;
@property(nonatomic) __weak UIDatePicker *datePicker; // @synthesize datePicker=_datePicker;
- (long long)datePickerMode;	// IMP=0x0000000000c1cae5
@property(readonly, nonatomic, getter=_hrMinFont) UIFont *hrMinFont; // @dynamic hrMinFont;
- (id)_hoursStringForHour:(long long)arg1;	// IMP=0x0000000000c1c9e2
- (id)_minutesStringForHour:(long long)arg1 minutes:(long long)arg2;	// IMP=0x0000000000c1c93b
- (long long)_selectionBarRowInComponent:(long long)arg1;	// IMP=0x0000000000c1c8f7
@property(readonly, nonatomic) struct UIEdgeInsets appliedInsetsToEdgeOfContent;
- (_Bool)hasDefaultSize;	// IMP=0x0000000000c1c88d
- (_Bool)_updateDateOrTime;	// IMP=0x0000000000c1c84a
@property(readonly, nonatomic, getter=_amPmValue) long long amPmValue; // @dynamic amPmValue;
- (id)_existingLabelForCalendarUnit:(unsigned long long)arg1;	// IMP=0x0000000000c1c7c6
- (id)_labelTextForCalendarUnit:(unsigned long long)arg1;	// IMP=0x0000000000c1c73f
- (id)_selectedTextForCalendarUnit:(unsigned long long)arg1;	// IMP=0x0000000000c1c644
@property(nonatomic) _Bool highlightsToday; // @dynamic highlightsToday;
- (_Bool)staggerTimeIntervals;	// IMP=0x0000000000c1c603
- (void)presentationControllerDidDismiss:(id)arg1;	// IMP=0x0000000000c1c5f1
- (void)presentationControllerWillDismiss:(id)arg1;	// IMP=0x0000000000c1c597
- (void)popoverPresentationController:(id)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;	// IMP=0x0000000000c1c4de
- (void)_dismissManualKeyboard;	// IMP=0x0000000000c1c363
- (void)_hardwareKeyboardAvailabilityChanged:(id)arg1;	// IMP=0x0000000000c1c283
- (_Bool)passthroughScrollInteractionDidRecognize:(id)arg1;	// IMP=0x0000000000c1c23f
- (_Bool)passthroughScrollInteraction:(id)arg1 shouldInteractAtLocation:(struct CGPoint)arg2 withEvent:(id)arg3;	// IMP=0x0000000000c1c0de
@property(nonatomic) _Bool passthroughInteractionEnabled;
- (void)wheelsTimeLabel:(id)arg1 didChangeVisibility:(_Bool)arg2;	// IMP=0x0000000000c1bfd7
- (_Bool)wheelsTimeLabelShouldReceiveInteraction:(id)arg1;	// IMP=0x0000000000c1bea3
- (void)_updateWheelsLabelForCurrentDateComponents;	// IMP=0x0000000000c1bdd4
- (void)timeLabelDidEndEditing:(id)arg1;	// IMP=0x0000000000c1bd60
- (void)timeLabelDidBeginEditing:(id)arg1;	// IMP=0x0000000000c1bd14
- (void)timeLabelDidResignFirstResponder:(id)arg1;	// IMP=0x0000000000c1bcf3
- (void)timeLabelDidFailToBecomeFirstResponder:(id)arg1;	// IMP=0x0000000000c1bccb
- (void)timeLabelDidBecomeFirstResponder:(id)arg1;	// IMP=0x0000000000c1b9c0
- (id)primaryFirstResponder;	// IMP=0x0000000000c1b9ae
- (unsigned long long)_permittedArrowDirectionForKeyboardPopover;	// IMP=0x0000000000c1b7e1
- (void)timeLabelWillBecomeFirstResponder:(id)arg1;	// IMP=0x0000000000c1b7db
- (_Bool)timeLabelCanBecomeFirstResponder:(id)arg1;	// IMP=0x0000000000c1b7c6
- (_Bool)timeLabelShouldSuppressSoftwareKeyboard:(id)arg1;	// IMP=0x0000000000c1b7be
- (long long)keyboardTypeForTimeLabel:(id)arg1;	// IMP=0x0000000000c1b7b3
- (void)timeLabel:(id)arg1 didUpdateText:(id)arg2;	// IMP=0x0000000000c1b79f
- (_Bool)timeLabel:(id)arg1 didReceiveText:(id)arg2;	// IMP=0x0000000000c1b797
- (void)_updateWheelsForUpdatedTextInputWithForcedUpdate:(_Bool)arg1;	// IMP=0x0000000000c1b0c3
- (void)_gestureRecognizerFailed:(id)arg1;	// IMP=0x0000000000c1afc3
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x0000000000c1ad6a
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;	// IMP=0x0000000000c1ac51
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;	// IMP=0x0000000000c1ab09
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x0000000000c1aa92
- (void)controlEventsGestureRecognizer:(id)arg1 recognizedControlEvent:(unsigned long long)arg2 withEvent:(id)arg3;	// IMP=0x0000000000c1a97e
- (void)_uninstallTimeInputLabelIfNeeded;	// IMP=0x0000000000c1a801
- (void)_installTimeInputLabelIfNeeded;	// IMP=0x0000000000c1a502
- (struct CGRect)_currentTimeInputLabelFrame;	// IMP=0x0000000000c1a478
- (id)_currentTimeFormat;	// IMP=0x0000000000c1a3d9
- (_Bool)_shouldInstallTimeInputLabelForDatePickerMode:(long long)arg1;	// IMP=0x0000000000c1a3c9
- (void)_updateTimeInputLabelConfiguration;	// IMP=0x0000000000c1a370
- (void)_hidePickerViewSelectionBarForTimeInputLabel:(_Bool)arg1;	// IMP=0x0000000000c1a23e
- (void)_updateTimeInputLabelPosition;	// IMP=0x0000000000c1a01e
- (id)_viewForSelectedRowInComponent:(long long)arg1;	// IMP=0x0000000000c19f83
@property(nonatomic, getter=_allowsZeroTimeInterval, setter=_setAllowsZeroTimeInterval:) _Bool allowsZeroTimeInterval;
@property(nonatomic, getter=_allowsZeroCountDownDuration, setter=_setAllowsZeroCountDownDuration:) _Bool allowsZeroCountDownDuration;
@property(nonatomic, getter=_usesBlackChrome, setter=_setUsesBlackChrome:) _Bool usesBlackChrome;
- (void)_setHidesLabels:(_Bool)arg1;	// IMP=0x0000000000c19dfb
- (void)_resetSelectionOfTables;	// IMP=0x0000000000c19df5
- (void)layoutSubviews;	// IMP=0x0000000000c19cdf
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x0000000000c19bc3
- (id)shadowColor;	// IMP=0x0000000000c19bb1
- (id)pickerView:(id)arg1 viewForRow:(long long)arg2 forComponent:(long long)arg3 reusingView:(id)arg4;	// IMP=0x0000000000c19a5a
- (double)pickerView:(id)arg1 widthForComponent:(long long)arg2;	// IMP=0x0000000000c199dc
- (double)pickerView:(id)arg1 rowHeightForComponent:(long long)arg2;	// IMP=0x0000000000c199bf
@property(readonly, nonatomic) double contentWidth; // @dynamic contentWidth;
@property(nonatomic) double timeInterval;
- (void)_updateEnabledCellsIncludingWMDCells:(_Bool)arg1;	// IMP=0x0000000000c19610
- (void)scrollViewWillBeginDragging:(id)arg1;	// IMP=0x0000000000c195fc
- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;	// IMP=0x0000000000c192d9
- (void)_fadeLabelForCalendarUnit:(unsigned long long)arg1 toText:(id)arg2 animated:(_Bool)arg3;	// IMP=0x0000000000c18efc
- (void)_updateTextColorForCalendarUnitLabel:(id)arg1;	// IMP=0x0000000000c18e8a
- (id)_makeNewCalendarUnitLabel;	// IMP=0x0000000000c18d4f
- (id)_contentViewForSizingLabelForPositioningInComponent:(long long)arg1;	// IMP=0x0000000000c18d2a
- (void)_positionLabel:(id)arg1 forCalendarUnit:(unsigned long long)arg2 relativeTo:(id)arg3 order:(long long)arg4;	// IMP=0x0000000000c187c7
- (void)_setLabel:(id)arg1 forCalendarUnit:(unsigned long long)arg2 animated:(_Bool)arg3;	// IMP=0x0000000000c18729
- (id)_labelForCalendarUnit:(unsigned long long)arg1 createIfNecessary:(_Bool)arg2;	// IMP=0x0000000000c18625
- (void)_UIAppearance_setTextColor:(id)arg1;	// IMP=0x0000000000c18613
@property(retain, nonatomic, getter=_textColor, setter=_setTextColor:) UIColor *textColor;
- (void)_updateLabelColors;	// IMP=0x0000000000c1850b
- (void)_updateLabels:(_Bool)arg1;	// IMP=0x0000000000c1840e
- (_Bool)_updatedLastSelectedComponentsByValidatingSelectedDateWithLastManipulatedComponent:(long long)arg1;	// IMP=0x0000000000c1822d
- (id)_componentsSelectedAfterEnforcingValidityOfComponents:(id)arg1 withLastManipulatedComponent:(long long)arg2;	// IMP=0x0000000000c18179
- (int)_selectedMinuteForColumn:(int)arg1;	// IMP=0x0000000000c1813d
- (int)_selectedHourForColumn:(int)arg1;	// IMP=0x0000000000c18101
- (void)_selectRow:(long long)arg1 inComponent:(long long)arg2 animated:(_Bool)arg3 notify:(_Bool)arg4;	// IMP=0x0000000000c180ad
- (void)_loadDateAnimated:(_Bool)arg1;	// IMP=0x0000000000c1801d
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;	// IMP=0x0000000000c17ffd
- (void)pickerTableView:(id)arg1 didChangeSelectionBarRowFrom:(long long)arg2 to:(long long)arg3;	// IMP=0x0000000000c17b32
- (void)didChangeRoundsToMinuteInterval;	// IMP=0x0000000000c17ad2
- (void)didChangeMinuteInterval;	// IMP=0x0000000000c17a14
- (void)didChangeMode;	// IMP=0x0000000000c178e7
- (void)_setMode:(id)arg1;	// IMP=0x0000000000c176cc
@property(readonly, nonatomic, getter=_isTimeIntervalMode) _Bool isTimeIntervalMode; // @dynamic isTimeIntervalMode;
- (long long)numberOfComponentsInPickerView:(id)arg1;	// IMP=0x0000000000c17692
- (void)_updateDateForNewDateRange;	// IMP=0x0000000000c1763d
- (void)didChangeMaximumDate;	// IMP=0x0000000000c1762b
- (void)didChangeMinimumDate;	// IMP=0x0000000000c17619
- (void)displaySelectedDateAnimated:(_Bool)arg1;	// IMP=0x0000000000c17613
- (void)didChangeDateFrom:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000c17406
- (void)_updateLocaleTimeZoneOrCalendar;	// IMP=0x0000000000c17316
- (void)didChangeCalendar;	// IMP=0x0000000000c17304
- (void)didChangeTimeZone;	// IMP=0x0000000000c172f2
- (void)didChangeLocale;	// IMP=0x0000000000c172e0
@property(readonly, nonatomic) long long datePickerStyle;
- (_Bool)_contentHuggingDefault_isUsuallyFixedWidth;	// IMP=0x0000000000c16b07
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;	// IMP=0x0000000000c16aff
- (_Bool)_showingDate;	// IMP=0x0000000000c16aad
- (void)_doneLoadingDateOrTime;	// IMP=0x0000000000c16a86
- (double)_tableRowHeight;	// IMP=0x0000000000c16a69
- (void)didReset;	// IMP=0x0000000000c16a57
- (void)didChangeToday;	// IMP=0x0000000000c16a12
- (void)_disableCustomKeyboardIfNecessary;	// IMP=0x0000000000c1698a
- (void)_enableCustomKeyboardIfNecessary;	// IMP=0x0000000000c16905
- (void)willMoveToSuperview:(id)arg1;	// IMP=0x0000000000c16882
- (void)willMoveToWindow:(id)arg1;	// IMP=0x0000000000c167ff
- (void)dealloc;	// IMP=0x0000000000c1678a
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000000c1661f

// Remaining properties
@property(readonly, nonatomic) NSCalendar *calendar; // @dynamic calendar;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic, getter=_highlightColor, setter=_setHighlightColor:) UIColor *highlightColor;
@property(readonly, nonatomic) NSLocale *locale; // @dynamic locale;
@property(retain, nonatomic, getter=_magnifierLineColor, setter=_setMagnifierLineColor:) UIColor *magnifierLineColor;
@property(readonly) Class superclass;
@property(retain, nonatomic, getter=_textShadowColor, setter=_setTextShadowColor:) UIColor *textShadowColor;

@end

