//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AFAnalyticsTurnBasedInstrumentationContext, CADisplayLink, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSNumber, NSString, NSTimer, UIDictationConnection, UIDictationConnectionPreferences, UIDictationInputModeOptions, UIDictationSerializableResults, UIDictationStreamingOperations, UIKeyboardInputMode, UIWindow, _UIDictationPrivacySheetController, _UIDictationTelephonyMonitor, _UITapTapHoldGestureRecognizer, _UIVoiceCommandButtonTapGestureRecognizer;

__attribute__((visibility("hidden")))
@interface UIDictationController : NSObject
{
    UIDictationConnection *_dictationConnection;	// 8 = 0x8
    UIDictationConnectionPreferences *_preferences;	// 16 = 0x10
    NSTimer *_recordingLimitTimer;	// 24 = 0x18
    _Bool _connectionWasAlreadyAliveForStatisticsLogging;	// 32 = 0x20
    UIDictationStreamingOperations *_streamingOperations;	// 40 = 0x28
    NSString *_language;	// 48 = 0x30
    _Bool _recievingResults;	// 56 = 0x38
    _Bool _streamingAnimationActive;	// 57 = 0x39
    double _lastAnimationUpdateTimeStamp;	// 64 = 0x40
    CDUnknownBlockType _finalResultsOperation;	// 72 = 0x48
    CADisplayLink *_streamingAnimationDisplayLink;	// 80 = 0x50
    _Bool cancelledByWaitingForLocalResults;	// 88 = 0x58
    long long _updatingDocument;	// 96 = 0x60
    long long _ignoreRTIChanges;	// 104 = 0x68
    _Bool _deferredCancellationRequested;	// 112 = 0x70
    _Bool _isOfflineMetricsSessionActive;	// 113 = 0x71
    _Bool _didUseOfflineDictation;	// 114 = 0x72
    long long _lastOfflineDictationMetricEvent;	// 120 = 0x78
    _UIDictationTelephonyMonitor *_monitor;	// 128 = 0x80
    NSString *_prefixTextForStart;	// 136 = 0x88
    NSString *_selectionTextForStart;	// 144 = 0x90
    NSString *_postfixTextForStart;	// 152 = 0x98
    _Bool _hasDictated;	// 160 = 0xa0
    NSDictionary *_selectedAttributesForDictation;	// 168 = 0xa8
    CDUnknownBlockType _privacySheetDismissalHandler;	// 176 = 0xb0
    int _dictationInputModeNotifierToken;	// 184 = 0xb8
    long long _currentShortcutType;	// 192 = 0xc0
    _UITapTapHoldGestureRecognizer *_hardwareShortcutRecognizer;	// 200 = 0xc8
    _UIVoiceCommandButtonTapGestureRecognizer *_hardwareVoiceCommandKeyRecognizer;	// 208 = 0xd0
    _Bool _prevForceDisplayOverridePlaceholder;	// 216 = 0xd8
    struct _NSRange _relativeRangeBefore;	// 224 = 0xe0
    NSString *_selectedTextAtStart;	// 240 = 0xf0
    _Bool _dictationInputModeSwitchStarted;	// 248 = 0xf8
    _Bool _performingStreamingEditingOperation;	// 249 = 0xf9
    _Bool _discardNextHypothesis;	// 250 = 0xfa
    _Bool _hasPreheated;	// 251 = 0xfb
    _Bool _logAppEnterBackground;	// 252 = 0xfc
    _Bool _modelessUsedAtLeastOnce;	// 253 = 0xfd
    _Bool __shouldUseDictationSearchFieldBehavior;	// 254 = 0xfe
    _Bool _shouldSuppressSoftwareKeyboard;	// 255 = 0xff
    _Bool _shouldStayInDictationInputMode;	// 256 = 0x100
    _Bool _sendButtonPressedDuringDictation;	// 257 = 0x101
    _Bool _hasInsertedAtLeastOneSerializedDictationResult;	// 258 = 0x102
    _Bool _didToggleSoftwareKeyboardVisibleForDictation;	// 259 = 0x103
    _Bool _wantsAvailabilityMonitoringWhenAppActive;	// 260 = 0x104
    _Bool _selectionEndWasInitiallyAtParagraphBoundaryForAsyncDelegate;	// 261 = 0x105
    _Bool _selectionStartWasInitiallyAtParagraphBoundaryForAsyncDelegate;	// 262 = 0x106
    _Bool _localSpeechRecognitionForced;	// 263 = 0x107
    _Bool _secureOfflineOnlySpeechRecognition;	// 264 = 0x108
    _Bool _ignoreFinalizePhrases;	// 265 = 0x109
    _Bool _shouldResumeDictation;	// 266 = 0x10a
    _Bool _ignoreIdleDetectionCallback;	// 267 = 0x10b
    _Bool _canUndoOrRedo;	// 268 = 0x10c
    _Bool _detectingUtterances;	// 269 = 0x10d
    _Bool _finalizingRecognizedUtterance;	// 270 = 0x10e
    _Bool _hasCheckedForLeadingSpaceOnce;	// 271 = 0x10f
    _Bool _selectionStartIsStartOfParagraph;	// 272 = 0x110
    _Bool _suppressDelegateTextInputDidChangeNotifications;	// 273 = 0x111
    unsigned short _initialPreviousCharacterForAsyncDelegate;	// 274 = 0x112
    unsigned short _initialCharacterAfterSelectionForAsyncDelegate;	// 276 = 0x114
    unsigned short _previousCharacter;	// 278 = 0x116
    NSString *_activationIdentifier;	// 280 = 0x118
    NSString *_smartLanguageSelectionOverrideLanguage;	// 288 = 0x120
    NSMutableArray *_pendingEdits;	// 296 = 0x128
    NSString *_previousHypothesis;	// 304 = 0x130
    NSString *_lastHypothesis;	// 312 = 0x138
    NSString *_targetHypothesis;	// 320 = 0x140
    UIWindow *_dictationPresenterWindow;	// 328 = 0x148
    unsigned long long _reasonType;	// 336 = 0x150
    NSString *_lastRecognitionText;	// 344 = 0x158
    id _lastCorrectionIdentifier;	// 352 = 0x160
    NSString *_interactionIdentifier;	// 360 = 0x168
    NSString *_lastMessageKeyboardLanguage;	// 368 = 0x170
    NSString *__inputDelegateClassName;	// 376 = 0x178
    UIKeyboardInputMode *_currentInputModeForDictation;	// 384 = 0x180
    UIKeyboardInputMode *_keyboardInputModeToReturn;	// 392 = 0x188
    NSTimer *_idleTimerResetTimer;	// 400 = 0x190
    UIDictationSerializableResults *_candidateDictationSerializableResults;	// 408 = 0x198
    NSMutableDictionary *_cachedDisplayLowStorageNotification;	// 416 = 0x1a0
    _UIDictationPrivacySheetController *_dictationPrivacySheetController;	// 424 = 0x1a8
    UIDictationInputModeOptions *_inputModeOptions;	// 432 = 0x1b0
    NSString *_detectedLanguage;	// 440 = 0x1b8
    NSArray *_dictationLanguages;	// 448 = 0x1c0
    NSString *_initialDictationLanguage;	// 456 = 0x1c8
    NSString *_fallbackDictationLanguage;	// 464 = 0x1d0
    unsigned long long _dictationSourceType;	// 472 = 0x1d8
    NSString *_currentKeyboardPrimaryLanguage;	// 480 = 0x1e0
    unsigned long long _stateHandler;	// 488 = 0x1e8
    NSString *_modelInfo;	// 496 = 0x1f0
    AFAnalyticsTurnBasedInstrumentationContext *_currentInstrumentationContext;	// 504 = 0x1f8
    struct _NSRange _insertionRange;	// 512 = 0x200
    struct _NSRange _preCommandExecutionPositionRange;	// 528 = 0x210
}

+ (unsigned long long)specificReasonTypeMicButtonOnKeyboardWithInputSwitcher;	// IMP=0x00100000009ba6f9
+ (unsigned long long)specificReasonTypeMicButtonOnKeyboard;	// IMP=0x00100000009ba6b7
+ (_Bool)isEventFromMessagesSendButton:(id)arg1 inspectResponderChain:(_Bool)arg2;	// IMP=0x00100000009ba342
+ (_Bool)isInputDelegateSafariAddressBar;	// IMP=0x00100000009ba1de
+ (_Bool)shouldPreferOnDeviceRecognition;	// IMP=0x00100000009ba105
+ (_Bool)shouldPreferOnlineRecognition;	// IMP=0x00100000009ba090
+ (void)instrumentationDictationAlternativeSelectedWithInstrumentationContext:(id)arg1 originalText:(id)arg2 replacementText:(id)arg3 replacementIndex:(unsigned long long)arg4 alternativesAvailableCount:(unsigned long long)arg5 dictationLanguage:(id)arg6;	// IMP=0x00100000009b9e50
+ (void)instrumentationDictationAlternativesViewedWithInstrumentationContext:(id)arg1 alternatives:(id)arg2 dictationLanguage:(id)arg3;	// IMP=0x00100000009b9bdf
+ (int)UIDictationStartStopReasonToInstrumentationDictationEndPointType:(unsigned long long)arg1;	// IMP=0x00100000009b9bc2
+ (int)UIDictationStartStopReasonToInstrumentationInvocationSourceType:(unsigned long long)arg1;	// IMP=0x00100000009b9ba5
+ (id)UIDictationInstrumentaionLocalIdentifierWithLocalString:(id)arg1;	// IMP=0x00100000009b9a67
+ (id)activeSLSDictationLanguages;	// IMP=0x00100000009b811d
+ (id)whitelistedDictationDictionariesFromMetadataDictionaries:(id)arg1;	// IMP=0x00100000009b7e81
+ (id)removeTextIfNeeded:(id)arg1 metadata:(id)arg2;	// IMP=0x00100000009b7e00
+ (id)removeTextIfNeeded:(id)arg1;	// IMP=0x00100000009b7d9b
+ (_Bool)shouldRemoveTextEntries;	// IMP=0x00100000009b7d86
+ (_Bool)canShareDictationData;	// IMP=0x00100000009b7ca5
+ (_Bool)shouldRemoveTextEntries:(id)arg1;	// IMP=0x00100000009b7c06
+ (id)whitelistedDictationDictionaryFromMetadata:(id)arg1;	// IMP=0x00100000009b79e5
+ (id)whitelistedDictationMetadataKeys;	// IMP=0x00100000009b7901
+ (id)dictionaryWithTextEntriesRemoved:(id)arg1;	// IMP=0x00100000009b7707
+ (id)arrayWithTextEntriesRemoved:(id)arg1;	// IMP=0x00100000009b74d8
+ (id)textRelatedMetadataKeys;	// IMP=0x00100000009b743d
+ (_Bool)isDictationSearchBarButtonVisible;	// IMP=0x00100000009b7387
+ (void)poppedLastStreamingOperation;	// IMP=0x00100000009b5f84
+ (id)stringForViewMode:(int)arg1;	// IMP=0x00100000009b5f63
+ (id)stringForState:(int)arg1;	// IMP=0x00100000009b5f42
+ (void)logDictationString:(id)arg1;	// IMP=0x00100000009b5f3c
+ (void)didBeginEditingInTextView:(id)arg1;	// IMP=0x00100000009b5e91
+ (id)streamingHypothesisForPhrases:(id)arg1;	// IMP=0x00100000009af693
+ (_Bool)dictationInfoIsOnScreen;	// IMP=0x00100000009aae77
+ (_Bool)shouldForwardEventsToInputSystemUI;	// IMP=0x00100000009a9af7
+ (_Bool)_isLowStorageForOnDeviceDictationAsset;	// IMP=0x00100000009a7350
+ (id)slsDictationLanguages;	// IMP=0x00100000009a6f81
+ (_Bool)_applicationIsActive;	// IMP=0x00100000009a6d95
+ (id)activeConnection;	// IMP=0x00100000009a6273
+ (_Bool)shouldForwardInInputSystemUI;	// IMP=0x00100000009a4eac
+ (int)viewMode;	// IMP=0x00100000009a2d91
+ (_Bool)starkSceneExists;	// IMP=0x00100000009a2baa
+ (_Bool)remoteCanDictateCurrentInputMode;	// IMP=0x00100000009a2ae5
+ (void)updateLandingView;	// IMP=0x00100000009a29eb
+ (void)performOperations:(CDUnknownBlockType)arg1 keyboardShifted:(_Bool)arg2;	// IMP=0x00100000009a29c6
+ (id)interpretation:(id)arg1 forPhraseIndex:(unsigned long long)arg2 isShiftLocked:(_Bool)arg3 autocapitalizationType:(long long)arg4 useServerCapitalization:(_Bool)arg5;	// IMP=0x00100000009a269d
+ (id)serializedInterpretationFromTokens:(id)arg1 transform:(struct __CFString *)arg2;	// IMP=0x00100000009a24d0
+ (void)remoteMicrophoneCapabilityChanged;	// IMP=0x00100000009a2482
+ (void)siriPreferencesChanged;	// IMP=0x00100000009a23fa
+ (void)applicationDidEnterBackgroundNotification;	// IMP=0x00100000009a21a2
+ (void)viewServiceWillResignActive;	// IMP=0x00100000009a2190
+ (void)applicationWillResignActive;	// IMP=0x00100000009a217e
+ (void)onWillResignActive;	// IMP=0x00100000009a1fd9
+ (void)keyboardDidShow;	// IMP=0x00100000009a1f24
+ (void)applicationDidBecomeActive;	// IMP=0x00100000009a1f12
+ (void)viewServiceDidBecomeActive;	// IMP=0x00100000009a1f00
+ (void)onDidBecomeActive;	// IMP=0x00100000009a1e06
+ (id)bestInterpretationForDictationResult:(id)arg1;	// IMP=0x00100000009a1d8b
+ (id)serializedDictationPhrases:(id)arg1;	// IMP=0x00100000009a1d34
+ (_Bool)shouldInsertText:(id)arg1 inInputDelegate:(id)arg2;	// IMP=0x00100000009a1c74
+ (_Bool)shouldDeleteBackwardInInputDelegate:(id)arg1;	// IMP=0x00100000009a1b44
+ (_Bool)takesPressesEnded:(id)arg1 forTextView:(id)arg2;	// IMP=0x00100000009a1a77
+ (_Bool)takesPressesChanged:(id)arg1 forTextView:(id)arg2;	// IMP=0x00100000009a1a6f
+ (_Bool)takesPressesBegan:(id)arg1 forTextView:(id)arg2;	// IMP=0x00100000009a1a00
+ (_Bool)shouldHideCursorForTextView:(id)arg1;	// IMP=0x00100000009a1909
+ (_Bool)shouldHideSelectionUIForTextView:(id)arg1;	// IMP=0x00100000009a18d4
+ (_Bool)isTextViewOnStarkScreen:(id)arg1;	// IMP=0x00100000009a1827
+ (void)keyboardDidUpdateOnScreenStatus;	// IMP=0x00100000009a164e
+ (void)keyboardWillChangeFromDelegate:(id)arg1 toDelegate:(id)arg2 shouldPause:(_Bool)arg3;	// IMP=0x00100000009a1076
+ (id)UIDictationLanguageSourceType:(unsigned long long)arg1;	// IMP=0x00100000009a0f09
+ (id)UIDictationStartStopReasonTypeDescription:(unsigned long long)arg1;	// IMP=0x00100000009a0ee5
+ (void)logCorrectionStatisticsForDelegate:(id)arg1 reason:(unsigned long long)arg2;	// IMP=0x001000000099fd63
+ (id)convertEditValuesToHashByPosition:(id)arg1 dictationResultEditType:(id)arg2;	// IMP=0x001000000099f8b5
+ (id)mergePunctuationInsertAndDeleteIntoSubstituteTypeForSameStartEnd:(id)arg1 deleteEditValues:(id)arg2;	// IMP=0x001000000099f53d
+ (id)stripNonPunctuationEditValues:(id)arg1;	// IMP=0x001000000099f263
+ (id)logAutoPunctuationEdit:(id)arg1 deletionValues:(id)arg2 substitutionValues:(id)arg3 withContext:(id)arg4;	// IMP=0x001000000099efb8
+ (_Bool)canPerformDictation;	// IMP=0x001000000099eea6
+ (_Bool)dictationIsFunctional;	// IMP=0x001000000099ecaa
+ (_Bool)fetchCurrentInputModeSupportsDictation;	// IMP=0x001000000099eb3d
+ (_Bool)checkTraitsSupportDictation:(id)arg1;	// IMP=0x001000000099eadd
+ (_Bool)_checkTraitsSupportDictation:(id)arg1;	// IMP=0x001000000099ea6c
+ (id)serializedInterpretationFromTokens:(id)arg1 transform:(struct __CFString *)arg2 autocapitalization:(long long)arg3 capitalization:(unsigned long long)arg4;	// IMP=0x001000000099e3bc
+ (id)serializedInterpretationFromTokens:(id)arg1 transform:(struct __CFString *)arg2 capitalization:(unsigned long long)arg3;	// IMP=0x001000000099e2e6
+ (_Bool)isRunningInTypeAndTalkMode;	// IMP=0x001000000099e159
+ (_Bool)isRunning;	// IMP=0x001000000099e125
+ (_Bool)isListening;	// IMP=0x001000000099e0f1
+ (_Bool)canUndoOrRedo;	// IMP=0x001000000099e0a6
+ (id)sharedInstance;	// IMP=0x001000000099e060
+ (id)activeInstance;	// IMP=0x001000000099e04f
+ (double)serverManualEndpointingThreshold;	// IMP=0x001000000099d9ef
+ (_Bool)usingServerManualEndpointingThreshold;	// IMP=0x001000000099d9a5
+ (id)_dictationLog;	// IMP=0x001000000099d920
- (void).cxx_destruct;	// IMP=0x00000000009bc8d7
@property(nonatomic) _Bool suppressDelegateTextInputDidChangeNotifications; // @synthesize suppressDelegateTextInputDidChangeNotifications=_suppressDelegateTextInputDidChangeNotifications;
@property(retain, nonatomic) AFAnalyticsTurnBasedInstrumentationContext *currentInstrumentationContext; // @synthesize currentInstrumentationContext=_currentInstrumentationContext;
@property(nonatomic) _Bool selectionStartIsStartOfParagraph; // @synthesize selectionStartIsStartOfParagraph=_selectionStartIsStartOfParagraph;
@property(nonatomic) unsigned short previousCharacter; // @synthesize previousCharacter=_previousCharacter;
@property(nonatomic) _Bool hasCheckedForLeadingSpaceOnce; // @synthesize hasCheckedForLeadingSpaceOnce=_hasCheckedForLeadingSpaceOnce;
@property(nonatomic, getter=isFinalizingRecognizedUtterance) _Bool finalizingRecognizedUtterance; // @synthesize finalizingRecognizedUtterance=_finalizingRecognizedUtterance;
@property(nonatomic, getter=isDetectingUtterances) _Bool detectingUtterances; // @synthesize detectingUtterances=_detectingUtterances;
@property(nonatomic) _Bool canUndoOrRedo; // @synthesize canUndoOrRedo=_canUndoOrRedo;
@property(nonatomic) _Bool ignoreIdleDetectionCallback; // @synthesize ignoreIdleDetectionCallback=_ignoreIdleDetectionCallback;
@property(nonatomic) _Bool shouldResumeDictation; // @synthesize shouldResumeDictation=_shouldResumeDictation;
@property(nonatomic) _Bool ignoreFinalizePhrases; // @synthesize ignoreFinalizePhrases=_ignoreFinalizePhrases;
@property(copy, nonatomic) NSString *modelInfo; // @synthesize modelInfo=_modelInfo;
@property(nonatomic) _Bool secureOfflineOnlySpeechRecognition; // @synthesize secureOfflineOnlySpeechRecognition=_secureOfflineOnlySpeechRecognition;
@property(nonatomic) _Bool localSpeechRecognitionForced; // @synthesize localSpeechRecognitionForced=_localSpeechRecognitionForced;
@property(nonatomic) unsigned long long stateHandler; // @synthesize stateHandler=_stateHandler;
@property(nonatomic) unsigned short initialCharacterAfterSelectionForAsyncDelegate; // @synthesize initialCharacterAfterSelectionForAsyncDelegate=_initialCharacterAfterSelectionForAsyncDelegate;
@property(nonatomic) unsigned short initialPreviousCharacterForAsyncDelegate; // @synthesize initialPreviousCharacterForAsyncDelegate=_initialPreviousCharacterForAsyncDelegate;
@property(nonatomic) _Bool selectionStartWasInitiallyAtParagraphBoundaryForAsyncDelegate; // @synthesize selectionStartWasInitiallyAtParagraphBoundaryForAsyncDelegate=_selectionStartWasInitiallyAtParagraphBoundaryForAsyncDelegate;
@property(nonatomic) _Bool selectionEndWasInitiallyAtParagraphBoundaryForAsyncDelegate; // @synthesize selectionEndWasInitiallyAtParagraphBoundaryForAsyncDelegate=_selectionEndWasInitiallyAtParagraphBoundaryForAsyncDelegate;
@property(copy, nonatomic) NSString *currentKeyboardPrimaryLanguage; // @synthesize currentKeyboardPrimaryLanguage=_currentKeyboardPrimaryLanguage;
@property(nonatomic) unsigned long long dictationSourceType; // @synthesize dictationSourceType=_dictationSourceType;
@property(copy, nonatomic) NSString *fallbackDictationLanguage; // @synthesize fallbackDictationLanguage=_fallbackDictationLanguage;
@property(copy, nonatomic) NSString *initialDictationLanguage; // @synthesize initialDictationLanguage=_initialDictationLanguage;
@property(retain, nonatomic) NSArray *dictationLanguages; // @synthesize dictationLanguages=_dictationLanguages;
@property(copy, nonatomic) NSString *detectedLanguage; // @synthesize detectedLanguage=_detectedLanguage;
@property(nonatomic) _Bool wantsAvailabilityMonitoringWhenAppActive; // @synthesize wantsAvailabilityMonitoringWhenAppActive=_wantsAvailabilityMonitoringWhenAppActive;
@property(retain, nonatomic) UIDictationInputModeOptions *inputModeOptions; // @synthesize inputModeOptions=_inputModeOptions;
@property(nonatomic) _Bool didToggleSoftwareKeyboardVisibleForDictation; // @synthesize didToggleSoftwareKeyboardVisibleForDictation=_didToggleSoftwareKeyboardVisibleForDictation;
@property(retain, nonatomic) _UIDictationPrivacySheetController *dictationPrivacySheetController; // @synthesize dictationPrivacySheetController=_dictationPrivacySheetController;
@property(retain, nonatomic) NSMutableDictionary *cachedDisplayLowStorageNotification; // @synthesize cachedDisplayLowStorageNotification=_cachedDisplayLowStorageNotification;
@property(retain, nonatomic) UIDictationSerializableResults *candidateDictationSerializableResults; // @synthesize candidateDictationSerializableResults=_candidateDictationSerializableResults;
@property(nonatomic) struct _NSRange preCommandExecutionPositionRange; // @synthesize preCommandExecutionPositionRange=_preCommandExecutionPositionRange;
@property(retain, nonatomic) NSTimer *idleTimerResetTimer; // @synthesize idleTimerResetTimer=_idleTimerResetTimer;
@property(nonatomic) _Bool hasInsertedAtLeastOneSerializedDictationResult; // @synthesize hasInsertedAtLeastOneSerializedDictationResult=_hasInsertedAtLeastOneSerializedDictationResult;
@property(nonatomic, getter=isSendButtonPressedDuringDictation) _Bool sendButtonPressedDuringDictation; // @synthesize sendButtonPressedDuringDictation=_sendButtonPressedDuringDictation;
@property(nonatomic) _Bool shouldStayInDictationInputMode; // @synthesize shouldStayInDictationInputMode=_shouldStayInDictationInputMode;
@property(retain, nonatomic) UIKeyboardInputMode *keyboardInputModeToReturn; // @synthesize keyboardInputModeToReturn=_keyboardInputModeToReturn;
@property(retain, nonatomic) UIKeyboardInputMode *currentInputModeForDictation; // @synthesize currentInputModeForDictation=_currentInputModeForDictation;
@property(nonatomic) _Bool shouldSuppressSoftwareKeyboard; // @synthesize shouldSuppressSoftwareKeyboard=_shouldSuppressSoftwareKeyboard;
@property(nonatomic) _Bool _shouldUseDictationSearchFieldBehavior; // @synthesize _shouldUseDictationSearchFieldBehavior=__shouldUseDictationSearchFieldBehavior;
@property(copy, nonatomic) NSString *_inputDelegateClassName; // @synthesize _inputDelegateClassName=__inputDelegateClassName;
@property(nonatomic) _Bool modelessUsedAtLeastOnce; // @synthesize modelessUsedAtLeastOnce=_modelessUsedAtLeastOnce;
@property(nonatomic) _Bool logAppEnterBackground; // @synthesize logAppEnterBackground=_logAppEnterBackground;
@property(copy, nonatomic) NSString *lastMessageKeyboardLanguage; // @synthesize lastMessageKeyboardLanguage=_lastMessageKeyboardLanguage;
@property(copy, nonatomic) NSString *interactionIdentifier; // @synthesize interactionIdentifier=_interactionIdentifier;
@property(copy, nonatomic) id lastCorrectionIdentifier; // @synthesize lastCorrectionIdentifier=_lastCorrectionIdentifier;
@property(copy, nonatomic) NSString *lastRecognitionText; // @synthesize lastRecognitionText=_lastRecognitionText;
@property(nonatomic) unsigned long long reasonType; // @synthesize reasonType=_reasonType;
@property(retain, nonatomic) UIWindow *dictationPresenterWindow; // @synthesize dictationPresenterWindow=_dictationPresenterWindow;
@property(nonatomic) _Bool hasPreheated; // @synthesize hasPreheated=_hasPreheated;
@property(nonatomic) struct _NSRange insertionRange; // @synthesize insertionRange=_insertionRange;
@property(nonatomic) _Bool discardNextHypothesis; // @synthesize discardNextHypothesis=_discardNextHypothesis;
@property(copy, nonatomic) NSString *targetHypothesis; // @synthesize targetHypothesis=_targetHypothesis;
@property(copy, nonatomic) NSString *lastHypothesis; // @synthesize lastHypothesis=_lastHypothesis;
@property(copy, nonatomic) NSString *previousHypothesis; // @synthesize previousHypothesis=_previousHypothesis;
@property(nonatomic) _Bool performingStreamingEditingOperation; // @synthesize performingStreamingEditingOperation=_performingStreamingEditingOperation;
@property(retain, nonatomic) NSMutableArray *pendingEdits; // @synthesize pendingEdits=_pendingEdits;
@property(copy) NSString *smartLanguageSelectionOverrideLanguage; // @synthesize smartLanguageSelectionOverrideLanguage=_smartLanguageSelectionOverrideLanguage;
@property(copy, nonatomic) NSString *activationIdentifier; // @synthesize activationIdentifier=_activationIdentifier;
- (void)removeSelectedText;	// IMP=0x00000000009bbebb
- (void)clearKeyboardTrackpadModeIfNeeded;	// IMP=0x00000000009bbde0
- (void)resumeSpeechRecognitionWithPrefixText:(id)arg1 postfixText:(id)arg2 selectedText:(id)arg3;	// IMP=0x00000000009bbc14
- (void)endUserInteraction;	// IMP=0x00000000009bba68
- (void)beginUserInteraction:(long long)arg1;	// IMP=0x00000000009bb654
- (void)resetDictation;	// IMP=0x00000000009bb5d6
- (void)resetSpeechRecognition;	// IMP=0x00000000009bb175
- (void)resumeDictation;	// IMP=0x00000000009bad66
- (void)pauseDictation;	// IMP=0x00000000009ba8f2
- (_Bool)isDictationPaused;	// IMP=0x00000000009ba8e6
- (void)insertLastHypothesisAsFinalResultLocally;	// IMP=0x00000000009ba73c
- (unsigned long long)specificReasonTypeFromApplicationDuringDictation;	// IMP=0x00000000009ba699
- (void)sendButtonPressedInMessages:(id)arg1;	// IMP=0x00000000009ba4dc
- (void)keyboardInputModeChanged:(id)arg1;	// IMP=0x00000000009ba34a
- (void)instrumentationDictationTranscriptionMetadataEmitInstrumentationWithDictationResult:(id)arg1;	// IMP=0x00000000009b939f
- (void)instrumentationDictationContextEmitInstrumentation;	// IMP=0x00000000009b8c7f
- (id)dictationUIState;	// IMP=0x00000000009b8842
- (void)keyboardDidHide:(id)arg1;	// IMP=0x00000000009b72a5
- (void)keyboardWillHide:(id)arg1;	// IMP=0x00000000009b7293
- (void)rtiInputSessionWillChangeToNewProcess:(id)arg1;	// IMP=0x00000000009b7150
- (_Bool)smartLanguageSelectionOverridden;	// IMP=0x00000000009b7148
- (void)endSmartLanguageSelectionOverride;	// IMP=0x00000000009b7142
- (void)overrideSmartLanguageSelection:(id)arg1;	// IMP=0x00000000009b713c
- (void)markKeyboardDidReset;	// IMP=0x00000000009b7124
- (void)markKeyboardDeleteMetricEvent;	// IMP=0x00000000009b70b8
- (void)markKeyboardInputMetricEvent;	// IMP=0x00000000009b704c
- (void)_markOfflineDictationInputMetricEvent;	// IMP=0x00000000009b7034
- (id)_currentLanguageForOfflineDictationMetrics;	// IMP=0x00000000009b6fb4
- (id)_assistantCompatibleLanguageCodeForInputMode:(id)arg1;	// IMP=0x00000000009b6ec4
- (void)_endOfflineMetricsSession;	// IMP=0x00000000009b6d67
- (void)_beginOfflineMetricsSession;	// IMP=0x00000000009b6d4d
- (void)preferencesChanged:(id)arg1;	// IMP=0x00000000009b6c1b
- (void)voiceCommandSingleTapKey:(id)arg1;	// IMP=0x00000000009b6a6f
- (void)dictationShortCutKey:(id)arg1;	// IMP=0x00000000009b691f
- (void)handleHardwareKeyboardGesture;	// IMP=0x00000000009b67ec
- (void)updateDoubleTapShortcutWithPreference:(long long)arg1;	// IMP=0x00000000009b6734
- (void)removeStartDictationKeyboardGestures;	// IMP=0x00000000009b6654
- (void)prepareStartDictationKeyboardGesturesForDelegate:(id)arg1;	// IMP=0x00000000009b65b2
- (void)prepareVoiceCommandSingleTapGesture:(id)arg1;	// IMP=0x00000000009b63f1
- (void)prepareDoubleTapShortcutGesture:(id)arg1;	// IMP=0x00000000009b6208
- (void)prepareStartDictationKeyboardGestures;	// IMP=0x00000000009b6132
- (void)setLanguage:(id)arg1;	// IMP=0x00000000009b60ee
- (id)language;	// IMP=0x00000000009b609a
- (void)preheatIfNecessary;	// IMP=0x00000000009b601e
- (_Bool)isRecievingResults;	// IMP=0x00000000009b6015
- (void)dictationConnection:(id)arg1 didReceiveCandidateDictationSerializableResults:(id)arg2;	// IMP=0x00000000009b5e7c
- (void)dictationConnectionDidFinish:(id)arg1;	// IMP=0x00000000009b5d99
- (void)dictationConnectionDidCancel:(id)arg1;	// IMP=0x00000000009b5d87
- (void)dictationConnection:(id)arg1 didDetectLanguage:(id)arg2;	// IMP=0x00000000009b5d72
- (void)dictationConnnectionDidChangeAvailability:(id)arg1;	// IMP=0x00000000009b5d60
- (void)dictationConnection:(id)arg1 didReceiveSearchResults:(id)arg2 recognizedText:(id)arg3 stable:(_Bool)arg4 final:(_Bool)arg5;	// IMP=0x00000000009b5c0d
- (id)_containingSearchBarForView:(id)arg1;	// IMP=0x00000000009b5b6b
- (void)dictationConnectionDidCancelIncompatibleLocalRecognizer:(id)arg1;	// IMP=0x00000000009b5b38
- (void)dictationConnection:(id)arg1 didBeginLocalRecognitionWithModelInfo:(id)arg2;	// IMP=0x00000000009b5aee
- (void)dictationConnection:(id)arg1 didFailRecognitionWithError:(id)arg2;	// IMP=0x00000000009b4ee9
- (void)dictationConnection:(id)arg1 didFailRecordingWithError:(id)arg2;	// IMP=0x00000000009b4d07
- (void)dictationConnectionDidCancelRecording:(id)arg1;	// IMP=0x00000000009b4cde
- (void)dictationConnectionDidEndRecording:(id)arg1;	// IMP=0x00000000009b4c2d
- (void)dictationConnection:(id)arg1 didStartRecordingWithOptions:(id)arg2;	// IMP=0x00000000009b4753
- (void)dictationConnectionDidStartRecording:(id)arg1;	// IMP=0x00000000009b4746
- (void)dictationConnectionWillStartRecording:(id)arg1;	// IMP=0x00000000009b455d
- (void)dictationConnection:(id)arg1 didFilterTokensWithFilterState:(id)arg2 forFinalize:(_Bool)arg3;	// IMP=0x00000000009b44ad
- (void)dictationConnection:(id)arg1 filterState:(id)arg2 processFilteredToken:(id)arg3 forFinalize:(_Bool)arg4;	// IMP=0x00000000009b43a4
- (_Bool)dictationConnection:(id)arg1 filterState:(id)arg2 shouldCheckpointAtToken:(id)arg3;	// IMP=0x00000000009b430e
- (CDUnknownBlockType)dictationBlockForToken:(id)arg1;	// IMP=0x00000000009b4157
- (id)dictationConnection:(id)arg1 willFilterTokensWithLanguageModel:(id)arg2 forFinalize:(_Bool)arg3;	// IMP=0x00000000009b40e8
- (void)dictationConnection:(id)arg1 receivedInterpretation:(id)arg2 languageModel:(id)arg3 secureInput:(_Bool)arg4;	// IMP=0x00000000009b3b51
- (void)setupToInsertResultForNewHypothesis:(id)arg1;	// IMP=0x00000000009b3a16
- (void)_updateLastHypothesis:(id)arg1 WithNewHypothesis:(id)arg2;	// IMP=0x00000000009b32a7
- (void)updateLastHypothesis:(id)arg1 WithNewHypothesis:(id)arg2;	// IMP=0x00000000009b304a
- (id)_getBestHypothesisRangeGivenHintRange:(id)arg1 inputDelegate:(id)arg2 hypothesisRange:(struct _NSRange *)arg3 documentTextInRange:(id *)arg4 forHypothesis:(id)arg5;	// IMP=0x00000000009b2931
- (id)_hypothesisRangeFromSelectionRange:(id)arg1 inputDelegate:(id)arg2 forHypothesis:(id)arg3;	// IMP=0x00000000009b27af
- (id)_rangeByExtendingRange:(id)arg1 backward:(long long)arg2 forward:(long long)arg3 inputDelegate:(id)arg4;	// IMP=0x00000000009b25f9
- (void)_displayLinkFired:(id)arg1;	// IMP=0x00000000009b1885
- (void)_startStreamingAnimations;	// IMP=0x00000000009b1784
- (void)_stopStreamingAnimation;	// IMP=0x00000000009b174d
- (void)dictationConnection:(id)arg1 finalizePhrases:(id)arg2 languageModel:(id)arg3 correctionIdentifier:(id)arg4 secureInput:(_Bool)arg5;	// IMP=0x00000000009b14b1
- (void)finishDictationRecognitionWithPhrases:(id)arg1 languageModel:(id)arg2 correctionIdentifier:(id)arg3 secureInput:(_Bool)arg4;	// IMP=0x00000000009b10df
- (void)finalizeDictationRecognitionWithPhrases:(id)arg1 languageModel:(id)arg2 correctionIdentifier:(id)arg3 secureInput:(_Bool)arg4 finalResult:(_Bool)arg5;	// IMP=0x00000000009b06bf
- (void)_clearExistingText;	// IMP=0x00000000009b057c
- (void)_deleteBackwardIntoText;	// IMP=0x00000000009b04e1
- (void)_insertSerializedDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;	// IMP=0x00000000009afebd
- (void)insertSerializedDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;	// IMP=0x00000000009afbbc
- (id)resultWithTrailingSpace:(id)arg1;	// IMP=0x00000000009afba0
- (void)logAlternativeSelected:(id)arg1 correctionIdentifier:(id)arg2 interactionIdentifier:(id)arg3;	// IMP=0x00000000009afb0b
- (void)didShowAlternatives:(id)arg1 correctionIdentifier:(id)arg2 interactionIdentifier:(id)arg3 instrumentationContext:(id)arg4 dictationLanguage:(id)arg5;	// IMP=0x00000000009afa0d
- (void)logDidAcceptReplacement:(id)arg1 replacementLanguageCode:(id)arg2 originalText:(id)arg3 correctionIdentifier:(id)arg4 interactionIdentifier:(id)arg5;	// IMP=0x00000000009af925
- (void)logDidAcceptDictationResult:(id)arg1 reasonType:(unsigned long long)arg2;	// IMP=0x00000000009af87c
- (struct __CFString *)resultTransformForLanguageModel:(id)arg1;	// IMP=0x00000000009af70e
- (_Bool)dictationIsModifyingText;	// IMP=0x00000000009af681
- (void)performIgnoringRTIChanges:(CDUnknownBlockType)arg1;	// IMP=0x00000000009af663
- (_Bool)isIgnoringRTIChanges;	// IMP=0x00000000009af655
- (void)performIgnoringDocumentChanges:(CDUnknownBlockType)arg1;	// IMP=0x00000000009af637
- (_Bool)isIgnoringDocumentChanges;	// IMP=0x00000000009af629
- (void)forceDictationReturnToKeyboardInputMode;	// IMP=0x00000000009af547
- (void)stopDictationAndResignFirstResponder;	// IMP=0x00000000009af44d
- (void)stopDictation;	// IMP=0x00000000009af41d
- (void)stopAndCancelDictationIfNeededWithReasonType:(unsigned long long)arg1;	// IMP=0x00000000009af323
- (void)cancelDictationForResponderIfNeeded:(id)arg1 wantsKeyboard:(_Bool)arg2 isPencil:(_Bool)arg3;	// IMP=0x00000000009aec05
- (void)stopAndCancelDictationWithReasonType:(unsigned long long)arg1;	// IMP=0x00000000009aeb13
- (void)stopDictationIgnoreFinalizePhrases;	// IMP=0x00000000009ae898
- (void)stopDictation:(_Bool)arg1;	// IMP=0x00000000009adee8
- (void)cancelDictationForTextStoreChangesInResponder:(id)arg1;	// IMP=0x00000000009ade09
- (void)cancelDictation;	// IMP=0x00000000009ad28d
- (struct _NSRange)_getRangeOfString:(id)arg1 inDocumentText:(id)arg2;	// IMP=0x00000000009acfdd
- (void)switchToDictationInputModeWithOptions:(id)arg1;	// IMP=0x00000000009acf42
- (void)switchToDictationInputMode;	// IMP=0x00000000009acec8
- (void)_touchPhaseChangedForTouch:(id)arg1;	// IMP=0x00000000009ace00
- (void)_handleDataSharingSheetDecision;	// IMP=0x00000000009acd8c
- (void)_handlePrivacySheetDismissal;	// IMP=0x00000000009acbf2
- (void)dictationPrivacySheetControllerDidFinish:(id)arg1;	// IMP=0x00000000009acad0
- (void)presentationControllerDidDismiss:(id)arg1;	// IMP=0x00000000009acabe
- (void)_presentPrivacySheetForType:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000009ac760
- (id)presentingViewControllerForPrivacySheet;	// IMP=0x00000000009ac710
- (void)_presentAlertForDictationInputModeOfType:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000009ac5fe
- (void)_presentDataSharingOptInAlertWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000009ac44d
- (void)_presentOptInAlertWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000009ac252
- (_Bool)shouldPresentOptInAlert;	// IMP=0x00000000009ac208
- (void)presentAlertOfType:(long long)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000000009ab9ce
- (void)_endEnableDictationPromptAnimated:(_Bool)arg1;	// IMP=0x00000000009ab91c
- (void)_presentEnablementAndDataSharingPromptIfNeeded:(CDUnknownBlockType)arg1;	// IMP=0x00000000009ab1ab
- (void)_createDictationPresenterWindowIfNecessary;	// IMP=0x00000000009aaf1b
- (void)setDictationInfoOnScreenNotifyKey:(_Bool)arg1;	// IMP=0x00000000009aaeb7
- (void)stopHelpMessageDisplay;	// IMP=0x00000000009aad7e
- (void)startHelpMessageDisplay;	// IMP=0x00000000009aa40a
- (void)restoreTextFieldPlaceholder;	// IMP=0x00000000009aa315
- (void)clearTextFieldPlaceholder;	// IMP=0x00000000009aa1e6
- (void)_displaySecureContentsAsPlainText:(_Bool)arg1 afterDelay:(double)arg2;	// IMP=0x00000000009aa10a
- (void)dismissSoftwareKeyboardIfNeeded;	// IMP=0x00000000009aa056
- (void)showSoftwareKeyboardIfNeeded;	// IMP=0x00000000009a9f35
- (void)postUIDictationControllerDictationDidFinish;	// IMP=0x00000000009a9e02
- (void)postUIKeyboardDictationAvailabilityDidChangeNotification;	// IMP=0x00000000009a9cd2
- (void)switchToDictationInputModeWithTouch:(id)arg1 options:(id)arg2;	// IMP=0x00000000009a9b10
- (void)switchToDictationInputModeWithTouch:(id)arg1;	// IMP=0x00000000009a9a5a
- (void)switchToDictationInputModeWithTouch:(id)arg1 withKeyboardInputMode:(id)arg2 options:(id)arg3;	// IMP=0x00000000009a9701
- (void)presentEnablementAndDataSharingPromptIfNeeded:(CDUnknownBlockType)arg1;	// IMP=0x00000000009a9644
- (void)switchToDictationLanguage:(id)arg1;	// IMP=0x00000000009a8f55
- (void)startDictationWithContinuation:(CDUnknownBlockType)arg1;	// IMP=0x00000000009a7cc6
- (void)startDictation;	// IMP=0x00000000009a7cb2
- (void)showLowStorageUserAlertWithLanguage:(id)arg1;	// IMP=0x00000000009a74e0
- (_Bool)isFallingBackToMonolingualDictation;	// IMP=0x00000000009a723b
- (void)_startDictationWithContinuation:(CDUnknownBlockType)arg1;	// IMP=0x00000000009a6da1
- (void)setupForDictationStart;	// IMP=0x00000000009a6b13
- (void)setupForAsyncDelegate;	// IMP=0x00000000009a6933
- (void)setupForStreamingDictationStart;	// IMP=0x00000000009a686b
- (void)dismissDictationView:(id)arg1;	// IMP=0x00000000009a6857
- (_Bool)dictationSearchFieldUISupportsTraitCollection:(id)arg1;	// IMP=0x00000000009a67fb
- (_Bool)_allowsMicsInSearchFieldForLanguageIdentifiers:(id)arg1;	// IMP=0x00000000009a6764
- (_Bool)dictationSearchFieldUIEnabled;	// IMP=0x00000000009a65d7
- (_Bool)currentViewModeSupportsDictationMics;	// IMP=0x00000000009a65b0
- (_Bool)dataSharingDecided;	// IMP=0x00000000009a65a8
- (_Bool)dictationEnabled;	// IMP=0x00000000009a63a9
- (id)connectionForStatisticsLogging;	// IMP=0x00000000009a638c
- (void)releaseConnectionAfterStatisticsLogging;	// IMP=0x00000000009a6386
- (void)releaseConnectionAfterDictationRequest;	// IMP=0x00000000009a6380
- (void)releaseConnection;	// IMP=0x00000000009a633b
- (id)dictationConnection;	// IMP=0x00000000009a62ca
- (void)stopIdleTimerResetTimer;	// IMP=0x00000000009a622c
- (void)resetIdleTimer;	// IMP=0x00000000009a6199
- (void)setIdleTimerDisabled:(_Bool)arg1 forReason:(id)arg2;	// IMP=0x00000000009a5f60
- (void)startRecordingLimitTimer;	// IMP=0x00000000009a5e77
- (void)stopDictationByTimer;	// IMP=0x00000000009a5d95
- (void)cancelRecordingLimitTimer;	// IMP=0x00000000009a5d4e
- (void)dealloc;	// IMP=0x00000000009a5c81
- (int)state;	// IMP=0x00000000009a5c75
- (void)errorAnimationDidFinish;	// IMP=0x00000000009a5c30
- (void)setState:(int)arg1;	// IMP=0x00000000009a569b
- (void)setAppState:(int)arg1;	// IMP=0x00000000009a53e5
- (void)setShadowState:(int)arg1;	// IMP=0x00000000009a52df
- (void)resignFirstResponderWhenIdleIfNeeded;	// IMP=0x00000000009a4fa9
- (void)switchToKeyboardInputModeIfNeeded;	// IMP=0x00000000009a4d74
- (void)endSessionIfNecessaryForTransitionFromState:(int)arg1 toState:(int)arg2;	// IMP=0x00000000009a4cf3
- (void)_runFinalizeOperation:(_Bool)arg1;	// IMP=0x00000000009a4c6a
- (void)_runFinalizeOperation;	// IMP=0x00000000009a4c56
- (void)_setupHypothesisAsFinalResults;	// IMP=0x00000000009a4a12
- (void)_setFinalResultHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000009a4944
- (void)_completeStartDictationWithContinuation:(CDUnknownBlockType)arg1;	// IMP=0x00000000009a4588
- (void)completeStartConnectionForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;	// IMP=0x00000000009a44c0
- (void)startDictationForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;	// IMP=0x00000000009a43e4
- (void)startConnectionWithContinuation:(CDUnknownBlockType)arg1;	// IMP=0x00000000009a430c
- (void)completeStartConnection;	// IMP=0x00000000009a42b7
- (void)dictationConnection:(id)arg1 updateOptions:(id)arg2;	// IMP=0x00000000009a3d98
- (id)_finalDictationStartLanguageCodeWithKeyboardInputMode:(id)arg1;	// IMP=0x00000000009a3b84
- (_Bool)useAutomaticEndpointing;	// IMP=0x00000000009a3afb
- (id)selectedTextForInputDelegate:(id)arg1;	// IMP=0x00000000009a39e1
- (id)postfixTextForInputDelegate:(id)arg1 wordCount:(unsigned long long)arg2;	// IMP=0x00000000009a3784
- (id)prefixTextForInputDelegate:(id)arg1 wordCount:(unsigned long long)arg2;	// IMP=0x00000000009a3524
- (id)fieldIdentifierInputDelegate:(id)arg1;	// IMP=0x00000000009a3352
@property(readonly, retain, nonatomic) NSNumber *dictationRequestOrigin;
- (_Bool)shouldOverrideManualEndpointing;	// IMP=0x00000000009a32e7
- (_Bool)shouldUseDictationSearchFieldBehavior;	// IMP=0x00000000009a322c
- (float)audioLevel;	// IMP=0x00000000009a31dc
- (_Bool)supportsInputMode:(id)arg1 error:(id *)arg2;	// IMP=0x00000000009a2ff5
- (_Bool)supportsDictationLanguage:(id)arg1 error:(id *)arg2;	// IMP=0x00000000009a2f3f
- (id)languageCodeForAssistantLanguageCode:(id)arg1;	// IMP=0x00000000009a2d9c
- (_Bool)remoteHasMicrophone;	// IMP=0x00000000009a2a9a
- (_Bool)_shouldInsertText:(id)arg1 inInputDelegate:(id)arg2;	// IMP=0x00000000009a1be0
- (_Bool)_shouldDeleteBackwardInInputDelegate:(id)arg1;	// IMP=0x00000000009a1aca
- (void)_restartDictation;	// IMP=0x00000000009a1a7f
- (void)setDictationInputMode:(id)arg1;	// IMP=0x00000000009a0f2d
- (_Bool)_resolvedIsDictationPossible;	// IMP=0x000000000099e1b9
- (_Bool)dictationDisabledDueToTelephonyActivity;	// IMP=0x000000000099e036
- (id)streamingOperations;	// IMP=0x000000000099dfd6
- (id)init;	// IMP=0x000000000099da74
- (float)maxRecordingLength;	// IMP=0x000000000099d97c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

