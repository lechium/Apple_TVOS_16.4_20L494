//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MPAVRoutingController, MPVolumeController, NSMutableOrderedSet, NSMutableSet, NSNumber, NSSet, NSString, PBApplicationProcessStateMonitor, PBBulletinService, PBSBulletin;
@protocol PBVolumeControllerDelegate;

@interface PBVolumeController : NSObject
{
    NSMutableOrderedSet *_appsWithVolumeHUDAssertion;	// 8 = 0x8
    NSMutableSet *_suspendedAppsWithVolumeHUDAssertion;	// 16 = 0x10
    NSString *_focusedSceneBundleIdentifier;	// 24 = 0x18
    PBApplicationProcessStateMonitor *_applicationStateMonitor;	// 32 = 0x20
    _Bool _isReady;	// 40 = 0x28
    _Bool _systemMusicVolumeSupported;	// 41 = 0x29
    _Bool _systemAudioVolumeSupported;	// 42 = 0x2a
    _Bool _systemMusicVolumeNotificationsEnabled;	// 43 = 0x2b
    _Bool _systemAudioVolumeNotificationsEnabled;	// 44 = 0x2c
    _Bool _updatingVolumeValues;	// 45 = 0x2d
    id <PBVolumeControllerDelegate> _delegate;	// 48 = 0x30
    PBBulletinService *_bulletinService;	// 56 = 0x38
    PBSBulletin *_volumeBulletin;	// 64 = 0x40
    MPAVRoutingController *_systemMusicRoutingController;	// 72 = 0x48
    MPAVRoutingController *_systemAudioRoutingController;	// 80 = 0x50
    MPVolumeController *_systemMusicVolumeController;	// 88 = 0x58
    MPVolumeController *_systemAudioVolumeController;	// 96 = 0x60
    NSNumber *_systemMusicVolume;	// 104 = 0x68
    NSNumber *_systemMusicVolume_unmuted;	// 112 = 0x70
    NSNumber *_systemAudioVolume;	// 120 = 0x78
    NSNumber *_systemAudioVolume_unmuted;	// 128 = 0x80
    NSSet *_systemMusicRoutes;	// 136 = 0x88
    NSSet *_systemAudioRoutes;	// 144 = 0x90
    NSString *_appWithVolumeHUDAssertion;	// 152 = 0x98
}

- (void).cxx_destruct;	// IMP=0x002000000005f927
@property(copy, nonatomic) NSString *appWithVolumeHUDAssertion; // @synthesize appWithVolumeHUDAssertion=_appWithVolumeHUDAssertion;
@property(readonly, nonatomic) _Bool updatingVolumeValues; // @synthesize updatingVolumeValues=_updatingVolumeValues;
@property(readonly, nonatomic) _Bool systemAudioVolumeNotificationsEnabled; // @synthesize systemAudioVolumeNotificationsEnabled=_systemAudioVolumeNotificationsEnabled;
@property(readonly, nonatomic) _Bool systemMusicVolumeNotificationsEnabled; // @synthesize systemMusicVolumeNotificationsEnabled=_systemMusicVolumeNotificationsEnabled;
@property(readonly, nonatomic) _Bool systemAudioVolumeSupported; // @synthesize systemAudioVolumeSupported=_systemAudioVolumeSupported;
@property(readonly, nonatomic) _Bool systemMusicVolumeSupported; // @synthesize systemMusicVolumeSupported=_systemMusicVolumeSupported;
@property(readonly, nonatomic) NSSet *systemAudioRoutes; // @synthesize systemAudioRoutes=_systemAudioRoutes;
@property(readonly, nonatomic) NSSet *systemMusicRoutes; // @synthesize systemMusicRoutes=_systemMusicRoutes;
@property(readonly, nonatomic) NSNumber *systemAudioVolume_unmuted; // @synthesize systemAudioVolume_unmuted=_systemAudioVolume_unmuted;
@property(readonly, nonatomic) NSNumber *systemAudioVolume; // @synthesize systemAudioVolume=_systemAudioVolume;
@property(readonly, nonatomic) NSNumber *systemMusicVolume_unmuted; // @synthesize systemMusicVolume_unmuted=_systemMusicVolume_unmuted;
@property(readonly, nonatomic) NSNumber *systemMusicVolume; // @synthesize systemMusicVolume=_systemMusicVolume;
@property(readonly, nonatomic) MPVolumeController *systemAudioVolumeController; // @synthesize systemAudioVolumeController=_systemAudioVolumeController;
- (id)systemMusicVolumeController;	// IMP=0x001000000005f884
@property(readonly, nonatomic) MPAVRoutingController *systemAudioRoutingController; // @synthesize systemAudioRoutingController=_systemAudioRoutingController;
@property(readonly, nonatomic) MPAVRoutingController *systemMusicRoutingController; // @synthesize systemMusicRoutingController=_systemMusicRoutingController;
@property(retain, nonatomic) PBSBulletin *volumeBulletin; // @synthesize volumeBulletin=_volumeBulletin;
@property(retain, nonatomic) PBBulletinService *bulletinService; // @synthesize bulletinService=_bulletinService;
@property(nonatomic) _Bool isReady; // @synthesize isReady=_isReady;
@property(readonly, nonatomic) __weak id <PBVolumeControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)applicationProcessStateMonitor:(id)arg1 updatedProcessState:(id)arg2;	// IMP=0x001000000005f7f9
- (void)sceneManager:(id)arg1 didChangeFocusFromScene:(id)arg2 toScene:(id)arg3;	// IMP=0x001000000005f70b
- (void)_updateAppVolumeHUDAssertions;	// IMP=0x001000000005f621
- (void)_updateApplicationStateForBundleIdentifier:(id)arg1;	// IMP=0x001000000005f5cb
- (void)_updateApplicationState:(id)arg1;	// IMP=0x001000000005f164
- (float)odeonVolumeStepForCurrentVolume:(float)arg1 isIncrementing:(_Bool)arg2;	// IMP=0x001000000005f0d4
- (_Bool)bluetoothActiveForRoutingController:(id)arg1;	// IMP=0x001000000005efe0
- (_Bool)odeonActiveForRoutingController:(id)arg1;	// IMP=0x001000000005ef45
- (void)_presentVolumeBulletinForRoutes:(id)arg1 volumeLevel:(float)arg2;	// IMP=0x001000000005ee7c
- (void)_updateVolumeWithReason:(id)arg1;	// IMP=0x001000000005e2eb
- (void)_setNeedsVolumeUpdateWithReason:(id)arg1;	// IMP=0x001000000005e167
- (void)bulletinService:(id)arg1 didDismissBulletin:(id)arg2 withReason:(unsigned long long)arg3;	// IMP=0x001000000005e12c
- (void)routingController:(id)arg1 pickedRoutesDidChange:(id)arg2;	// IMP=0x001000000005e040
- (void)volumeController:(id)arg1 mutedStateDidChange:(_Bool)arg2;	// IMP=0x001000000005ded3
- (void)volumeController:(id)arg1 volumeValueDidChange:(float)arg2;	// IMP=0x001000000005dd6c
- (void)volumeController:(id)arg1 volumeControlAvailableDidChange:(_Bool)arg2;	// IMP=0x001000000005dc0d
- (void)setSystemVolumeHUDSuppressed:(_Bool)arg1 forApp:(id)arg2;	// IMP=0x001000000005da1b
- (void)setVolumeNotificationsEnabled:(_Bool)arg1 forOutputContext:(unsigned long long)arg2;	// IMP=0x001000000005d955
- (_Bool)odeonActiveForOutputContext:(unsigned long long)arg1;	// IMP=0x001000000005d8e4
- (_Bool)volumeSupportedForOutputContext:(unsigned long long)arg1;	// IMP=0x001000000005d8d4
- (CDStruct_e6eb8490)currentVolumeStateForOutputContext:(unsigned long long)arg1;	// IMP=0x001000000005d75a
- (void)setVolumeMuted:(_Bool)arg1 forOutputContext:(unsigned long long)arg2;	// IMP=0x001000000005d231
- (void)decreaseVolumeForOutputContext:(unsigned long long)arg1;	// IMP=0x001000000005ce26
- (void)increaseVolumeForOutputContext:(unsigned long long)arg1;	// IMP=0x001000000005c98f
- (void)dealloc;	// IMP=0x001000000005c94d
- (void)_initMediaPlayer;	// IMP=0x001000000005c6c8
- (id)initWithDelegate:(id)arg1;	// IMP=0x001000000005c51b
- (id)init;	// IMP=0x001000000005c50d

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

